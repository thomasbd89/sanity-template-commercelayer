import BaseClass from "../utils/BaseClass";
import { OrderCollection } from './Order';
import { CustomerCollection } from './Customer';
import { InventoryReturnLocationCollection } from './InventoryReturnLocation';
import { StockLocationCollection } from './StockLocation';
import { AddressCollection } from './Address';
import { MultiRelationship, SingleRelationship } from "../typings/Library";
import { ReturnLineItemCollection } from './ReturnLineItem';
import { AttachmentCollection } from './Attachment';
export declare class ReturnCollection extends BaseClass {
    static className: string;
    number: string;
    status: string | 'draft' | 'pending' | 'approved' | 'rejected' | 'shipped' | 'received';
    customerEmail: string;
    skusCount: number;
    approvedAt: Date;
    rejectedAt: Date;
    shippedAt: Date;
    receivedAt: Date;
    archivedAt: Date;
    _request: boolean;
    _approve: boolean;
    _reject: boolean;
    _ship: boolean;
    _receive: boolean;
    _restock: boolean;
    _archive: boolean;
    _unarchive: boolean;
    createdAt: Date;
    updatedAt: Date;
    reference: string;
    referenceOrigin: string;
    metadata: object;
    order: () => SingleRelationship<OrderCollection>;
    customer: () => SingleRelationship<CustomerCollection>;
    inventoryReturnLocation: () => SingleRelationship<InventoryReturnLocationCollection>;
    stockLocation: () => SingleRelationship<StockLocationCollection>;
    originAddress: () => SingleRelationship<AddressCollection>;
    destinationAddress: () => SingleRelationship<AddressCollection>;
    returnLineItems: () => MultiRelationship<ReturnLineItemCollection>;
    attachments: () => MultiRelationship<AttachmentCollection>;
    static define(): void;
}
declare const InventoryModel: import("../typings/Library").BaseResource<ReturnCollection>;
export default InventoryModel;
