import BaseClass from "../utils/BaseClass";
import { MultiRelationship, SingleRelationship } from "../typings/Library";
import { OrderCollection } from './Order';
import { CaptureCollection } from './Capture';
import { VoidCollection } from './Void';
export declare class AuthorizationCollection extends BaseClass {
    static className: string;
    number: string;
    currencyCode: string;
    amountCents: number;
    amountFloat: number;
    formattedAmount: string;
    succeeded: boolean;
    message: string;
    errorCode: string;
    errorDetail: string;
    cvvCode: string;
    cvvMessage: string;
    avsCode: string;
    avsMessage: string;
    fraudReview: string;
    gatewayTransactionId: string;
    _capture: boolean;
    _captureAmountCents: number;
    captureAmountCents: number;
    captureAmountFloat: number;
    formattedCaptureAmount: string;
    captureBalanceCents: number;
    captureBalanceFloat: number;
    formattedCaptureBalance: string;
    _void: boolean;
    voidBalanceCents: number;
    voidBalanceFloat: number;
    formattedVoidBalance: string;
    createdAt: Date;
    updatedAt: Date;
    reference: string;
    referenceOrigin: string;
    metadata: object;
    order: () => SingleRelationship<OrderCollection>;
    captures: () => MultiRelationship<CaptureCollection>;
    voids: () => MultiRelationship<VoidCollection>;
    static define(): void;
}
declare const Authorization: import("../typings/Library").BaseResource<AuthorizationCollection>;
export default Authorization;
