import BaseClass from "../utils/BaseClass";
import { MultiRelationship, SingleRelationship } from "../typings/Library";
import { OrderCollection } from './Order';
import { AuthorizationCollection } from './Authorization';
import { RefundCollection } from './Refund';
export declare class CaptureCollection extends BaseClass {
    static className: string;
    number: string;
    currencyCode: string;
    amountCents: number;
    amountFloat: number;
    formattedAmount: string;
    succeeded: boolean;
    message: string;
    errorCode: string;
    errorDetail: string;
    token: string;
    gatewayTransactionId: string;
    _refund: boolean;
    _refundAmountCents: number;
    refundAmountCents: number;
    refundAmountFloat: number;
    formattedRefundAmount: string;
    refundBalanceCents: number;
    refundBalanceFloat: number;
    formattedRefundBalance: string;
    createdAt: Date;
    updatedAt: Date;
    reference: string;
    referenceOrigin: string;
    metadata: object;
    order: () => SingleRelationship<OrderCollection>;
    referenceAuthorization: () => SingleRelationship<AuthorizationCollection>;
    refunds: () => MultiRelationship<RefundCollection>;
    static define(): void;
}
declare const Capture: import("../typings/Library").BaseResource<CaptureCollection>;
export default Capture;
