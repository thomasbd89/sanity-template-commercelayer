import BaseClass from "../utils/BaseClass";
import { MultiRelationship, SingleRelationship } from "../typings/Library";
import { OrderCollection } from './Order';
import { CustomerSubscriptionCollection } from './CustomerSubscription';
import { CustomerAddressCollection } from './CustomerAddress';
import { CustomerPaymentSourceCollection } from './CustomerPaymentSource';
import { CustomerGroupCollection } from './CustomerGroup';
export declare class CustomerCollection extends BaseClass {
    static className: string;
    createdAt: Date;
    email: string;
    hasPassword: boolean;
    id: string;
    metadata: object;
    password: string;
    passwordBlank: boolean;
    passwordPresent: boolean;
    reference: string;
    referenceOrigin: string;
    status: 'prospect' | 'acquired' | 'repeat';
    updatedAt: Date;
    customerAddresses: () => MultiRelationship<CustomerAddressCollection>;
    customerPaymentSources: () => MultiRelationship<CustomerPaymentSourceCollection>;
    customerSubscriptions: () => MultiRelationship<CustomerSubscriptionCollection>;
    orders: () => MultiRelationship<OrderCollection>;
    customerGroup: () => SingleRelationship<CustomerGroupCollection>;
    static define(): void;
}
declare const Customer: import("../typings/Library").BaseResource<CustomerCollection>;
export default Customer;
