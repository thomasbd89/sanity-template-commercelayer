import BaseClass from "../utils/BaseClass";
import { MultiRelationship, SingleRelationship } from "../typings/Library";
import { ShippingMethodCollection } from './ShippingMethod';
import { ParcelCollection } from './Parcel';
import { AttachmentCollection } from './Attachment';
import { ShippingCategoryCollection } from './ShippingCategory';
import { StockLocationCollection } from './StockLocation';
import { AddressCollection } from './Address';
import { ShipmentLineItemCollection } from './ShipmentLineItem';
import { StockTransferCollection } from './StockTransfer';
export declare class ShipmentCollection extends BaseClass {
    static className: string;
    _getRates: number;
    _onHold: number;
    _packing: number;
    _picking: number;
    _purchase: number;
    _readyToShip: number;
    _ship: number;
    costAmountCents: number;
    costAmountFloat: number;
    createdAt: Date;
    currencyCode: string;
    formattedCostAmount: string;
    id: string;
    metadata: object;
    number: string;
    reference: string;
    referenceOrigin: string;
    selectedRateId: string;
    status: string;
    updatedAt: Date;
    attachments: () => MultiRelationship<AttachmentCollection>;
    availableShippingMethods: () => MultiRelationship<ShippingMethodCollection>;
    parcels: () => MultiRelationship<ParcelCollection>;
    shipmentLineItems: () => MultiRelationship<ShipmentLineItemCollection>;
    shippingAddress: () => SingleRelationship<AddressCollection>;
    shippingCategory: () => SingleRelationship<ShippingCategoryCollection>;
    shippingMethod: () => SingleRelationship<ShippingMethodCollection>;
    stockLocation: () => SingleRelationship<StockLocationCollection>;
    stockTransfers: () => MultiRelationship<StockTransferCollection>;
    static define(): void;
}
declare const Shipment: import("../typings/Library").BaseResource<ShipmentCollection>;
export default Shipment;
