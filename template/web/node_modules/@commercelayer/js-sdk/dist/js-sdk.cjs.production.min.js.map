{"version":3,"file":"js-sdk.cjs.production.min.js","sources":["../src/utils/helpers.ts","../src/resources/library.ts","../src/utils/BaseClass.ts","../src/resources/Address.ts","../src/resources/Attachment.ts","../src/resources/CustomerAddress.ts","../src/resources/CustomerGroup.ts","../src/resources/CustomerPasswordReset.ts","../src/resources/CustomerPaymentSource.ts","../src/resources/CustomerSubscription.ts","../src/resources/Customer.ts","../src/resources/DeliveryLeadTime.ts","../src/resources/Import.ts","../src/resources/InStockSubscription.ts","../src/resources/InventoryModel.ts","../src/resources/LineItemOption.ts","../src/resources/LineItem.ts","../src/resources/Market.ts","../src/resources/Merchant.ts","../src/resources/Order.ts","../src/resources/Parcel.ts","../src/resources/PaymentMethod.ts","../src/resources/PaymentGateway.ts","../src/resources/PaypalPayment.ts","../src/resources/Price.ts","../src/resources/PriceList.ts","../src/resources/Shipment.ts","../src/resources/ShippingCategory.ts","../src/resources/ShippingMethod.ts","../src/resources/ShippingZone.ts","../src/resources/SkuOption.ts","../src/resources/Sku.ts","../src/resources/SkuList.ts","../src/resources/SkuListItem.ts","../src/resources/StockItem.ts","../src/resources/InventoryStockLocation.ts","../src/resources/StockLocation.ts","../src/resources/Webhook.ts","../src/resources/WireTransfer.ts","../src/resources/Initialize.ts","../src/resources/Geocoder.ts","../src/resources/PaymentSource.ts","../src/resources/Item.ts","../src/resources/Attachable.ts","../src/resources/GiftCard.ts","../src/resources/GiftCardRecipient.ts","../src/resources/AdyenPayment.ts","../src/resources/BraintreePayment.ts","../src/resources/StripePayment.ts","../src/resources/ExternalPayment.ts","../src/resources/Package.ts","../src/resources/Adjustment.ts","../src/resources/Capture.ts","../src/resources/Authorization.ts","../src/resources/BillingInfoValidationRule.ts","../src/resources/Refund.ts","../src/resources/Void.ts","../src/resources/CouponCodesPromotionRule.ts","../src/resources/Coupon.ts","../src/resources/ExternalPromotion.ts","../src/resources/FixedAmountPromotion.ts","../src/resources/FreeShippingPromotion.ts","../src/resources/OrderAmountPromotionRule.ts","../src/resources/PercentageDiscountPromotion.ts","../src/resources/PromotionRule.ts","../src/resources/Promotion.ts","../src/resources/SkuListPromotionRule.ts","../src/resources/InventoryReturnLocation.ts","../src/resources/Return.ts","../src/resources/ExternalTaxCalculator.ts","../src/resources/ManualTaxCalculator.ts","../src/resources/TaxCalculator.ts","../src/resources/TaxRule.ts","../src/resources/TaxjarAccount.ts","../src/resources/ReturnLineItem.ts","../src/resources/ShipmentLineItem.ts","../src/resources/TaxCategory.ts","../src/resources/StockTransfer.ts","../src/resources/AvalaraAccount.ts","../src/resources/Organization.ts","../src/index.ts"],"sourcesContent":["import _ from 'lodash'\n\nexport const cleanUrl = (url: string) => {\n  const lastSlash = url.lastIndexOf('/') + 1\n  if (lastSlash === url.length) {\n    return url.substring(0, url.length - 1)\n  }\n  return url\n}\n\ntype FilterParams = Partial<{\n  filter: {\n    q: object\n  }\n  fields: object\n  include: string\n  page: {\n    size: number\n    number: number\n  }\n}>\n\nexport const parserParams = <P extends FilterParams>(params: P): P => {\n  if (!_.isEmpty(params.filter) && !_.has(params.filter, 'q')) {\n    params.filter = {\n      q: params.filter,\n    }\n  }\n  if (!_.isEmpty(params.fields) && !_.isEmpty(params.include)) {\n    const expInclude = params.include.split(',')\n    const includeKey = _.findKey(params.fields, (v: string) => {\n      return !_.isEmpty(params.include) && v.search(params.include) !== -1\n        ? true\n        : false\n    })\n    const expFields = params.fields[includeKey].split(',')\n    const fields = expFields\n      .map((field) => {\n        return expInclude.includes(field) ? _.first(field.split('.')) : field\n      })\n      .join(',')\n    params.fields[includeKey] = fields\n  }\n  return params\n}\n","// TODO remove ts-ignore comments\nimport {\n  createResourceLibrary,\n  // @ts-ignore\n  CollectionResponse,\n} from 'active-resource'\nimport Library, { GeneralObject } from '#typings/Library'\nimport { InitConfig } from './Initialize'\nimport _ from 'lodash'\nimport BaseClass from '#utils/BaseClass'\nimport { cleanUrl, parserParams } from '#utils/helpers'\n\nconst subdomain = 'yourdomain'\n\nconst library: Library = createResourceLibrary(\n  `https://${subdomain}.commercelayer.io/api/`\n)\n\nlibrary['customRequests'] = {}\n\nclass ExtendLibrary extends library.Base {\n  static accessToken = ''\n  static endpoint = ''\n  static singleRequest = false\n  static meta = {}\n  constructor() {\n    super()\n    return this\n  }\n  static includes(...params: string[]) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.includes(...params)\n  }\n  static select(...params: string[]) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.select(...params)\n  }\n  static order(params: object) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.order(params)\n  }\n  static page(value?: number) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.page(value)\n  }\n  static perPage(value?: number) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.perPage(value)\n  }\n  static limit(value: any) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.limit(value)\n  }\n  static offset(value: any) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.offset(value)\n  }\n  static where(options: object): any {\n    // @ts-ignore\n    const relation = super.where({\n      q: { ...options },\n    })\n    this.includeMetaInfo(relation.interface().axios.interceptors)\n    return relation\n  }\n  static all() {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.all()\n  }\n  static findBy(options: GeneralObject): any {\n    const eqOptions: GeneralObject = {}\n    Object.keys(options).map((v: string) => {\n      eqOptions[`${v}_eq`] = options[v]\n    })\n    return this.where(eqOptions).first()\n  }\n  static withCredentials({ accessToken, endpoint }: InitConfig) {\n    if (!this.accessToken && !this.endpoint) {\n      if (!this.resourceLibrary.headers?.Authorization) {\n        this.accessToken = `Bearer `\n        this.endpoint = this.resourceLibrary.baseUrl\n      } else {\n        this.accessToken = this.resourceLibrary.headers.Authorization\n        this.endpoint = this.resourceLibrary.baseUrl\n      }\n    }\n    this.resourceLibrary.headers = {\n      Authorization: `Bearer ${accessToken}`,\n    }\n    this.__links = { related: `${endpoint}/api/${this.queryName}` }\n    this.singleRequest = true\n    return this\n  }\n  static includeMetaInfo(interceptors: any = null, klass: any = this) {\n    // @ts-ignore\n    const i = interceptors || this.resourceLibrary.interface.axios.interceptors\n    this.setInterceptors(i, klass)\n    return this\n  }\n  static find(paramKey: string) {\n    this.includeMetaInfo()\n    return super.find(paramKey)\n  }\n  static setCustomInterceptors(interceptors: InitConfig['interceptors']) {\n    library.customInterceptors = interceptors\n    return this\n  }\n  static setInterceptors(interceptors: any, _klass: any = null) {\n    const classThis = this\n    const interceptReq = interceptors?.request\n    const interceptResp = interceptors?.response\n    const respHandlers = interceptResp?.handlers\n    interceptReq.use(\n      (config) => {\n        if (!_.isEmpty(config.params)) {\n          config.params = parserParams(config.params)\n        }\n        if (\n          !_.isEmpty(library?.customInterceptors?.request) &&\n          _.has(library?.customInterceptors?.request, 'before')\n        ) {\n          return library.customInterceptors.request.before(config)\n        }\n        return config\n      },\n      (error) => {\n        if (\n          !_.isEmpty(library?.customInterceptors?.request) &&\n          _.has(library?.customInterceptors?.request, 'error')\n        ) {\n          return library.customInterceptors.request.error(error)\n        }\n        return Promise.reject(error)\n      }\n    )\n    if (respHandlers?.length === 1) {\n      interceptResp.handlers.shift()\n      interceptResp.use(\n        (config: any) => {\n          if (!config['data']) return config\n          const meta = _.isArray(config.data.data)\n            ? config.data.meta\n            : config.data.data.meta\n          const metaCamelCase = library.interface.toCamelCase(meta)\n          classThis.meta = metaCamelCase\n          // config.data.collectionParent = classThis\n          const url = cleanUrl(config.config.url)\n          library.customRequests = {}\n          library.customRequests[url] = {\n            ...config.data,\n            headers: config.headers,\n            collectionParent: classThis,\n          }\n          if (\n            !_.isEmpty(library?.customInterceptors?.response) &&\n            _.has(library?.customInterceptors?.response, 'before')\n          ) {\n            return library.customInterceptors.response.before(config)\n          }\n          return config\n        },\n        (error: any) => {\n          if (\n            !_.isEmpty(library?.customInterceptors?.response) &&\n            _.has(library?.customInterceptors?.response, 'error')\n          ) {\n            return library.customInterceptors.response.error(error)\n          }\n          return Promise.reject(error)\n        }\n      )\n    }\n  }\n}\n\nconst setMetaByRequest = <T extends BaseClass>(child: T) => {\n  _.map(library.customRequests, (req) => {\n    if (!_.isEmpty(req.headers)) {\n      child.setHeaders(req.headers)\n    }\n    if (_.isArray(req.data)) {\n      // @ts-ignore\n      const childData = _.first(req.data.filter((v) => child.id === v.id))\n      if (!_.isEmpty(childData)) {\n        const collectionMeta = library.interface.toCamelCase(req.meta)\n        const meta = library.interface.toCamelCase(childData.meta)\n        child.setMetaInfo(meta)\n        child.setCollectionMetaInfo(collectionMeta)\n      }\n    } else {\n      const meta = library.interface.toCamelCase(req.data.meta)\n      child.setMetaInfo(meta)\n    }\n  })\n}\n\nExtendLibrary.afterBuild(function() {\n  // @ts-ignore\n  delete this.__meta\n  // @ts-ignore\n  delete this.__collectionMeta\n  // @ts-ignore\n  delete this.__headers\n})\n\nExtendLibrary.afterRequest(function() {\n  // @ts-ignore\n  const klass = this\n  // @ts-ignore\n  setMetaByRequest<typeof klass>(this)\n  // @ts-ignore\n  if (this.constructor.singleRequest) {\n    // @ts-ignore\n    this.constructor.resourceLibrary.baseUrl = this.constructor.endpoint\n    // @ts-ignore\n    this.constructor.resourceLibrary.headers = {\n      // @ts-ignore\n      Authorization: this.constructor.accessToken,\n    }\n    // @ts-ignore\n    this.constructor.__links = null\n    // @ts-ignore\n    this.constructor.singleRequest = false\n  }\n})\n\nCollectionResponse.prototype.getMetaInfo = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return {}\n  }\n  return _.has(firstItem, '__collectionMeta')\n    ? firstItem.__collectionMeta\n    : firstItem.getMetaInfo()\n}\n\nCollectionResponse.prototype.getHeaders = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return {}\n  }\n  return _.has(firstItem, '__headers')\n    ? firstItem.__headers\n    : firstItem.getHeaders()\n}\n\nCollectionResponse.prototype.pageCount = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return 0\n  }\n  return _.has(firstItem, '__collectionMeta.pageCount')\n    ? firstItem.__collectionMeta.pageCount\n    : this.first().pageCount()\n}\n\nCollectionResponse.prototype.recordCount = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return 0\n  }\n  return _.has(firstItem, '__collectionMeta.recordCount')\n    ? firstItem.__collectionMeta.recordCount\n    : this.first().recordCount()\n}\n\nCollectionResponse.prototype.withCredentials = function({\n  accessToken,\n}: // endpoint, NOTE: To understand\nInitConfig) {\n  library.headers = {\n    Authorization: `Bearer ${accessToken}`,\n  }\n  library.singleRequest = true\n  return this\n}\n\nlibrary.Base = ExtendLibrary\n\nexport default library\n","// TODO remove ts-ignore comments\nimport { InitConfig } from '#resources/Initialize'\nimport library from '#resources/library'\nimport {\n  HeadersResponse,\n  MultiRelationship,\n  SingleRelationship,\n} from '#typings/Library'\n\nexport type Meta = {\n  pageCount?: number\n  recordCount?: number\n  mode?: string\n}\n\nclass BaseClass extends library.Base {\n  __meta: Meta = {}\n  __collectionMeta: Meta = {}\n  __headers: HeadersResponse | {} = {}\n  includes: (...attribute: string[]) => this\n  all: () =>\n    | Promise<MultiRelationship<this>>\n    | Promise<SingleRelationship<this>>\n  // errors: () => Errors<this>\n  // update: (attrs: object, callback?: (response: this) => void) => this\n  getMetaInfo() {\n    return this.__meta\n  }\n  getHeaders() {\n    return this.__headers\n  }\n  pageCount() {\n    return this.__meta.pageCount\n  }\n  recordCount() {\n    return this.__meta.recordCount\n  }\n  mode() {\n    return this.__meta.mode\n  }\n  setMetaInfo(meta: object) {\n    return (this.__meta = meta)\n  }\n  setHeaders(headers: object) {\n    return (this.__headers = headers)\n  }\n  setCollectionMetaInfo(meta: object) {\n    return (this.__collectionMeta = meta)\n  }\n  klass() {\n    // @ts-ignore\n    const interceptors = super.klass().interface().axios.interceptors\n    // @ts-ignore\n    this.constructor.includeMetaInfo(interceptors)\n    // @ts-ignore\n    return super.klass()\n  }\n  association(name: string) {\n    // @ts-ignore\n    const interceptors = super.association(name).interface().axios.interceptors\n    // @ts-ignore\n    this.constructor.includeMetaInfo(interceptors)\n    // @ts-ignore\n    return super.association(name)\n  }\n  withCredentials({ accessToken, endpoint }: InitConfig) {\n    // @ts-ignore\n    this.constructor.includeMetaInfo()\n    // @ts-ignore\n    if (!this.constructor.accessToken && !this.constructor.endpoint) {\n      // @ts-ignore\n      if (!this.constructor.resourceLibrary.headers?.Authorization) {\n        // @ts-ignore\n        this.constructor.accessToken = `Bearer `\n        // @ts-ignore\n        this.constructor.endpoint = this.constructor.resourceLibrary.baseUrl\n      } else {\n        // @ts-ignore\n        this.constructor.accessToken = this.constructor.resourceLibrary.headers.Authorization\n        // @ts-ignore\n        this.constructor.endpoint = this.constructor.resourceLibrary.baseUrl\n      }\n    }\n    // @ts-ignore\n    this.constructor.resourceLibrary.headers = {\n      Authorization: `Bearer ${accessToken}`,\n    }\n    // @ts-ignore\n    this.__links = {\n      // @ts-ignore\n      related: `${endpoint}/api/${this.constructor.queryName}`,\n      // @ts-ignore\n      self: `${endpoint}/api/${this.constructor.queryName}/${this.id}`,\n    }\n    // @ts-ignore\n    this.constructor.singleRequest = true\n    return this\n  }\n  setCustomInterceptors(interceptors: InitConfig['interceptors']) {\n    // @ts-ignore\n    this.constructor.customInterceptors = interceptors\n    return this\n  }\n}\n\nexport default BaseClass\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { GeocoderCollection } from './Geocoder'\n\nexport class AddressCollection extends BaseClass {\n  static className = 'Address'\n  billingInfo: string\n  business: boolean\n  city: string\n  company: string\n  countryCode: string\n  createdAt: Date\n  customerAddressId?: string\n  email: string\n  firstName: string\n  fullAddress: string\n  fullName: string\n  geocoder: () => Promise<GeocoderCollection>\n  id: string\n  isGeocoded: boolean\n  isLocalized: boolean\n  lastName: string\n  lat: number\n  line1: string\n  line2: string\n  lng: number\n  mapUrl: string\n  metadata: object\n  name: string\n  notes: string\n  phone: string\n  providerName: string\n  reference: string\n  referenceOrigin: string\n  stateCode: string\n  staticMapUrl: string\n  updatedAt: Date\n  zipCode: string\n  static define() {\n    this.attributes(\n      'business',\n      'firstName',\n      'lastName',\n      'company',\n      'fullName',\n      'line1',\n      'line2',\n      'city',\n      'zipCode',\n      'stateCode',\n      'countryCode',\n      'phone',\n      'fullAddress',\n      'name',\n      'email',\n      'notes',\n      'lat',\n      'lng',\n      'isLocalized',\n      'isGeocoded',\n      'providerName',\n      'mapUrl',\n      'staticMapUrl',\n      'billingInfo',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('geocoder', { className: 'Geocoder' })\n  }\n}\n\nconst Address = library.createResource<AddressCollection>(AddressCollection)\n\nexport default Address\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AttachmentCollection extends BaseClass {\n  static className = 'Attachment'\n  name: string\n  description: string\n  url: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  attachableId: string\n  attachableType: string\n  static define() {\n    this.attributes(\n      'name',\n      'description',\n      'url',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.belongsTo('attachable', { polymorphic: true })\n  }\n}\n\nconst Attachment = library.createResource<AttachmentCollection>(\n  AttachmentCollection\n)\n\nAttachment.afterBuild(function() {\n  // @ts-ignore\n  if (this.attachableId) delete this.attachableId\n  // @ts-ignore\n  if (this.attachableType) delete this.attachableType\n})\n\nexport default Attachment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { AddressCollection } from './Address'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerAddressCollection extends BaseClass {\n  static className = 'CustomerAddress'\n  name: string\n  id: string\n  createdAt: string\n  updatedAt: string\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  address: () => SingleRelationship<AddressCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('address', { className: 'Address' })\n  }\n}\n\nconst CustomerAddress = library.createResource<CustomerAddressCollection>(\n  CustomerAddressCollection\n)\n\nexport default CustomerAddress\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { CustomerCollection } from './Customer'\nimport { PriceListCollection } from './PriceList'\n\nexport class CustomerGroupCollection extends BaseClass {\n  static className = 'CustomerGroup'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customers: () => MultiRelationship<CustomerCollection>\n  priceList: () => SingleRelationship<PriceListCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('priceList', { className: 'PriceList' })\n\n    this.hasMany('customers', { className: 'Customer' })\n  }\n}\n\nconst CustomerGroup = library.createResource<CustomerGroupCollection>(\n  CustomerGroupCollection\n)\n\nexport default CustomerGroup\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerPasswordResetCollection extends BaseClass {\n  static className = 'CustomerPasswordReset'\n  customerEmail: string\n  resetPasswordToken: string\n  customerPassword: string\n  _resetPasswordToken: string\n  resetPasswordAt: Date\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'customerEmail',\n      'resetPasswordToken',\n      'customerPassword',\n      '_resetPasswordToken',\n      'resetPasswordAt',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst CustomerPasswordReset = library.createResource<\n  CustomerPasswordResetCollection\n>(CustomerPasswordResetCollection)\n\nexport default CustomerPasswordReset\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerPaymentSourceCollection extends BaseClass {\n  static className = 'CustomerPaymentSource'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  paymentSourceId: string\n  paymentSourceType: string\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('customer', { className: 'Customer' })\n    this.belongsTo('paymentSource', { polymorphic: true })\n  }\n}\n\nconst CustomerPaymentSource = library.createResource<\n  CustomerPaymentSourceCollection\n>(CustomerPaymentSourceCollection)\n\nCustomerPaymentSource.afterBuild(function() {\n  // @ts-ignore\n  if (this.paymentSourceId) delete this.paymentSourceId\n  // @ts-ignore\n  if (this.paymentSourceType) delete this.paymentSourceType\n})\n\nexport default CustomerPaymentSource\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerSubscriptionCollection extends BaseClass {\n  static className = 'CustomerSubscription'\n  customerEmail: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'customerEmail',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst CustomerSubscription = library.createResource<\n  CustomerSubscriptionCollection\n>(CustomerSubscriptionCollection)\n\nexport default CustomerSubscription\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport {\n  MultiRelationship,\n  SingleRelationship,\n} from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CustomerSubscriptionCollection } from './CustomerSubscription'\nimport { CustomerAddressCollection } from './CustomerAddress'\nimport { CustomerPaymentSourceCollection } from './CustomerPaymentSource'\nimport { CustomerGroupCollection } from './CustomerGroup'\n\nexport class CustomerCollection extends BaseClass {\n  static className = 'Customer'\n  createdAt: Date\n  email: string\n  hasPassword: boolean\n  id: string\n  metadata: object\n  password: string\n  passwordBlank: boolean\n  passwordPresent: boolean\n  reference: string\n  referenceOrigin: string\n  status: 'prospect' | 'acquired' | 'repeat'\n  updatedAt: Date\n  customerAddresses: () => MultiRelationship<CustomerAddressCollection>\n  customerPaymentSources: () => MultiRelationship<\n    CustomerPaymentSourceCollection\n  >\n  customerSubscriptions: () => MultiRelationship<CustomerSubscriptionCollection>\n  orders: () => MultiRelationship<OrderCollection>\n  customerGroup: () => SingleRelationship<CustomerGroupCollection>\n  static define() {\n    this.attributes(\n      'email',\n      'hasPassword',\n      'password',\n      'passwordBlank',\n      'passwordPresent',\n      'status',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customerGroup', { className: 'CustomerGroup' })\n\n    this.hasMany('customerAddresses', { className: 'CustomerAddress' })\n    this.hasMany('customerPaymentSources', {\n      className: 'CustomerPaymentSource',\n    })\n    this.hasMany('customerSubscriptions', { className: 'CustomerSubscription' })\n    this.hasMany('orders', { className: 'Order' })\n  }\n}\n\nconst Customer = library.createResource<CustomerCollection>(CustomerCollection)\n\nexport default Customer\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { ShippingMethodCollection } from './ShippingMethod'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class DeliveryLeadTimeCollection extends BaseClass {\n  static className = 'DeliveryLeadTime'\n  minHours: number\n  maxHours: number\n  minDays: number\n  maxDays: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: Record<string, string>\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  shippingMethod: () => SingleRelationship<ShippingMethodCollection>\n  static define() {\n    this.attributes(\n      'minHours',\n      'maxHours',\n      'minDays',\n      'maxDays',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('shippingMethod', { className: 'ShippingMethod' })\n  }\n}\n\nconst DeliveryLeadTime = library.createResource<DeliveryLeadTimeCollection>(\n  DeliveryLeadTimeCollection\n)\n\nexport default DeliveryLeadTime\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ImportCollection extends BaseClass {\n  static className = 'Import'\n  resourceType: string\n  parentResourceId: number\n  status: string\n  startedAt: Date\n  completedAt: Date\n  inputs: object\n  errorsCount: number\n  warningsCount: number\n  destroyedCount: number\n  errorsLog: object\n  warningsLog: object\n  cleanupRecords: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'resourceType',\n      'parentResourceId',\n      'status',\n      'startedAt',\n      'completedAt',\n      'inputs',\n      'errorsCount',\n      'warningsCount',\n      'destroyedCount',\n      'errorsLog',\n      'warningsLog',\n      'cleanupRecords',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Import = library.createResource<ImportCollection>(ImportCollection)\n\nexport default Import\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SkuCollection } from './Sku'\nimport { MarketCollection } from './Market'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class InStockSubscriptionCollection extends BaseClass {\n  static className = 'InStockSubscription'\n  status: string\n  customerEmail: string\n  skuCode: string\n  _activate: boolean\n  _deactivate: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'status',\n      'customerEmail',\n      'skuCode',\n      '_activate',\n      '_deactivate',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst InStockSubscription = library.createResource<\n  InStockSubscriptionCollection\n>(InStockSubscriptionCollection)\n\nexport default InStockSubscription\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { InventoryStockLocationCollection } from './InventoryStockLocation'\n\nexport class InventoryModelCollection extends BaseClass {\n  static className = 'InventoryModel'\n  name: string\n  id: string\n  stockLocationsCutoff: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  inventoryStockLocations: () => MultiRelationship<\n    InventoryStockLocationCollection\n  >\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'stockLocationsCutoff',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasMany('inventoryStockLocations', {\n      className: 'InventoryStockLocation',\n    })\n  }\n}\n\nconst InventoryModel = library.createResource<InventoryModelCollection>(\n  InventoryModelCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { SkuOptionCollection } from './SkuOption'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class LineItemOptionCollection extends BaseClass {\n  static className = 'LineItemOption'\n  name: string\n  quantity: number\n  currencyCode: string\n  unitAmountCents: number\n  unitAmountFloat: number\n  formattedUnitAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  formattedTotalAmount: string\n  delayHours: number\n  delayDays: number\n  options: object\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  lineItem: () => SingleRelationship<LineItemCollection>\n  skuOption: () => SingleRelationship<SkuOptionCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'quantity',\n      'currencyCode',\n      'unitAmountCents',\n      'unitAmountFloat',\n      'formattedUnitAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'delayHours',\n      'delayDays',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('lineItem', { className: 'LineItem' })\n    this.hasOne('skuOption', { className: 'SkuOption' })\n  }\n}\n\nconst LineItemOption = library.createResource<LineItemOptionCollection>(\n  LineItemOptionCollection\n)\n\nexport default LineItemOption\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { LineItemOptionCollection } from './LineItemOption'\nimport { OrderCollection } from './Order'\n\nexport class LineItemCollection extends BaseClass {\n  static className = 'LineItem'\n  quantity: number\n  itemType: string\n  imageUrl: string\n  id: string\n  formattedUnitAmount: string\n  formattedTotalAmount: string\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  _updateQuantity: string\n  currencyCode: string\n  unitAmountCents: number\n  unitAmountFloat: number\n  optionsAmountCents: number\n  optionsAmountFloat: number\n  formattedOptionsAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  name: string\n  taxRate: number\n  taxBreakdown: object\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  itemId: string\n  order: () => SingleRelationship<OrderCollection>\n  lineItemOptions: () => MultiRelationship<LineItemOptionCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      '_updateQuantity',\n      'currencyCode',\n      'unitAmountCents',\n      'unitAmountFloat',\n      'formattedUnitAmount',\n      'optionsAmountCents',\n      'optionsAmountFloat',\n      'formattedOptionsAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'name',\n      'imageUrl',\n      'taxRate',\n      'taxBreakdown',\n      'itemType',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.belongsTo('item', { polymorphic: true })\n    this.hasMany('lineItemOptions', { className: 'LineItemOption' })\n  }\n}\n\nconst LineItem = library.createResource<LineItemCollection>(LineItemCollection)\n\nLineItem.afterBuild(function() {\n  // @ts-ignore\n  if (this.itemId) delete this.itemId\n  // @ts-ignore\n  if (this.itemType) delete this.itemType\n})\n\nexport default LineItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { CustomerGroupCollection } from './CustomerGroup'\nimport { PriceListCollection } from './PriceList'\nimport { InventoryModelCollection } from './InventoryModel'\n\nexport class MarketCollection extends BaseClass {\n  static className = 'Market'\n  number: number\n  name: string\n  facebookPixelId: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customerGroup: () => MultiRelationship<CustomerGroupCollection>\n  priceList: () => MultiRelationship<PriceListCollection>\n  inventoryModel: () => MultiRelationship<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'name',\n      'facebookPixelId',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('merchant', { className: 'Merchant' })\n    this.hasOne('priceList', { className: 'PriceList' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n    this.hasMany('customerGroup', { className: 'CustomerGroup' })\n  }\n}\n\nconst Market = library.createResource<MarketCollection>(MarketCollection)\n\nexport default Market\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { AddressCollection } from './Address'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class MerchantCollection extends BaseClass {\n  static className = 'Merchant'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  address: () => SingleRelationship<AddressCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('address', { className: 'Address' })\n  }\n}\n\nconst Merchant = library.createResource<MerchantCollection>(MerchantCollection)\n\nexport default Merchant\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { PaymentMethodCollection } from './PaymentMethod'\nimport { MarketCollection } from './Market'\nimport { CustomerCollection } from './Customer'\nimport { AddressCollection } from './Address'\nimport { StripePaymentCollection } from './StripePayment'\nimport { WireTransferCollection } from './WireTransfer'\nimport { PaypalPaymentCollection } from './PaypalPayment'\nimport { BraintreePaymentCollection } from './BraintreePayment'\nimport { AdyenPaymentCollection } from './AdyenPayment'\n\nexport class OrderCollection extends BaseClass {\n  static className = 'Order'\n  number: number\n  status: string\n  paymentStatus: string\n  paymentSourceId: string\n  paymentSourceType: string\n  fulfillmentStatus: string\n  guest: boolean\n  editable: boolean\n  placeable: boolean\n  customerEmail: string\n  customerPassword: string\n  languageCode: string\n  currencyCode: string\n  taxIncluded: boolean\n  taxRate: number\n  freightTaxable: boolean\n  countryCode: string\n  shippingCountryCodeLock: string\n  couponCode: string\n  subtotalAmountCents: number\n  subtotalAmountFloat: number\n  formattedSubtotalAmount: string\n  shippingAmountCents: number\n  shippingAmountFloat: number\n  formattedShippingAmount: string\n  paymentMethodAmountCents: number\n  paymentMethodAmountFloat: number\n  formattedPaymentMethodAmount: string\n  discountAmountCents: number\n  discountAmountFloat: number\n  formattedDiscountAmount: string\n  totalTaxAmountCents: number\n  totalTaxAmountFloat: number\n  formattedTotalTaxAmount: string\n  subtotalTaxAmountCents: number\n  subtotalTaxAmountFloat: number\n  formattedSubtotalTaxAmount: string\n  shippingTaxAmountCents: number\n  shippingTaxAmountFloat: number\n  formattedShippingTaxAmount: string\n  paymentMethodTaxAmountCents: number\n  paymentMethodTaxAmountFloat: number\n  formattedPaymentMethodTaxAmount: string\n  discountTaxAmountCents: number\n  discountTaxAmountFloat: number\n  formattedDiscountTaxAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  formattedTotalAmount: string\n  totalTaxableAmountCents: number\n  totalTaxableAmountFloat: number\n  formattedTotalTaxableAmount: string\n  subtotalTaxableAmountCents: number\n  subtotalTaxableAmountFloat: number\n  formattedSubtotalTaxableAmount: string\n  shippingTaxableAmountCents: number\n  shippingTaxableAmountFloat: number\n  formattedShippingTaxableAmount: string\n  paymentMethodTaxableAmountCents: number\n  paymentMethodTaxableAmountFloat: number\n  formattedPaymentMethodTaxableAmount: string\n  discountTaxableAmountCents: number\n  discountTaxableAmountFloat: number\n  formattedDiscountTaxableAmount: string\n  totalAmountWithTaxesCents: number\n  totalAmountWithTaxesFloat: number\n  formattedTotalAmountWithTaxes: string\n  feesAmountCents: number\n  feesAmountFloat: number\n  formattedFeesAmount: string\n  skusCount: string\n  lineItemOptionsCount: number\n  shipmentsCount: number\n  paymentSourceDetails: object\n  token: string\n  cartUrl: string\n  returnUrl: string\n  termsUrl: string\n  privacyUrl: string\n  checkoutUrl: string\n  _place: number\n  _cancel: number\n  _approve: number\n  _capture: number\n  _refund: number\n  _updateTaxes: number\n  _billingAddressCloneId: number\n  _shippingAddressCloneId: number\n  _customerPaymentSourceId: number\n  _shippingAddressSameAsBilling: number\n  _billingAddressSameAsShipping: number\n  _savePaymentSourceToCustomerWallet: number\n  _saveShippingAddressToCustomerAddressBook: number\n  _saveBillingAddressToCustomerAddressBook: number\n  _refresh: number\n  placedAt: Date\n  archivedAt: Date\n  approvedAt: Date\n  cancelledAt: Date\n  paymentUpdatedAt: Date\n  fulfillmentUpdatedAt: Date\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  shippingAddress: () => SingleRelationship<AddressCollection>\n  paymentSource: () => SingleRelationship<\n    | StripePaymentCollection\n    | WireTransferCollection\n    | PaypalPaymentCollection\n    | BraintreePaymentCollection\n    | AdyenPaymentCollection\n  >\n  loadShippingAddress: () => SingleRelationship<AddressCollection>\n  billingAddress: () => SingleRelationship<AddressCollection>\n  paymentMethod: () => SingleRelationship<PaymentMethodCollection>\n  lineItems: () => MultiRelationship<LineItemCollection>\n  availablePaymentMethods: () => MultiRelationship<PaymentMethodCollection>\n  shipments: () => MultiRelationship<ShipmentCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'status',\n      'paymentStatus',\n      'fulfillmentStatus',\n      'guest',\n      'editable',\n      'placeable',\n      'customerEmail',\n      'customerPassword',\n      'languageCode',\n      'currencyCode',\n      'taxIncluded',\n      'taxRate',\n      'freightTaxable',\n      'countryCode',\n      'shippingCountryCodeLock',\n      'couponCode',\n      'subtotalAmountCents',\n      'subtotalAmountFloat',\n      'formattedSubtotalAmount',\n      'shippingAmountCents',\n      'shippingAmountFloat',\n      'formattedShippingAmount',\n      'paymentMethodAmountCents',\n      'paymentMethodAmountFloat',\n      'formattedPaymentMethodAmount',\n      'discountAmountCents',\n      'discountAmountFloat',\n      'formattedDiscountAmount',\n      'totalTaxAmountCents',\n      'totalTaxAmountFloat',\n      'formattedTotalTaxAmount',\n      'subtotalTaxAmountCents',\n      'subtotalTaxAmountFloat',\n      'formattedSubtotalTaxAmount',\n      'shippingTaxAmountCents',\n      'shippingTaxAmountFloat',\n      'formattedShippingTaxAmount',\n      'paymentMethodTaxAmountCents',\n      'paymentMethodTaxAmountFloat',\n      'formattedPaymentMethodTaxAmount',\n      'discountTaxAmountCents',\n      'discountTaxAmountFloat',\n      'formattedDiscountTaxAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'totalTaxableAmountCents',\n      'totalTaxableAmountFloat',\n      'formattedTotalTaxableAmount',\n      'subtotalTaxableAmountCents',\n      'subtotalTaxableAmountFloat',\n      'formattedSubtotalTaxableAmount',\n      'shippingTaxableAmountCents',\n      'shippingTaxableAmountFloat',\n      'formattedShippingTaxableAmount',\n      'paymentMethodTaxableAmountCents',\n      'paymentMethodTaxableAmountFloat',\n      'formattedPaymentMethodTaxableAmount',\n      'discountTaxableAmountCents',\n      'discountTaxableAmountFloat',\n      'formattedDiscountTaxableAmount',\n      'totalAmountWithTaxesCents',\n      'totalAmountWithTaxesFloat',\n      'formattedTotalAmountWithTaxes',\n      'feesAmountCents',\n      'feesAmountFloat',\n      'formattedFeesAmount',\n      'skusCount',\n      'lineItemOptionsCount',\n      'shipmentsCount',\n      'paymentSourceDetails',\n      'token',\n      'cartUrl',\n      'returnUrl',\n      'termsUrl',\n      'privacyUrl',\n      'checkoutUrl',\n      '_place',\n      '_cancel',\n      '_approve',\n      '_capture',\n      '_refund',\n      '_updateTaxes',\n      '_billingAddressCloneId',\n      '_shippingAddressCloneId',\n      '_customerPaymentSourceId',\n      '_shippingAddressSameAsBilling',\n      '_billingAddressSameAsShipping',\n      '_savePaymentSourceToCustomerWallet',\n      '_saveShippingAddressToCustomerAddressBook',\n      '_saveBillingAddressToCustomerAddressBook',\n      '_refresh',\n      'placedAt',\n      'approvedAt',\n      'cancelledAt',\n      'paymentUpdatedAt',\n      'fulfillmentUpdatedAt',\n      'id',\n      'archivedAt',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' }) // Required\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('shippingAddress', { className: 'Address' })\n    this.hasOne('billingAddress', { className: 'Address' })\n    this.hasOne('paymentMethod', { className: 'PaymentMethod' })\n    this.hasMany('availablePaymentMethods', { className: 'PaymentMethod' })\n    this.hasMany('lineItems', { className: 'LineItem' })\n    this.hasMany('shipments', { className: 'Shipment' })\n    this.belongsTo('paymentSource', { polymorphic: true })\n  }\n}\nconst Order = library.createResource<OrderCollection>(OrderCollection)\n\nOrder.afterBuild(function() {\n  // @ts-ignore\n  if (this.paymentSourceId) delete this.paymentSourceId\n  // @ts-ignore\n  if (this.paymentSourceType) delete this.paymentSourceType\n})\n\nexport default Order\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\n\nexport class ParcelCollection extends BaseClass {\n  static className = 'Parcel'\n  number: string\n  weight: number\n  unitOfWeight: string\n  eelPfc: string\n  contentsType: string\n  contentsExplanation: string\n  customsCertify: boolean\n  customsSigner: string\n  nonDeliveryOption: string\n  restrictionType: string\n  restrictionComments: string\n  customsInfoRequired: boolean\n  shippingLabelUrl: string\n  shippingLabelFileType: string\n  shippingLabelSize: string\n  shippingLabelResolution: string\n  trackingNumber: string\n  trackingStatus: string\n  trackingStatusDetail: string\n  trackingStatusUpdatedAt: Date\n  trackingDetails: string\n  carrierWeightOz: string\n  signedBy: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipment: () => SingleRelationship<ShipmentCollection>\n  parcelLineItems: () => MultiRelationship<LineItemCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'weight',\n      'unitOfWeight',\n      'eelPfc',\n      'contentsType',\n      'contentsExplanation',\n      'customsCertify',\n      'customsSigner',\n      'nonDeliveryOption',\n      'restrictionType',\n      'restrictionComments',\n      'customsInfoRequired',\n      'shippingLabelUrl',\n      'shippingLabelFileType',\n      'shippingLabelSize',\n      'shippingLabelResolution',\n      'trackingNumber',\n      'trackingStatus',\n      'trackingStatusDetail',\n      'trackingStatusUpdatedAt',\n      'trackingDetails',\n      'carrierWeightOz',\n      'signedBy',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('shipment', { className: 'Shipment' })\n    this.hasMany('parcelLineItems', { className: 'LineItem' })\n  }\n}\n\nconst Parcel = library.createResource<ParcelCollection>(ParcelCollection)\n\nexport default Parcel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PaymentMethodCollection extends BaseClass {\n  static className = 'PaymentMethod'\n  paymentSourceType: string\n  name: string\n  disabledAt: Date\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  paymentMethod: () => SingleRelationship<PaymentMethodCollection>\n  static define() {\n    this.attributes(\n      'paymentSourceType',\n      'name',\n      'disabledAt',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('paymentGateway', { className: 'PaymentGateway' })\n  }\n}\n\nconst PaymentMethod = library.createResource<PaymentMethodCollection>(\n  PaymentMethodCollection\n)\n\nexport default PaymentMethod\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class PaymentGatewayCollection extends BaseClass {\n  static className = 'PaymentGateway'\n  id: string\n  static define() {\n    this.attributes('id')\n  }\n}\n\nconst PaymentGateway = library.createResource<PaymentGatewayCollection>(\n  PaymentGatewayCollection\n)\n\nexport default PaymentGateway\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PaypalPaymentCollection extends BaseClass {\n  static className = 'PaypalPayment'\n  returnUrl: string\n  cancelUrl: string\n  noteToPayer: string\n  paypalPayerId: string\n  name: string\n  paypalId: string\n  status: string\n  approvalUrl: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'returnUrl',\n      'cancelUrl',\n      'noteToPayer',\n      'paypalPayerId',\n      'name',\n      'paypalId',\n      'status',\n      'approvalUrl',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst PaypalPayment = library.createResource<PaypalPaymentCollection>(\n  PaypalPaymentCollection\n)\n\nexport default PaypalPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { PriceListCollection } from './PriceList'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PriceCollection extends BaseClass {\n  static className = 'Price'\n  currencyCode: string\n  skuCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  compareAtAmountCents: number\n  compareAtAmountFloat: number\n  formattedCompareAtAmount: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  priceList: () => SingleRelationship<PriceListCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'currencyCode',\n      'skuCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'compareAtAmountCents',\n      'compareAtAmountFloat',\n      'formattedCompareAtAmount',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('priceList', { className: 'PriceList' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst Price = library.createResource<PriceCollection>(PriceCollection)\n\nexport default Price\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { PriceCollection } from './Price'\n\nexport class PriceListCollection extends BaseClass {\n  static className = 'PriceList'\n  name: string\n  currencyCode: string\n  taxIncluded: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  prices: () => MultiRelationship<PriceCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'currencyCode',\n      'taxIncluded',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('prices', { className: 'Price' })\n  }\n}\n\nconst PriceList = library.createResource<PriceListCollection>(\n  PriceListCollection\n)\n\nexport default PriceList\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ShippingMethodCollection } from './ShippingMethod'\nimport { ParcelCollection } from './Parcel'\nimport { AttachmentCollection } from './Attachment'\nimport { ShippingCategoryCollection } from './ShippingCategory'\nimport { StockLocationCollection } from './StockLocation'\nimport { AddressCollection } from './Address'\nimport { ShipmentLineItemCollection } from './ShipmentLineItem'\nimport { StockTransferCollection } from './StockTransfer'\n\nexport class ShipmentCollection extends BaseClass {\n  static className = 'Shipment'\n  _getRates: number\n  _onHold: number\n  _packing: number\n  _picking: number\n  _purchase: number\n  _readyToShip: number\n  _ship: number\n  costAmountCents: number\n  costAmountFloat: number\n  createdAt: Date\n  currencyCode: string\n  formattedCostAmount: string\n  id: string\n  metadata: object\n  number: string\n  reference: string\n  referenceOrigin: string\n  selectedRateId: string\n  status: string\n  updatedAt: Date\n  attachments: () => MultiRelationship<AttachmentCollection>\n  availableShippingMethods: () => MultiRelationship<ShippingMethodCollection>\n  parcels: () => MultiRelationship<ParcelCollection>\n  shipmentLineItems: () => MultiRelationship<ShipmentLineItemCollection>\n  shippingAddress: () => SingleRelationship<AddressCollection>\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  shippingMethod: () => SingleRelationship<ShippingMethodCollection>\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  stockTransfers: () => MultiRelationship<StockTransferCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'status',\n      'currencyCode',\n      'costAmountCents',\n      'costAmountFloat',\n      'formattedCostAmount',\n      '_onHold',\n      '_picking',\n      '_packing',\n      '_readyToShip',\n      '_ship',\n      '_getRates',\n      'selectedRateId',\n      '_purchase',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('shippingAddress', { className: 'Address' })\n    this.hasOne('shippingMethod', { className: 'ShippingMethod' })\n\n    this.hasMany('shipmentLineItems', { className: 'ShipmentLineItem' })\n    this.hasMany('availableShippingMethods', { className: 'ShippingMethod' })\n    this.hasMany('parcels', { className: 'Parcel' })\n    this.hasMany('attachments', { className: 'Attachment' })\n    this.hasMany('stockTransfers', { className: 'StockTransfer' })\n  }\n}\n\nconst Shipment = library.createResource<ShipmentCollection>(ShipmentCollection)\n\nexport default Shipment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\n\nexport class ShippingCategoryCollection extends BaseClass {\n  static className = 'ShippingCategory'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst ShippingCategory = library.createResource<ShippingCategoryCollection>(\n  ShippingCategoryCollection\n)\n\nexport default ShippingCategory\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { ShippingZoneCollection } from './ShippingZone'\nimport { ShippingCategoryCollection } from './ShippingCategory'\nimport { DeliveryLeadTimeCollection } from './DeliveryLeadTime'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ShippingMethodCollection extends BaseClass {\n  static className = 'ShippingMethod'\n  name: string\n  disabledAt: Date\n  currencyCode: Date\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  freeOverAmountCents: number\n  freeOverAmountFloat: number\n  formattedFreeOverAmount: string\n  priceAmountForShipmentCents: number\n  priceAmountForShipmentFloat: number\n  formattedPriceAmountForShipment: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipmentId?: string\n  market: () => SingleRelationship<MarketCollection>\n  shippingZone: () => SingleRelationship<ShippingZoneCollection>\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  deliveryLeadTimeForShipment: () => SingleRelationship<\n    DeliveryLeadTimeCollection\n  >\n  static define() {\n    this.attributes(\n      'name',\n      'disabledAt',\n      'currencyCode',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'freeOverAmountCents',\n      'freeOverAmountFloat',\n      'formattedFreeOverAmount',\n      'priceAmountForShipmentCents',\n      'priceAmountForShipmentFloat',\n      'formattedPriceAmountForShipment',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('shippingZone', { className: 'ShippingZone' })\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasOne('deliveryLeadTimeForShipment', {\n      className: 'DeliveryLeadTime',\n    })\n  }\n}\n\nconst ShippingMethod = library.createResource<ShippingMethodCollection>(\n  ShippingMethodCollection\n)\n\nexport default ShippingMethod\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ShippingZoneCollection extends BaseClass {\n  static className = 'ShippingZone'\n  name: string\n  countryCodeRegex: string\n  notCountryCodeRegex: string\n  stateCodeRegex: string\n  notStateCodeRegex: string\n  zipCodeRegex: string\n  notZipCodeRegex: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'name',\n      'countryCodeRegex',\n      'notCountryCodeRegex',\n      'stateCodeRegex',\n      'notStateCodeRegex',\n      'zipCodeRegex',\n      'notZipCodeRegex',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst ShippingZone = library.createResource<ShippingZoneCollection>(\n  ShippingZoneCollection\n)\n\nexport default ShippingZone\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class SkuOptionCollection extends BaseClass {\n  static className = 'SkuOption'\n  name: string\n  description: string\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  delayHours: number\n  delayDays: number\n  skuCode_regex: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'description',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'delayHours',\n      'delayDays',\n      'skuCodeRegex',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n  }\n}\n\nconst SkuOption = library.createResource<SkuOptionCollection>(\n  SkuOptionCollection\n)\n\nexport default SkuOption\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { PriceCollection } from './Price'\nimport { SkuOptionCollection } from './SkuOption'\nimport { DeliveryLeadTimeCollection } from './DeliveryLeadTime'\nimport { StockItemCollection } from './StockItem'\nimport { ShippingCategoryCollection } from './ShippingCategory'\n\nexport interface InventoryCollection {\n  available: boolean\n  quantity: number\n  levels: {\n    quantity: number\n    deliveryLeadTimes: {\n      shippingMethod: {\n        name: string\n        reference: null | string\n        priceAmountCents: number\n        freeOverAmountCents: number\n        formattedPriceAmount: string\n        formattedFreeOverAmount: string\n      }\n      min: {\n        hours: number\n        days: number\n      }\n      max: {\n        hours: number\n        days: number\n      }\n    }[]\n  }[]\n}\n\nexport class SkuCollection extends BaseClass {\n  static className = 'Sku'\n  code: string\n  name: string\n  description: string\n  imageUrl: string\n  tagNames: string\n  piecesPerPack: number\n  weight: number\n  unitOfWeight: string\n  inventory: InventoryCollection\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  prices: () => MultiRelationship<PriceCollection>\n  stockItems: () => MultiRelationship<StockItemCollection>\n  deliveryLeadTimes: () => MultiRelationship<DeliveryLeadTimeCollection>\n  skuOptions: () => MultiRelationship<SkuOptionCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'name',\n      'description',\n      'imageUrl',\n      'tagNames',\n      'piecesPerPack',\n      'weight',\n      'unitOfWeight',\n      'inventory',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasMany('prices', { className: 'Price' })\n    this.hasMany('stockItems', { className: 'StockItem' })\n    this.hasMany('deliveryLeadTimes', { className: 'DeliveryLeadTime' })\n    this.hasMany('skuOptions', { className: 'SkuOption' })\n    this.hasMany('availablePromotions', {\n      className: 'Promotion',\n    })\n  }\n}\n\nconst Sku = library.createResource<SkuCollection>(SkuCollection)\nexport default Sku\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\nimport { SkuListItemCollection } from './SkuListItem'\n\nexport class SkuListCollection extends BaseClass {\n  static className = 'SkuList'\n  name: string\n  slug: string\n  description: string\n  manual: boolean\n  skuCodeRegex: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  skus: () => MultiRelationship<SkuCollection>\n  skuListItems: () => MultiRelationship<SkuListItemCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'slug',\n      'description',\n      'manual',\n      'skuCodeRegex',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('skus', { className: 'Sku' })\n    this.hasMany('skuListItems', { className: 'SkuListItem' })\n  }\n}\n\nconst SkuList = library.createResource<SkuListCollection>(SkuListCollection)\n\nexport default SkuList\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SkuCollection } from './Sku'\nimport { SkuListCollection } from './SkuList'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class SkuListItemCollection extends BaseClass {\n  static className = 'SkuListItem'\n  position: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  sku: () => SingleRelationship<SkuCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  static define() {\n    this.attributes(\n      'position',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('skuList', { className: 'SkuList' })\n  }\n}\n\nconst SkuListItem = library.createResource<SkuListItemCollection>(\n  SkuListItemCollection\n)\n\nexport default SkuListItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class StockItemCollection extends BaseClass {\n  static className = 'StockItem'\n  skuCode: string\n  quantity: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst StockItem = library.createResource<StockItemCollection>(\n  StockItemCollection\n)\n\nexport default StockItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { InventoryModelCollection } from './InventoryModel'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class InventoryStockLocationCollection extends BaseClass {\n  static className = 'InventoryStockLocation'\n  priority: number\n  onHold: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  inventoryModel: () => SingleRelationship<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'priority',\n      'onHold',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n  }\n}\n\nconst InventoryStockLocation = library.createResource<\n  InventoryStockLocationCollection\n>(InventoryStockLocationCollection)\n\nexport default InventoryStockLocation\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { InventoryStockLocationCollection } from './InventoryStockLocation'\nimport { StockItemCollection } from './StockItem'\nimport { AddressCollection } from './Address'\n\nexport class StockLocationCollection extends BaseClass {\n  static className = 'StockLocation'\n  name: string\n  labelFormat: string\n  id: string\n  createdAt: string\n  updatedAt: string\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  address: () => SingleRelationship<AddressCollection>\n  InventoryStockLocations: () => MultiRelationship<\n    InventoryStockLocationCollection\n  >\n  stockItems: () => MultiRelationship<StockItemCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'labelFormat',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('address', { className: 'Address' })\n\n    this.hasMany('InventoryStockLocations', {\n      className: 'InventoryStockLocation',\n    })\n    this.hasMany('stockItems', { className: 'StockItem' })\n  }\n}\n\nconst StockLocation = library.createResource<StockLocationCollection>(\n  StockLocationCollection\n)\n\nexport default StockLocation\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class WebhookCollection extends BaseClass {\n  static className = 'Webhook'\n  topic: string\n  callbackUrl: string\n  includeResources: string[]\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'topic',\n      'callbackUrl',\n      'includeResources',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Webhook = library.createResource<WebhookCollection>(WebhookCollection)\n\nexport default Webhook\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class WireTransferCollection extends BaseClass {\n  static className = 'WireTransfer'\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst WireTransfer = library.createResource<WireTransferCollection>(\n  WireTransferCollection\n)\n\nexport default WireTransfer\n","import library from './library'\n\nexport interface Transformer {\n  (data: any, headers?: any): any\n}\n\nexport interface ProxyConfig {\n  host: string\n  port: number\n  auth?: {\n    username: string\n    password: string\n  }\n  protocol?: string\n}\n\nexport interface RequestConfig {\n  url?: string\n  method?: string\n  baseURL?: string\n  transformRequest?: Transformer | Transformer[]\n  transformResponse?: Transformer | Transformer[]\n  headers?: any\n  params?: any\n  paramsSerializer?: (params: any) => string\n  data?: any\n  timeout?: number\n  timeoutErrorMessage?: string\n  withCredentials?: boolean\n  adapter?: any\n  auth?: Record<string, string>\n  responseType?: ResponseType\n  xsrfCookieName?: string\n  xsrfHeaderName?: string\n  onUploadProgress?: (progressEvent: any) => void\n  onDownloadProgress?: (progressEvent: any) => void\n  maxContentLength?: number\n  validateStatus?: ((status: number) => boolean) | null\n  maxBodyLength?: number\n  maxRedirects?: number\n  socketPath?: string | null\n  httpAgent?: any\n  httpsAgent?: any\n  proxy?: ProxyConfig | false\n  decompress?: boolean\n}\n\nexport interface Response<T = any> {\n  data: T\n  status: number\n  statusText: string\n  headers: any\n  config: RequestConfig\n  request?: any\n}\n\nexport interface ResponseError<T = any> extends Error {\n  config: RequestConfig\n  code?: string\n  request?: any\n  response?: Response<T>\n  isAxiosError: boolean\n  toJSON: () => object\n}\n\nexport interface InitConfig {\n  accessToken: string\n  endpoint: string\n  interceptors?: {\n    request?: {\n      before?: (config: RequestConfig) => any\n      error?: (error: ResponseError) => any\n    }\n    response?: {\n      before?: (config: RequestConfig) => any\n      error?: (error: ResponseError) => any\n    }\n  }\n}\n\nexport interface Init {\n  ({ accessToken, endpoint }: InitConfig): void\n}\n\nconst init: Init = ({\n  accessToken,\n  endpoint,\n  interceptors,\n}: InitConfig): void => {\n  library.baseUrl = `${endpoint}/api/`\n  library.headers = {\n    Authorization: `Bearer ${accessToken}`,\n  }\n  library.customInterceptors = interceptors\n}\n\nexport default init\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class GeocoderCollection extends BaseClass {\n  static className = 'Geocoder'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Geocoder = library.createResource<GeocoderCollection>(GeocoderCollection)\n\nexport default Geocoder\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class PaymentSourceCollection extends BaseClass {\n  static className = 'PaymentSource'\n  static define() {}\n}\n\nconst PaymentSource = library.createResource<PaymentSourceCollection>(\n  PaymentSourceCollection\n)\n\nexport default PaymentSource\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ItemCollection extends BaseClass {\n  static className = 'Item'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Item = library.createResource<ItemCollection>(ItemCollection)\n\nexport default Item\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AttachableCollection extends BaseClass {\n  static className = 'Attachable'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Attachable = library.createResource<AttachableCollection>(\n  AttachableCollection\n)\n\nexport default Attachable\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { GiftCardRecipientCollection } from './GiftCardRecipient'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class GiftCardCollection extends BaseClass {\n  static className = 'GiftCard'\n  status: string\n  code: string\n  currencyCode: string\n  initialBalanceCents: number\n  initialBalanceFloat: number\n  formattedInitialBalance: string\n  balanceCents: number\n  balanceFloat: number\n  formattedBalance: string\n  balanceMaxCents: number\n  balanceMaxFloat: number\n  formattedBalanceMax: string\n  balanceLog: object\n  singleUse: boolean\n  rechargeable: boolean\n  imageUrl: string\n  expiresAt: Date\n  referenceOrigin: string\n  recipientEmail: string\n  _purchase: number\n  _activate: number\n  _deactivate: number\n  _balanceChangeCents: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  giftCardRecipient: () => SingleRelationship<GiftCardRecipientCollection>\n  static define() {\n    this.attributes(\n      'status',\n      'code',\n      'currencyCode',\n      'initialBalanceCents',\n      'initialBalanceFloat',\n      'formattedInitialBalance',\n      'balanceCents',\n      'balanceFloat',\n      'formattedBalance',\n      'balanceMaxCents',\n      'balanceMaxFloat',\n      'formattedBalanceMax',\n      'balanceLog',\n      'singleUse',\n      'rechargeable',\n      'imageUrl',\n      'expiresAt',\n      'referenceOrigin',\n      'recipientEmail',\n      '_purchase',\n      '_activate',\n      '_deactivate',\n      '_balanceChangeCents',\n      'id',\n      'createAt',\n      'updateAt',\n      'reference',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('giftCardRecipient', { className: 'GiftCardRecipient' })\n  }\n}\n\nconst GiftCard = library.createResource<GiftCardCollection>(GiftCardCollection)\nexport default GiftCard\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class GiftCardRecipientCollection extends BaseClass {\n  static className = 'GiftCardRecipient'\n  email: string\n  firstName: string\n  lastName: string\n  referenceOrigin: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'email',\n      'firstName',\n      'lastName',\n      'referenceOrigin',\n      'id',\n      'createAt',\n      'updateAt',\n      'reference',\n      'metadata'\n    )\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst GiftCardRecipient = library.createResource<GiftCardRecipientCollection>(\n  GiftCardRecipientCollection\n)\nexport default GiftCardRecipient\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class AdyenPaymentCollection extends BaseClass {\n  static className = 'AdyenPayment'\n  paymentMethod: object\n  paymentRequestData: object\n  paymentRequestDetails: object\n  paymentResponse: object\n  Authorize: boolean\n  _details: boolean\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'paymentMethod',\n      'paymentRequestData',\n      'paymentRequestDetails',\n      'paymentResponse',\n      '_authorize',\n      '_details',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst AdyenPayment = library.createResource<AdyenPaymentCollection>(\n  AdyenPaymentCollection\n)\n\nexport default AdyenPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class BraintreePaymentCollection extends BaseClass {\n  static className = 'BraintreePayment'\n  clientToken: string\n  paymentMethodNonce: string\n  options: Record<string, any>\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: Record<string, string>\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'clientToken',\n      'paymentMethodNonce',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst BraintreePayment = library.createResource<BraintreePaymentCollection>(\n  BraintreePaymentCollection\n)\n\nexport default BraintreePayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class StripePaymentCollection extends BaseClass {\n  static className = 'StripePayment'\n  clientSecret: string\n  options: object\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'clientSecret',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst StripePayment = library.createResource<StripePaymentCollection>(\n  StripePaymentCollection\n)\n\nexport default StripePayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ExternalPaymentCollection extends BaseClass {\n  static className = 'ExternalPayment'\n  createdAt: Date\n  id: string\n  metadata: object\n  options: object\n  paymentSourceToken: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'options',\n      'paymentSourceToken',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst ExternalPayment = library.createResource<ExternalPaymentCollection>(\n  ExternalPaymentCollection\n)\n\nexport default ExternalPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ParcelCollection } from './Parcel'\n\nexport class PackageCollection extends BaseClass {\n  static className = 'Package'\n  code: string\n  createdAt: Date\n  length: number\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  unitOfLength: 'cm' | 'in'\n  updatedAt: Date\n  width: number\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  parcels: () => MultiRelationship<ParcelCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'createdAt',\n      'length',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'unitOfLength',\n      'updatedAt',\n      'width'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasMany('parcels', { className: 'Parcel' })\n  }\n}\n\nconst Package = library.createResource<PackageCollection>(PackageCollection)\n\nexport default Package\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AdjustmentCollection extends BaseClass {\n  static className = 'Adjustment'\n  name: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'name',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Adjustment = library.createResource<AdjustmentCollection>(\n  AdjustmentCollection\n)\n\nexport default Adjustment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { AuthorizationCollection } from './Authorization'\nimport { RefundCollection } from './Refund'\n\nexport class CaptureCollection extends BaseClass {\n  static className = 'Capture'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  _refund: boolean\n  _refundAmountCents: number\n  refundAmountCents: number\n  refundAmountFloat: number\n  formattedRefundAmount: string\n  refundBalanceCents: number\n  refundBalanceFloat: number\n  formattedRefundBalance: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceAuthorization: () => SingleRelationship<AuthorizationCollection>\n  refunds: () => MultiRelationship<RefundCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      '_refund',\n      '_refundAmountCents',\n      'refundAmountCents',\n      'refundAmountFloat',\n      'formattedRefundAmount',\n      'refundBalanceCents',\n      'refundBalanceFloat',\n      'formattedRefundBalance',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceAuthorization', { className: 'Authorization' })\n    this.hasMany('refunds', { className: 'Refund' })\n  }\n}\n\nconst Capture = library.createResource<CaptureCollection>(CaptureCollection)\n\nexport default Capture\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CaptureCollection } from './Capture'\nimport { VoidCollection } from './Void'\n\nexport class AuthorizationCollection extends BaseClass {\n  static className = 'Authorization'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  cvvCode: string\n  cvvMessage: string\n  avsCode: string\n  avsMessage: string\n  fraudReview: string\n  gatewayTransactionId: string\n  _capture: boolean\n  _captureAmountCents: number\n  captureAmountCents: number\n  captureAmountFloat: number\n  formattedCaptureAmount: string\n  captureBalanceCents: number\n  captureBalanceFloat: number\n  formattedCaptureBalance: string\n  _void: boolean\n  voidBalanceCents: number\n  voidBalanceFloat: number\n  formattedVoidBalance: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  captures: () => MultiRelationship<CaptureCollection>\n  voids: () => MultiRelationship<VoidCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'cvvCode',\n      'cvvMessage',\n      'avsCode',\n      'avsMessage',\n      'fraudReview',\n      'gatewayTransactionId',\n      '_capture',\n      '_captureAmountCents',\n      'captureAmountCents',\n      'captureAmountFloat',\n      'formattedCaptureAmount',\n      'captureBalanceCents',\n      'captureBalanceFloat',\n      'formattedCaptureBalance',\n      '_void',\n      'voidBalanceCents',\n      'voidBalanceFloat',\n      'formattedVoidBalance',\n      'name',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasMany('captures', { className: 'Capture' })\n    this.hasMany('voids', { className: 'Void' })\n  }\n}\n\nconst Authorization = library.createResource<AuthorizationCollection>(\n  AuthorizationCollection\n)\n\nexport default Authorization\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { MarketCollection } from './Market'\n\nexport class BillingInfoValidationRuleCollection extends BaseClass {\n  static className = 'BillingInfoValidationRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n  }\n}\n\nconst BillingInfoValidationRule = library.createResource<\n  BillingInfoValidationRuleCollection\n>(BillingInfoValidationRuleCollection)\n\nexport default BillingInfoValidationRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CaptureCollection } from './Capture'\n\nexport class RefundCollection extends BaseClass {\n  static className = 'Refund'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceCapture: () => SingleRelationship<CaptureCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceCapture', { className: 'Capture' })\n  }\n}\n\nconst Refund = library.createResource<RefundCollection>(RefundCollection)\n\nexport default Refund\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { AuthorizationCollection } from './Authorization'\n\nexport class VoidCollection extends BaseClass {\n  static className = 'Void'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceAuthorization: () => SingleRelationship<AuthorizationCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceAuthorization', { className: 'Authorization' })\n  }\n}\n\nconst Void = library.createResource<VoidCollection>(VoidCollection)\n\nexport default Void\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class CouponCodesPromotionRuleCollection extends BaseClass {\n  static className = 'CouponCodesPromotionRule'\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst CouponCodesPromotionRule = library.createResource<\n  CouponCodesPromotionRuleCollection\n>(CouponCodesPromotionRuleCollection)\n\nexport default CouponCodesPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class CouponCollection extends BaseClass {\n  static className = 'Coupon'\n  code: string\n  usageLimit: number\n  usageCount: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotionRule: () => SingleRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'usageLimit',\n      'usageCount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotionRule', { className: 'PromotionRule' })\n  }\n}\n\nconst Coupon = library.createResource<CouponCollection>(CouponCollection)\n\nexport default Coupon\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class ExternalPromotionCollection extends BaseClass {\n  static className = 'ExternalPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: number\n  totalUsageCount: number\n  active: boolean\n  promotionUrl: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'promotionUrl',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst ExternalPromotion = library.createResource<ExternalPromotionCollection>(\n  ExternalPromotionCollection\n)\n\nexport default ExternalPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class FixedAmountPromotionCollection extends BaseClass {\n  static className = 'FixedAmountPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  fixedAmountCents: number\n  fixedAmountFloat: number\n  formattedFixedAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'fixedAmountCents',\n      'fixedAmountFloat',\n      'formattedFixedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst FixedAmountPromotion = library.createResource<\n  FixedAmountPromotionCollection\n>(FixedAmountPromotionCollection)\n\nexport default FixedAmountPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class FreeShippingPromotionCollection extends BaseClass {\n  static className = 'FreeShippingPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst FreeShippingPromotion = library.createResource<\n  FreeShippingPromotionCollection\n>(FreeShippingPromotionCollection)\n\nexport default FreeShippingPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class OrderAmountPromotionRuleCollection extends BaseClass {\n  static className = 'OrderAmountPromotionRule'\n  orderAmountCents: number\n  orderAmountFloat: number\n  formattedOrderAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'orderAmountCents',\n      'orderAmountFloat',\n      'formattedOrderAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst OrderAmountPromotionRule = library.createResource<\n  OrderAmountPromotionRuleCollection\n>(OrderAmountPromotionRuleCollection)\n\nexport default OrderAmountPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { SkuListCollection } from './SkuList'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuCollection } from './Sku'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class PercentageDiscountPromotionCollection extends BaseClass {\n  static className = 'PercentageDiscountPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  percentage: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'percentage',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('skuList', { className: 'SkuList' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst PercentageDiscountPromotion = library.createResource<\n  PercentageDiscountPromotionCollection\n>(PercentageDiscountPromotionCollection)\n\nexport default PercentageDiscountPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class PromotionRuleCollection extends BaseClass {\n  static className = 'PromotionRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst PromotionRule = library.createResource<PromotionRuleCollection>(\n  PromotionRuleCollection\n)\n\nexport default PromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { MarketCollection } from './Market'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class PromotionCollection extends BaseClass {\n  static className = 'Promotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst Promotion = library.createResource<PromotionCollection>(\n  PromotionCollection\n)\n\nexport default Promotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\nimport { SkuListCollection } from './SkuList'\nimport { SkuCollection } from './Sku'\n\nexport class SkuListPromotionRuleCollection extends BaseClass {\n  static className = 'SkuListPromotionRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n    this.hasOne('skuList', { className: 'SkuList' })\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst SkuListPromotionRule = library.createResource<\n  SkuListPromotionRuleCollection\n>(SkuListPromotionRuleCollection)\n\nexport default SkuListPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { InventoryModelCollection } from './InventoryModel'\n\nexport class InventoryReturnLocationCollection extends BaseClass {\n  static className = 'InventoryReturnLocation'\n  priority: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => Promise<StockLocationCollection>\n  inventoryModel: () => Promise<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'priority',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n  }\n}\n\nconst InventoryModel = library.createResource<\n  InventoryReturnLocationCollection\n>(InventoryReturnLocationCollection)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { CustomerCollection } from './Customer'\nimport { InventoryReturnLocationCollection } from './InventoryReturnLocation'\nimport { StockLocationCollection } from './StockLocation'\nimport { AddressCollection } from './Address'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ReturnLineItemCollection } from './ReturnLineItem'\nimport { AttachmentCollection } from './Attachment'\n\nexport class ReturnCollection extends BaseClass {\n  static className = 'Return'\n  number: string\n  status:\n    | string\n    | 'draft'\n    | 'pending'\n    | 'approved'\n    | 'rejected'\n    | 'shipped'\n    | 'received'\n  customerEmail: string\n  skusCount: number\n  approvedAt: Date\n  rejectedAt: Date\n  shippedAt: Date\n  receivedAt: Date\n  archivedAt: Date\n  _request: boolean\n  _approve: boolean\n  _reject: boolean\n  _ship: boolean\n  _receive: boolean\n  _restock: boolean\n  _archive: boolean\n  _unarchive: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  inventoryReturnLocation: () => SingleRelationship<\n    InventoryReturnLocationCollection\n  >\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  originAddress: () => SingleRelationship<AddressCollection>\n  destinationAddress: () => SingleRelationship<AddressCollection>\n  returnLineItems: () => MultiRelationship<ReturnLineItemCollection>\n  attachments: () => MultiRelationship<AttachmentCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'customerEmail',\n      'status',\n      'skusCount',\n      'approvedAt',\n      'rejectedAt',\n      'shippedAt',\n      'receivedAt',\n      'archivedAt',\n      '_request',\n      '_approve',\n      '_reject',\n      '_ship',\n      '_receive',\n      '_restock',\n      '_archive',\n      '_unarchive',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('inventoryReturnLocation', {\n      className: 'InventoryReturnLocation',\n    })\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('originAddress', { className: 'Address' })\n    this.hasOne('destinationAddress', { className: 'Address' })\n    this.hasMany('returnLineItems', { className: 'ReturnLineItem' })\n    this.hasMany('attachments', { className: 'Attachment' })\n  }\n}\n\nconst InventoryModel = library.createResource<ReturnCollection>(\n  ReturnCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class ExternalTaxCalculatorCollection extends BaseClass {\n  static className = 'ExternalTaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCalculatorUrl: string\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt',\n      'taxCalculatorUrl'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst ExternalTaxCalculator = library.createResource<\n  ExternalTaxCalculatorCollection\n>(ExternalTaxCalculatorCollection)\n\nexport default ExternalTaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\nimport { TaxRuleCollection } from './TaxRule'\n\nexport class ManualTaxCalculatorCollection extends BaseClass {\n  static className = 'ManualTaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  taxRules: () => MultiRelationship<TaxRuleCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n    this.hasMany('taxRules', { className: 'TaxRule' })\n  }\n}\n\nconst ManualTaxCalculator = library.createResource<\n  ManualTaxCalculatorCollection\n>(ManualTaxCalculatorCollection)\n\nexport default ManualTaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class TaxCalculatorCollection extends BaseClass {\n  static className = 'TaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst TaxCalculator = library.createResource<TaxCalculatorCollection>(\n  TaxCalculatorCollection\n)\n\nexport default TaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { ManualTaxCalculatorCollection } from './ManualTaxCalculator'\n\nexport class TaxRuleCollection extends BaseClass {\n  static className = 'TaxRule'\n  adjustmentTaxable: boolean\n  breakDown: Record<string, string>\n  countryCodeRegex: string\n  createdAt: Date\n  freightTaxable: boolean\n  giftCardTaxable: boolean\n  id: string\n  metadata: object\n  name: string\n  notCountryCodeRegex: string\n  notStateCodeRegex: string\n  notZipCodeRegex: string\n  paymentMethodTaxable: boolean\n  reference: string\n  referenceOrigin: string\n  stateCodeRegex: string\n  taxRate: number\n  updatedAt: Date\n  zipCodeRegex: string\n  manualTaxCalculator: () => SingleRelationship<ManualTaxCalculatorCollection>\n\n  static define() {\n    this.attributes(\n      'adjustmentTaxable',\n      'breakDown',\n      'countryCodeRegex',\n      'createdAt',\n      'freightTaxable',\n      'giftCardTaxable',\n      'id',\n      'metadata',\n      'name',\n      'notCountryCodeRegex',\n      'notStateCodeRegex',\n      'notZipCodeRegex',\n      'paymentMethodTaxable',\n      'reference',\n      'referenceOrigin',\n      'stateCodeRegex',\n      'taxRate',\n      'updatedAt',\n      'zipCodeRegex'\n    )\n\n    this.hasOne('manualTaxCalculator', { className: 'ManualTaxCalculator' })\n  }\n}\n\nconst TaxRule = library.createResource<TaxRuleCollection>(TaxRuleCollection)\n\nexport default TaxRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class TaxjarAccountCollection extends BaseClass {\n  static className = 'TaxjarAccount'\n  apiKey: string\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'apiKey',\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst TaxjarAccount = library.createResource<TaxjarAccountCollection>(\n  TaxjarAccountCollection\n)\n\nexport default TaxjarAccount\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { ReturnCollection } from './Return'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ReturnLineItemCollection extends BaseClass {\n  static className = 'ReturnLineItem'\n  skuCode: string\n  name: string\n  quantity: number\n  _restock: boolean\n  returnReason: string\n  restockedAt: Date\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  return: () => SingleRelationship<ReturnCollection>\n  lineItem: () => SingleRelationship<LineItemCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'name',\n      'quantity',\n      '_restock',\n      'returnReason',\n      'restockedAt',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('return', { className: 'Return' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n  }\n}\n\nconst InventoryModel = library.createResource<ReturnLineItemCollection>(\n  ReturnLineItemCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\nimport { StockItemCollection } from './StockItem'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ShipmentLineItemCollection extends BaseClass {\n  static className = 'ShipmentLineItem'\n  skuCode: string\n  quantity: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipment: () => SingleRelationship<ShipmentCollection>\n  lineItem: () => SingleRelationship<LineItemCollection>\n  stockItem: () => SingleRelationship<StockItemCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockItem', { className: 'StockItem' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n    this.hasOne('shipment', { className: 'Shipment' })\n  }\n}\n\nconst ShipmentLineItem = library.createResource<ShipmentLineItemCollection>(\n  ShipmentLineItemCollection\n)\n\nexport default ShipmentLineItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\nimport { TaxCalculatorCollection } from './TaxCalculator'\n\nexport class TaxCategoryCollection extends BaseClass {\n  static className = 'TaxCategory'\n  code: string\n  createdAt: Date\n  id: string\n  metadata: object\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  updatedAt: Date\n  sku: () => SingleRelationship<SkuCollection>\n  taxCalculator: () => SingleRelationship<TaxCalculatorCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'createdAt',\n      'id',\n      'metadata',\n      'reference',\n      'referenceOrigin',\n      'skuCode',\n      'updatedAt'\n    )\n\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('taxCalculator', { className: 'TaxCalculator' })\n  }\n}\n\nconst TaxCategory = library.createResource<TaxCategoryCollection>(\n  TaxCategoryCollection\n)\n\nexport default TaxCategory\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\n\nexport class StockTransferCollection extends BaseClass {\n  static className = 'StockTransfer'\n  _cancel: boolean\n  _complete: boolean\n  _inTransit: boolean\n  _picking: boolean\n  _upcoming: boolean\n  cancelledAt: Date\n  completedAt: Date\n  createdAt: Date\n  id: string\n  metadata: object\n  quantity: number\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  status: string\n  updatedAt: Date\n  originStockLocation: () =>\n    | Promise<SingleRelationship<StockLocationCollection>>\n    | SingleRelationship<StockLocationCollection>\n    | null\n  destinationStockLocation: () =>\n    | Promise<SingleRelationship<StockLocationCollection>>\n    | SingleRelationship<StockLocationCollection>\n    | null\n  lineItem: () =>\n    | Promise<SingleRelationship<LineItemCollection>>\n    | SingleRelationship<LineItemCollection>\n    | null\n  sku: () =>\n    | Promise<SingleRelationship<SkuCollection>>\n    | SingleRelationship<SkuCollection>\n    | null\n  shipment: () =>\n    | Promise<SingleRelationship<ShipmentCollection>>\n    | SingleRelationship<ShipmentCollection>\n    | null\n  static define() {\n    this.attributes(\n      '_cancel',\n      '_complete',\n      '_inTransit',\n      '_picking',\n      '_upcoming',\n      'cancelledAt',\n      'completedAt',\n      'createdAt',\n      'id',\n      'metadata',\n      'quantity',\n      'reference',\n      'referenceOrigin',\n      'skuCode',\n      'status',\n      'updatedAt'\n    )\n\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('originStockLocation', { className: 'StockLocation' })\n    this.hasOne('destinationStockLocation', { className: 'StockLocation' })\n    this.hasOne('shipment', { className: 'Shipment' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n  }\n}\n\nconst StockTransfer = library.createResource<StockTransferCollection>(\n  StockTransferCollection\n)\n\nexport default StockTransfer\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class AvalaraAccountCollection extends BaseClass {\n  static className = 'AvalaraAccount'\n  companyCode: string\n  createdAt: Date\n  ddp: string\n  id: string\n  metadata: object\n  name: string\n  password: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  username: string\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'companyCode',\n      'createdAt',\n      'createdAt',\n      'ddp',\n      'id',\n      'metadata',\n      'name',\n      'password',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst AvalaraAccount = library.createResource<AvalaraAccountCollection>(\n  AvalaraAccountCollection\n)\n\nexport default AvalaraAccount\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class OrganizationCollection extends BaseClass {\n  static className = 'Organization'\n  static queryName = 'organization'\n  acceptanceDisabled: boolean\n  accountDisabled: boolean\n  contrastColor: string\n  createdAt: Date\n  discountDisabled: boolean\n  domain: string\n  faviconUrl: string\n  gtmId: string\n  gtmIdTest: string\n  logoUrl: string\n  metadata: object\n  name: string\n  primaryColor: string\n  reference: string\n  referenceOrigin: string\n  slug: string\n  updatedAt: Date\n  id: string\n  static define() {\n    this.attributes(\n      'acceptanceDisabled',\n      'accountDisabled',\n      'contrastColor',\n      'createdAt',\n      'discountDisabled',\n      'domain',\n      'faviconUrl',\n      'gtmId',\n      'gtmIdTest',\n      'logoUrl',\n      'metadata',\n      'name',\n      'primaryColor',\n      'reference',\n      'referenceOrigin',\n      'slug',\n      'updatedAt'\n    )\n  }\n}\n\nconst Organization = library.createResource<OrganizationCollection>(\n  OrganizationCollection\n)\n\nexport default Organization\n","import Address, { AddressCollection } from '#resources/Address'\nimport Attachment, { AttachmentCollection } from '#resources/Attachment'\nimport CustomerAddress, {\n  CustomerAddressCollection,\n} from '#resources/CustomerAddress'\nimport CustomerGroup, {\n  CustomerGroupCollection,\n} from '#resources/CustomerGroup'\nimport CustomerPasswordReset, {\n  CustomerPasswordResetCollection,\n} from '#resources/CustomerPasswordReset'\nimport CustomerPaymentSource, {\n  CustomerPaymentSourceCollection,\n} from '#resources/CustomerPaymentSource'\nimport CustomerSubscription, {\n  CustomerSubscriptionCollection,\n} from '#resources/CustomerSubscription'\nimport Customer, { CustomerCollection } from '#resources/Customer'\nimport DeliveryLeadTime, {\n  DeliveryLeadTimeCollection,\n} from '#resources/DeliveryLeadTime'\nimport Import, { ImportCollection } from '#resources/Import'\nimport InStockSubscription, {\n  InStockSubscriptionCollection,\n} from '#resources/InStockSubscription'\nimport InventoryModel, {\n  InventoryModelCollection,\n} from '#resources/InventoryModel'\nimport LineItemOption, {\n  LineItemOptionCollection,\n} from '#resources/LineItemOption'\nimport LineItem, { LineItemCollection } from '#resources/LineItem'\nimport Market, { MarketCollection } from '#resources/Market'\nimport Merchant, { MerchantCollection } from '#resources/Merchant'\nimport Order, { OrderCollection } from '#resources/Order'\nimport Parcel, { ParcelCollection } from '#resources/Parcel'\nimport PaymentMethod, {\n  PaymentMethodCollection,\n} from '#resources/PaymentMethod'\nimport PaymentGateway, {\n  PaymentGatewayCollection,\n} from '#resources/PaymentGateway'\nimport PaypalPayment, {\n  PaypalPaymentCollection,\n} from '#resources/PaypalPayment'\nimport Price, { PriceCollection } from '#resources/Price'\nimport PriceList, { PriceListCollection } from '#resources/PriceList'\nimport Shipment, { ShipmentCollection } from '#resources/Shipment'\nimport ShippingCategory, {\n  ShippingCategoryCollection,\n} from '#resources/ShippingCategory'\nimport ShippingMethod, {\n  ShippingMethodCollection,\n} from '#resources/ShippingMethod'\nimport ShippingZone, { ShippingZoneCollection } from '#resources/ShippingZone'\nimport SkuOption, { SkuOptionCollection } from '#resources/SkuOption'\nimport Sku, { SkuCollection } from '#resources/Sku'\nimport SkuList, { SkuListCollection } from '#resources/SkuList'\nimport SkuListItem, { SkuListItemCollection } from '#resources/SkuListItem'\nimport StockItem, { StockItemCollection } from '#resources/StockItem'\nimport InventoryStockLocation, {\n  InventoryStockLocationCollection,\n} from '#resources/InventoryStockLocation'\nimport StockLocation, {\n  StockLocationCollection,\n} from '#resources/StockLocation'\nimport Webhook, { WebhookCollection } from '#resources/Webhook'\nimport WireTransfer, { WireTransferCollection } from '#resources/WireTransfer'\nimport init, { Init } from '#resources/Initialize'\nimport Geocoder, { GeocoderCollection } from '#resources/Geocoder'\nimport PaymentSource, {\n  PaymentSourceCollection,\n} from '#resources/PaymentSource'\nimport Item, { ItemCollection } from '#resources/Item'\nimport Attachable, { AttachableCollection } from '#resources/Attachable'\nimport GiftCard, { GiftCardCollection } from '#resources/GiftCard'\nimport GiftCardRecipient, {\n  GiftCardRecipientCollection,\n} from '#resources/GiftCardRecipient'\nimport AdyenPayment, { AdyenPaymentCollection } from '#resources/AdyenPayment'\nimport BraintreePayment, {\n  BraintreePaymentCollection,\n} from '#resources/BraintreePayment'\nimport StripePayment, {\n  StripePaymentCollection,\n} from '#resources/StripePayment'\nimport { BaseResource } from './typings/Library'\nimport ExternalPayment, {\n  ExternalPaymentCollection,\n} from '#resources/ExternalPayment'\nimport Package, { PackageCollection } from '#resources/Package'\nimport Adjustment, { AdjustmentCollection } from '#resources/Adjustment'\nimport Capture, { CaptureCollection } from '#resources/Capture'\nimport Authorization, {\n  AuthorizationCollection,\n} from '#resources/Authorization'\nimport BillingInfoValidationRule, {\n  BillingInfoValidationRuleCollection,\n} from '#resources/BillingInfoValidationRule'\nimport Refund, { RefundCollection } from '#resources/Refund'\nimport Void, { VoidCollection } from '#resources/Void'\nimport CouponCodesPromotionRule, {\n  CouponCodesPromotionRuleCollection,\n} from '#resources/CouponCodesPromotionRule'\nimport Coupon, { CouponCollection } from '#resources/Coupon'\nimport ExternalPromotion, {\n  ExternalPromotionCollection,\n} from '#resources/ExternalPromotion'\nimport FixedAmountPromotion, {\n  FixedAmountPromotionCollection,\n} from '#resources/FixedAmountPromotion'\nimport FreeShippingPromotion, {\n  FreeShippingPromotionCollection,\n} from '#resources/FreeShippingPromotion'\nimport OrderAmountPromotionRule, {\n  OrderAmountPromotionRuleCollection,\n} from '#resources/OrderAmountPromotionRule'\nimport PercentageDiscountPromotion, {\n  PercentageDiscountPromotionCollection,\n} from '#resources/PercentageDiscountPromotion'\nimport PromotionRule, {\n  PromotionRuleCollection,\n} from '#resources/PromotionRule'\nimport Promotion, { PromotionCollection } from '#resources/Promotion'\nimport SkuListPromotionRule, {\n  SkuListPromotionRuleCollection,\n} from '#resources/SkuListPromotionRule'\nimport InventoryReturnLocation, {\n  InventoryReturnLocationCollection,\n} from '#resources/InventoryReturnLocation'\nimport Return, { ReturnCollection } from '#resources/Return'\nimport ExternalTaxCalculator, {\n  ExternalTaxCalculatorCollection,\n} from '#resources/ExternalTaxCalculator'\nimport ManualTaxCalculator, {\n  ManualTaxCalculatorCollection,\n} from '#resources/ManualTaxCalculator'\nimport TaxCalculator, {\n  TaxCalculatorCollection,\n} from '#resources/TaxCalculator'\nimport TaxRule, { TaxRuleCollection } from '#resources/TaxRule'\nimport TaxjarAccount, {\n  TaxjarAccountCollection,\n} from '#resources/TaxjarAccount'\nimport ReturnLineItem, {\n  ReturnLineItemCollection,\n} from '#resources/ReturnLineItem'\nimport ShipmentLineItem, {\n  ShipmentLineItemCollection,\n} from '#resources/ShipmentLineItem'\nimport TaxCategory, { TaxCategoryCollection } from '#resources/TaxCategory'\nimport StockTransfer, {\n  StockTransferCollection,\n} from './resources/StockTransfer'\nimport AvalaraAccount, {\n  AvalaraAccountCollection,\n} from '#resources/AvalaraAccount'\nimport Organization, { OrganizationCollection } from '#resources/Organization'\n\nexport {\n  AddressCollection,\n  AdjustmentCollection,\n  AdyenPaymentCollection,\n  AttachableCollection,\n  AttachmentCollection,\n  AuthorizationCollection,\n  AvalaraAccountCollection,\n  BillingInfoValidationRuleCollection,\n  BraintreePaymentCollection,\n  CaptureCollection,\n  CouponCodesPromotionRuleCollection,\n  CouponCollection,\n  CustomerAddressCollection,\n  CustomerCollection,\n  CustomerGroupCollection,\n  CustomerPasswordResetCollection,\n  CustomerPaymentSourceCollection,\n  CustomerSubscriptionCollection,\n  DeliveryLeadTimeCollection,\n  ExternalPaymentCollection,\n  ExternalPromotionCollection,\n  ExternalTaxCalculatorCollection,\n  FixedAmountPromotionCollection,\n  FreeShippingPromotionCollection,\n  GeocoderCollection,\n  GiftCardCollection,\n  GiftCardRecipientCollection,\n  ImportCollection,\n  InStockSubscriptionCollection,\n  InventoryModelCollection,\n  InventoryReturnLocationCollection,\n  InventoryStockLocationCollection,\n  LineItemCollection,\n  LineItemOptionCollection,\n  ManualTaxCalculatorCollection,\n  MarketCollection,\n  MerchantCollection,\n  OrderAmountPromotionRuleCollection,\n  OrderCollection,\n  OrganizationCollection,\n  PackageCollection,\n  ParcelCollection,\n  PaymentGatewayCollection,\n  PaymentMethodCollection,\n  PaymentSourceCollection,\n  PaypalPaymentCollection,\n  PercentageDiscountPromotionCollection,\n  PriceCollection,\n  PriceListCollection,\n  PromotionCollection,\n  PromotionRuleCollection,\n  RefundCollection,\n  ReturnCollection,\n  ReturnLineItemCollection,\n  ShipmentCollection,\n  ShipmentLineItemCollection,\n  ShippingCategoryCollection,\n  ShippingMethodCollection,\n  ShippingZoneCollection,\n  SkuCollection,\n  SkuListCollection,\n  SkuListItemCollection,\n  SkuListPromotionRuleCollection,\n  SkuOptionCollection,\n  StockItemCollection,\n  StockLocationCollection,\n  StockTransferCollection,\n  StripePaymentCollection,\n  TaxCalculatorCollection,\n  TaxCategoryCollection,\n  TaxRuleCollection,\n  TaxjarAccountCollection,\n  VoidCollection,\n  WebhookCollection,\n  WireTransferCollection,\n}\n\nexport interface CLayer {\n  Address: BaseResource<AddressCollection>\n  Adjustment: BaseResource<AdjustmentCollection>\n  AdyenPayment: BaseResource<AdyenPaymentCollection>\n  Attachable: BaseResource<AttachableCollection>\n  Attachment: BaseResource<AttachmentCollection>\n  Authorization: BaseResource<AuthorizationCollection>\n  AvalaraAccount: BaseResource<AvalaraAccountCollection>\n  BillingInfoValidationRule: BaseResource<BillingInfoValidationRuleCollection>\n  BraintreePayment: BaseResource<BraintreePaymentCollection>\n  Capture: BaseResource<CaptureCollection>\n  Coupon: BaseResource<CouponCollection>\n  CouponCodesPromotionRule: BaseResource<CouponCodesPromotionRuleCollection>\n  Customer: BaseResource<CustomerCollection>\n  CustomerAddress: BaseResource<CustomerAddressCollection>\n  CustomerGroup: BaseResource<CustomerGroupCollection>\n  CustomerPasswordReset: BaseResource<CustomerPasswordResetCollection>\n  CustomerPaymentSource: BaseResource<CustomerPaymentSourceCollection>\n  CustomerSubscription: BaseResource<CustomerSubscriptionCollection>\n  DeliveryLeadTime: BaseResource<DeliveryLeadTimeCollection>\n  ExternalPayment: BaseResource<ExternalPaymentCollection>\n  ExternalPromotion: BaseResource<ExternalPromotionCollection>\n  ExternalTaxCalculator: BaseResource<ExternalTaxCalculatorCollection>\n  FixedAmountPromotion: BaseResource<FixedAmountPromotionCollection>\n  FreeShippingPromotion: BaseResource<FreeShippingPromotionCollection>\n  Geocoder: BaseResource<GeocoderCollection>\n  GiftCard: BaseResource<GiftCardCollection>\n  GiftCardRecipient: BaseResource<GiftCardRecipientCollection>\n  Import: BaseResource<ImportCollection>\n  InStockSubscription: BaseResource<InStockSubscriptionCollection>\n  InventoryModel: BaseResource<InventoryModelCollection>\n  InventoryReturnLocation: BaseResource<InventoryReturnLocationCollection>\n  InventoryStockLocation: BaseResource<InventoryStockLocationCollection>\n  Item: BaseResource<ItemCollection>\n  LineItem: BaseResource<LineItemCollection>\n  LineItemOption: BaseResource<LineItemOptionCollection>\n  ManualTaxCalculator: BaseResource<ManualTaxCalculatorCollection>\n  Market: BaseResource<MarketCollection>\n  Merchant: BaseResource<MerchantCollection>\n  Order: BaseResource<OrderCollection>\n  Organization: BaseResource<OrganizationCollection>\n  OrderAmountPromotionRule: BaseResource<OrderAmountPromotionRuleCollection>\n  Package: BaseResource<PackageCollection>\n  Parcel: BaseResource<ParcelCollection>\n  PaymentGateway: BaseResource<PaymentGatewayCollection>\n  PaymentMethod: BaseResource<PaymentMethodCollection>\n  PaymentSource: BaseResource<PaymentSourceCollection>\n  PaypalPayment: BaseResource<PaypalPaymentCollection>\n  PercentageDiscountPromotion: BaseResource<\n    PercentageDiscountPromotionCollection\n  >\n  Price: BaseResource<PriceCollection>\n  PriceList: BaseResource<PriceListCollection>\n  Promotion: BaseResource<PromotionCollection>\n  PromotionRule: BaseResource<PromotionRuleCollection>\n  Refund: BaseResource<RefundCollection>\n  Return: BaseResource<ReturnCollection>\n  ReturnLineItem: BaseResource<ReturnLineItemCollection>\n  Shipment: BaseResource<ShipmentCollection>\n  ShipmentLineItem: BaseResource<ShipmentLineItemCollection>\n  ShippingCategory: BaseResource<ShippingCategoryCollection>\n  ShippingMethod: BaseResource<ShippingMethodCollection>\n  ShippingZone: BaseResource<ShippingZoneCollection>\n  Sku: BaseResource<SkuCollection>\n  SkuList: BaseResource<SkuListCollection>\n  SkuListItem: BaseResource<SkuListItemCollection>\n  SkuListPromotionRule: BaseResource<SkuListPromotionRuleCollection>\n  SkuOption: BaseResource<SkuOptionCollection>\n  StockItem: BaseResource<StockItemCollection>\n  StockLocation: BaseResource<StockLocationCollection>\n  StockTransfer: BaseResource<StockTransferCollection>\n  StripePayment: BaseResource<StripePaymentCollection>\n  TaxCalculator: BaseResource<TaxCalculatorCollection>\n  TaxCategory: BaseResource<TaxCategoryCollection>\n  TaxRule: BaseResource<TaxRuleCollection>\n  TaxjarAccount: BaseResource<TaxjarAccountCollection>\n  Void: BaseResource<VoidCollection>\n  Webhook: BaseResource<WebhookCollection>\n  WireTransfer: BaseResource<WireTransferCollection>\n  init: Init\n}\nconst CLayer: CLayer = {\n  Address,\n  Adjustment,\n  AdyenPayment,\n  Attachable,\n  Attachment,\n  Authorization,\n  AvalaraAccount,\n  BillingInfoValidationRule,\n  BraintreePayment,\n  Capture,\n  Coupon,\n  CouponCodesPromotionRule,\n  Customer,\n  CustomerAddress,\n  CustomerGroup,\n  CustomerPasswordReset,\n  CustomerPaymentSource,\n  CustomerSubscription,\n  DeliveryLeadTime,\n  ExternalPayment,\n  ExternalPromotion,\n  ExternalTaxCalculator,\n  FixedAmountPromotion,\n  FreeShippingPromotion,\n  Geocoder,\n  GiftCard,\n  GiftCardRecipient,\n  Import,\n  InStockSubscription,\n  InventoryModel,\n  InventoryReturnLocation,\n  InventoryStockLocation,\n  Item,\n  LineItem,\n  LineItemOption,\n  ManualTaxCalculator,\n  Market,\n  Merchant,\n  Order,\n  OrderAmountPromotionRule,\n  Organization,\n  Package,\n  Parcel,\n  PaymentGateway,\n  PaymentMethod,\n  PaymentSource,\n  PaypalPayment,\n  PercentageDiscountPromotion,\n  Price,\n  PriceList,\n  Promotion,\n  PromotionRule,\n  Refund,\n  Return,\n  ReturnLineItem,\n  Shipment,\n  ShipmentLineItem,\n  ShippingCategory,\n  ShippingMethod,\n  ShippingZone,\n  Sku,\n  SkuList,\n  SkuListItem,\n  SkuListPromotionRule,\n  SkuOption,\n  StockItem,\n  StockLocation,\n  StockTransfer,\n  StripePayment,\n  TaxCalculator,\n  TaxCategory,\n  TaxRule,\n  TaxjarAccount,\n  Void,\n  Webhook,\n  WireTransfer,\n  init,\n}\n\nconst initCLayer = init\n\nexport {\n  Address,\n  Adjustment,\n  AdyenPayment,\n  Attachable,\n  Attachment,\n  Authorization,\n  AvalaraAccount,\n  BillingInfoValidationRule,\n  BraintreePayment,\n  Capture,\n  Coupon,\n  CouponCodesPromotionRule,\n  Customer,\n  CustomerAddress,\n  CustomerGroup,\n  CustomerPasswordReset,\n  CustomerPaymentSource,\n  CustomerSubscription,\n  DeliveryLeadTime,\n  ExternalPayment,\n  ExternalPromotion,\n  ExternalTaxCalculator,\n  FixedAmountPromotion,\n  FreeShippingPromotion,\n  Geocoder,\n  GiftCard,\n  GiftCardRecipient,\n  Import,\n  InStockSubscription,\n  InventoryModel,\n  InventoryReturnLocation,\n  InventoryStockLocation,\n  Item,\n  LineItem,\n  LineItemOption,\n  ManualTaxCalculator,\n  Market,\n  Merchant,\n  Order,\n  OrderAmountPromotionRule,\n  Organization,\n  Package,\n  Parcel,\n  PaymentGateway,\n  PaymentMethod,\n  PaymentSource,\n  PaypalPayment,\n  PercentageDiscountPromotion,\n  Price,\n  PriceList,\n  Promotion,\n  PromotionRule,\n  Refund,\n  Return,\n  ReturnLineItem,\n  Shipment,\n  ShipmentLineItem,\n  ShippingCategory,\n  ShippingMethod,\n  ShippingZone,\n  Sku,\n  SkuList,\n  SkuListItem,\n  SkuListPromotionRule,\n  SkuOption,\n  StockItem,\n  StockLocation,\n  StockTransfer,\n  StripePayment,\n  TaxCalculator,\n  TaxCategory,\n  TaxRule,\n  TaxjarAccount,\n  Void,\n  Webhook,\n  WireTransfer,\n  initCLayer,\n}\n\nexport default CLayer\n"],"names":["library","createResourceLibrary","ExtendLibrary","includes","includeMetaInfo","this","axios","interceptors","params","select","order","page","value","perPage","limit","offset","where","options","relation","q","all","findBy","eqOptions","Object","keys","map","v","first","withCredentials","accessToken","endpoint","resourceLibrary","headers","_this$resourceLibrary","Authorization","baseUrl","__links","related","queryName","singleRequest","klass","setInterceptors","find","paramKey","setCustomInterceptors","customInterceptors","_klass","classThis","interceptResp","response","respHandlers","handlers","request","use","config","_","isEmpty","filter","has","fields","include","expInclude","split","includeKey","findKey","search","field","join","parserParams","_library$customInterc","_library$customInterc2","before","error","_library$customInterc3","_library$customInterc4","Promise","reject","length","shift","meta","isArray","data","metaCamelCase","toCamelCase","url","lastIndexOf","substring","cleanUrl","customRequests","collectionParent","_library$customInterc5","_library$customInterc6","_library$customInterc7","_library$customInterc8","Base","afterBuild","__meta","__collectionMeta","__headers","afterRequest","child","req","setHeaders","childData","id","collectionMeta","setMetaInfo","setCollectionMetaInfo","constructor","CollectionResponse","prototype","getMetaInfo","firstItem","getHeaders","pageCount","recordCount","BaseClass","mode","_library$Base","association","name","_this$constructor$res","self","AddressCollection","define","attributes","hasOne","className","Address","createResource","AttachmentCollection","belongsTo","polymorphic","Attachment","attachableId","attachableType","CustomerAddressCollection","CustomerAddress","CustomerGroupCollection","hasMany","CustomerGroup","CustomerPasswordResetCollection","CustomerPasswordReset","CustomerPaymentSourceCollection","CustomerPaymentSource","paymentSourceId","paymentSourceType","CustomerSubscriptionCollection","CustomerSubscription","CustomerCollection","Customer","DeliveryLeadTimeCollection","DeliveryLeadTime","ImportCollection","Import","InStockSubscriptionCollection","InStockSubscription","InventoryModelCollection","InventoryModel","LineItemOptionCollection","LineItemOption","LineItemCollection","LineItem","itemId","itemType","MarketCollection","Market","MerchantCollection","Merchant","OrderCollection","Order","ParcelCollection","Parcel","PaymentMethodCollection","PaymentMethod","PaymentGatewayCollection","PaymentGateway","PaypalPaymentCollection","PaypalPayment","PriceCollection","Price","PriceListCollection","PriceList","ShipmentCollection","Shipment","ShippingCategoryCollection","ShippingCategory","ShippingMethodCollection","ShippingMethod","ShippingZoneCollection","ShippingZone","SkuOptionCollection","SkuOption","SkuCollection","Sku","SkuListCollection","SkuList","SkuListItemCollection","SkuListItem","StockItemCollection","StockItem","InventoryStockLocationCollection","InventoryStockLocation","StockLocationCollection","StockLocation","WebhookCollection","Webhook","WireTransferCollection","WireTransfer","init","GeocoderCollection","Geocoder","PaymentSourceCollection","PaymentSource","ItemCollection","Item","AttachableCollection","Attachable","GiftCardCollection","GiftCard","GiftCardRecipientCollection","GiftCardRecipient","AdyenPaymentCollection","AdyenPayment","BraintreePaymentCollection","BraintreePayment","StripePaymentCollection","StripePayment","ExternalPaymentCollection","ExternalPayment","PackageCollection","Package","AdjustmentCollection","Adjustment","CaptureCollection","Capture","AuthorizationCollection","BillingInfoValidationRuleCollection","BillingInfoValidationRule","RefundCollection","Refund","VoidCollection","Void","CouponCodesPromotionRuleCollection","CouponCodesPromotionRule","CouponCollection","Coupon","ExternalPromotionCollection","ExternalPromotion","FixedAmountPromotionCollection","FixedAmountPromotion","FreeShippingPromotionCollection","FreeShippingPromotion","OrderAmountPromotionRuleCollection","OrderAmountPromotionRule","PercentageDiscountPromotionCollection","PercentageDiscountPromotion","PromotionRuleCollection","PromotionRule","PromotionCollection","Promotion","SkuListPromotionRuleCollection","SkuListPromotionRule","InventoryReturnLocationCollection","ReturnCollection","ExternalTaxCalculatorCollection","ExternalTaxCalculator","ManualTaxCalculatorCollection","ManualTaxCalculator","TaxCalculatorCollection","TaxCalculator","TaxRuleCollection","TaxRule","TaxjarAccountCollection","TaxjarAccount","ReturnLineItemCollection","ShipmentLineItemCollection","ShipmentLineItem","TaxCategoryCollection","TaxCategory","StockTransferCollection","StockTransfer","AvalaraAccountCollection","AvalaraAccount","OrganizationCollection","Organization","CLayer","InventoryReturnLocation","Return","ReturnLineItem","initCLayer"],"mappings":"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AQ,kBAAmB,CAAEZ,UAAW,uBA3DTX,GAC/B6C,YAAY,WA8DrB,IAAMC,EAAWlK,EAAQiI,eAAmCgC,GAE5DC,EAASnE,YAAW,WAEd1F,KAAK8J,eAAe9J,KAAK8J,OAEzB9J,KAAK+J,iBAAiB/J,KAAK+J,gBCpEpBC,gFAcJzC,OAAP,gBACOC,WACH,SACA,OACA,kBACA,KACA,YACA,YACA,YACA,kBACA,iBAEGC,OAAO,WAAY,CAAEC,UAAW,kBAChCD,OAAO,YAAa,CAAEC,UAAW,mBACjCD,OAAO,iBAAkB,CAAEC,UAAW,wBACtCY,QAAQ,gBAAiB,CAAEZ,UAAW,sBA7BTX,GAC7BiD,YAAY,SAgCrB,IAAMC,EAAStK,EAAQiI,eAAiCoC,GCnC3CE,gFAUJ3C,OAAP,gBACOC,WACH,OACA,KACA,YACA,YACA,YACA,kBACA,iBAGGC,OAAO,UAAW,CAAEC,UAAW,gBArBAX,GAC/BmD,YAAY,WAwBrB,IAAMC,EAAWxK,EAAQiI,eAAmCsC,GCf/CE,gFA6HJ7C,OAAP,gBACOC,WACH,SACA,SACA,gBACA,oBACA,QACA,WACA,YACA,gBACA,mBACA,eACA,eACA,cACA,UACA,iBACA,cACA,0BACA,aACA,sBACA,sBACA,0BACA,sBACA,sBACA,0BACA,2BACA,2BACA,+BACA,sBACA,sBACA,0BACA,sBACA,sBACA,0BACA,yBACA,yBACA,6BACA,yBACA,yBACA,6BACA,8BACA,8BACA,kCACA,yBACA,yBACA,6BACA,mBACA,mBACA,uBACA,0BACA,0BACA,8BACA,6BACA,6BACA,iCACA,6BACA,6BACA,iCACA,kCACA,kCACA,sCACA,6BACA,6BACA,iCACA,4BACA,4BACA,gCACA,kBACA,kBACA,sBACA,YACA,uBACA,iBACA,uBACA,QACA,UACA,YACA,WACA,aACA,cACA,SACA,UACA,WACA,WACA,UACA,eACA,yBACA,0BACA,2BACA,gCACA,gCACA,qCACA,4CACA,2CACA,WACA,WACA,aACA,cACA,mBACA,uBACA,KACA,aACA,YACA,YACA,YACA,kBACA,iBAGGC,OAAO,SAAU,CAAEC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"}