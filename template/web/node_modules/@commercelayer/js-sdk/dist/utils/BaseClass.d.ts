import { InitConfig } from "../resources/Initialize";
import library from "../resources/library";
import { HeadersResponse, MultiRelationship, SingleRelationship } from "../typings/Library";
export declare type Meta = {
    pageCount?: number;
    recordCount?: number;
    mode?: string;
};
declare class BaseClass extends library.Base {
    __meta: Meta;
    __collectionMeta: Meta;
    __headers: HeadersResponse | {};
    includes: (...attribute: string[]) => this;
    all: () => Promise<MultiRelationship<this>> | Promise<SingleRelationship<this>>;
    getMetaInfo(): Meta;
    getHeaders(): {} | HeadersResponse;
    pageCount(): number;
    recordCount(): number;
    mode(): string;
    setMetaInfo(meta: object): object;
    setHeaders(headers: object): object;
    setCollectionMetaInfo(meta: object): object;
    klass(): any;
    association(name: string): any;
    withCredentials({ accessToken, endpoint }: InitConfig): this;
    setCustomInterceptors(interceptors: InitConfig['interceptors']): this;
}
export default BaseClass;
