{"version":3,"file":"js-sdk.esm.js","sources":["../src/utils/helpers.ts","../src/resources/library.ts","../src/utils/BaseClass.ts","../src/resources/Address.ts","../src/resources/Attachment.ts","../src/resources/CustomerAddress.ts","../src/resources/CustomerGroup.ts","../src/resources/CustomerPasswordReset.ts","../src/resources/CustomerPaymentSource.ts","../src/resources/CustomerSubscription.ts","../src/resources/Customer.ts","../src/resources/DeliveryLeadTime.ts","../src/resources/Import.ts","../src/resources/InStockSubscription.ts","../src/resources/InventoryModel.ts","../src/resources/LineItemOption.ts","../src/resources/LineItem.ts","../src/resources/Market.ts","../src/resources/Merchant.ts","../src/resources/Order.ts","../src/resources/Parcel.ts","../src/resources/PaymentMethod.ts","../src/resources/PaymentGateway.ts","../src/resources/PaypalPayment.ts","../src/resources/Price.ts","../src/resources/PriceList.ts","../src/resources/Shipment.ts","../src/resources/ShippingCategory.ts","../src/resources/ShippingMethod.ts","../src/resources/ShippingZone.ts","../src/resources/SkuOption.ts","../src/resources/Sku.ts","../src/resources/SkuList.ts","../src/resources/SkuListItem.ts","../src/resources/StockItem.ts","../src/resources/InventoryStockLocation.ts","../src/resources/StockLocation.ts","../src/resources/Webhook.ts","../src/resources/WireTransfer.ts","../src/resources/Initialize.ts","../src/resources/Geocoder.ts","../src/resources/PaymentSource.ts","../src/resources/Item.ts","../src/resources/Attachable.ts","../src/resources/GiftCard.ts","../src/resources/GiftCardRecipient.ts","../src/resources/AdyenPayment.ts","../src/resources/BraintreePayment.ts","../src/resources/StripePayment.ts","../src/resources/ExternalPayment.ts","../src/resources/Package.ts","../src/resources/Adjustment.ts","../src/resources/Capture.ts","../src/resources/Authorization.ts","../src/resources/BillingInfoValidationRule.ts","../src/resources/Refund.ts","../src/resources/Void.ts","../src/resources/CouponCodesPromotionRule.ts","../src/resources/Coupon.ts","../src/resources/ExternalPromotion.ts","../src/resources/FixedAmountPromotion.ts","../src/resources/FreeShippingPromotion.ts","../src/resources/OrderAmountPromotionRule.ts","../src/resources/PercentageDiscountPromotion.ts","../src/resources/PromotionRule.ts","../src/resources/Promotion.ts","../src/resources/SkuListPromotionRule.ts","../src/resources/InventoryReturnLocation.ts","../src/resources/Return.ts","../src/resources/ExternalTaxCalculator.ts","../src/resources/ManualTaxCalculator.ts","../src/resources/TaxCalculator.ts","../src/resources/TaxRule.ts","../src/resources/TaxjarAccount.ts","../src/resources/ReturnLineItem.ts","../src/resources/ShipmentLineItem.ts","../src/resources/TaxCategory.ts","../src/resources/StockTransfer.ts","../src/resources/AvalaraAccount.ts","../src/resources/Organization.ts","../src/index.ts"],"sourcesContent":["import _ from 'lodash'\n\nexport const cleanUrl = (url: string) => {\n  const lastSlash = url.lastIndexOf('/') + 1\n  if (lastSlash === url.length) {\n    return url.substring(0, url.length - 1)\n  }\n  return url\n}\n\ntype FilterParams = Partial<{\n  filter: {\n    q: object\n  }\n  fields: object\n  include: string\n  page: {\n    size: number\n    number: number\n  }\n}>\n\nexport const parserParams = <P extends FilterParams>(params: P): P => {\n  if (!_.isEmpty(params.filter) && !_.has(params.filter, 'q')) {\n    params.filter = {\n      q: params.filter,\n    }\n  }\n  if (!_.isEmpty(params.fields) && !_.isEmpty(params.include)) {\n    const expInclude = params.include.split(',')\n    const includeKey = _.findKey(params.fields, (v: string) => {\n      return !_.isEmpty(params.include) && v.search(params.include) !== -1\n        ? true\n        : false\n    })\n    const expFields = params.fields[includeKey].split(',')\n    const fields = expFields\n      .map((field) => {\n        return expInclude.includes(field) ? _.first(field.split('.')) : field\n      })\n      .join(',')\n    params.fields[includeKey] = fields\n  }\n  return params\n}\n","// TODO remove ts-ignore comments\nimport {\n  createResourceLibrary,\n  // @ts-ignore\n  CollectionResponse,\n} from 'active-resource'\nimport Library, { GeneralObject } from '#typings/Library'\nimport { InitConfig } from './Initialize'\nimport _ from 'lodash'\nimport BaseClass from '#utils/BaseClass'\nimport { cleanUrl, parserParams } from '#utils/helpers'\n\nconst subdomain = 'yourdomain'\n\nconst library: Library = createResourceLibrary(\n  `https://${subdomain}.commercelayer.io/api/`\n)\n\nlibrary['customRequests'] = {}\n\nclass ExtendLibrary extends library.Base {\n  static accessToken = ''\n  static endpoint = ''\n  static singleRequest = false\n  static meta = {}\n  constructor() {\n    super()\n    return this\n  }\n  static includes(...params: string[]) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.includes(...params)\n  }\n  static select(...params: string[]) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.select(...params)\n  }\n  static order(params: object) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.order(params)\n  }\n  static page(value?: number) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.page(value)\n  }\n  static perPage(value?: number) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.perPage(value)\n  }\n  static limit(value: any) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.limit(value)\n  }\n  static offset(value: any) {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.offset(value)\n  }\n  static where(options: object): any {\n    // @ts-ignore\n    const relation = super.where({\n      q: { ...options },\n    })\n    this.includeMetaInfo(relation.interface().axios.interceptors)\n    return relation\n  }\n  static all() {\n    // @ts-ignore\n    this.includeMetaInfo(this.interface().axios.interceptors)\n    // @ts-ignore\n    return super.all()\n  }\n  static findBy(options: GeneralObject): any {\n    const eqOptions: GeneralObject = {}\n    Object.keys(options).map((v: string) => {\n      eqOptions[`${v}_eq`] = options[v]\n    })\n    return this.where(eqOptions).first()\n  }\n  static withCredentials({ accessToken, endpoint }: InitConfig) {\n    if (!this.accessToken && !this.endpoint) {\n      if (!this.resourceLibrary.headers?.Authorization) {\n        this.accessToken = `Bearer `\n        this.endpoint = this.resourceLibrary.baseUrl\n      } else {\n        this.accessToken = this.resourceLibrary.headers.Authorization\n        this.endpoint = this.resourceLibrary.baseUrl\n      }\n    }\n    this.resourceLibrary.headers = {\n      Authorization: `Bearer ${accessToken}`,\n    }\n    this.__links = { related: `${endpoint}/api/${this.queryName}` }\n    this.singleRequest = true\n    return this\n  }\n  static includeMetaInfo(interceptors: any = null, klass: any = this) {\n    // @ts-ignore\n    const i = interceptors || this.resourceLibrary.interface.axios.interceptors\n    this.setInterceptors(i, klass)\n    return this\n  }\n  static find(paramKey: string) {\n    this.includeMetaInfo()\n    return super.find(paramKey)\n  }\n  static setCustomInterceptors(interceptors: InitConfig['interceptors']) {\n    library.customInterceptors = interceptors\n    return this\n  }\n  static setInterceptors(interceptors: any, _klass: any = null) {\n    const classThis = this\n    const interceptReq = interceptors?.request\n    const interceptResp = interceptors?.response\n    const respHandlers = interceptResp?.handlers\n    interceptReq.use(\n      (config) => {\n        if (!_.isEmpty(config.params)) {\n          config.params = parserParams(config.params)\n        }\n        if (\n          !_.isEmpty(library?.customInterceptors?.request) &&\n          _.has(library?.customInterceptors?.request, 'before')\n        ) {\n          return library.customInterceptors.request.before(config)\n        }\n        return config\n      },\n      (error) => {\n        if (\n          !_.isEmpty(library?.customInterceptors?.request) &&\n          _.has(library?.customInterceptors?.request, 'error')\n        ) {\n          return library.customInterceptors.request.error(error)\n        }\n        return Promise.reject(error)\n      }\n    )\n    if (respHandlers?.length === 1) {\n      interceptResp.handlers.shift()\n      interceptResp.use(\n        (config: any) => {\n          if (!config['data']) return config\n          const meta = _.isArray(config.data.data)\n            ? config.data.meta\n            : config.data.data.meta\n          const metaCamelCase = library.interface.toCamelCase(meta)\n          classThis.meta = metaCamelCase\n          // config.data.collectionParent = classThis\n          const url = cleanUrl(config.config.url)\n          library.customRequests = {}\n          library.customRequests[url] = {\n            ...config.data,\n            headers: config.headers,\n            collectionParent: classThis,\n          }\n          if (\n            !_.isEmpty(library?.customInterceptors?.response) &&\n            _.has(library?.customInterceptors?.response, 'before')\n          ) {\n            return library.customInterceptors.response.before(config)\n          }\n          return config\n        },\n        (error: any) => {\n          if (\n            !_.isEmpty(library?.customInterceptors?.response) &&\n            _.has(library?.customInterceptors?.response, 'error')\n          ) {\n            return library.customInterceptors.response.error(error)\n          }\n          return Promise.reject(error)\n        }\n      )\n    }\n  }\n}\n\nconst setMetaByRequest = <T extends BaseClass>(child: T) => {\n  _.map(library.customRequests, (req) => {\n    if (!_.isEmpty(req.headers)) {\n      child.setHeaders(req.headers)\n    }\n    if (_.isArray(req.data)) {\n      // @ts-ignore\n      const childData = _.first(req.data.filter((v) => child.id === v.id))\n      if (!_.isEmpty(childData)) {\n        const collectionMeta = library.interface.toCamelCase(req.meta)\n        const meta = library.interface.toCamelCase(childData.meta)\n        child.setMetaInfo(meta)\n        child.setCollectionMetaInfo(collectionMeta)\n      }\n    } else {\n      const meta = library.interface.toCamelCase(req.data.meta)\n      child.setMetaInfo(meta)\n    }\n  })\n}\n\nExtendLibrary.afterBuild(function() {\n  // @ts-ignore\n  delete this.__meta\n  // @ts-ignore\n  delete this.__collectionMeta\n  // @ts-ignore\n  delete this.__headers\n})\n\nExtendLibrary.afterRequest(function() {\n  // @ts-ignore\n  const klass = this\n  // @ts-ignore\n  setMetaByRequest<typeof klass>(this)\n  // @ts-ignore\n  if (this.constructor.singleRequest) {\n    // @ts-ignore\n    this.constructor.resourceLibrary.baseUrl = this.constructor.endpoint\n    // @ts-ignore\n    this.constructor.resourceLibrary.headers = {\n      // @ts-ignore\n      Authorization: this.constructor.accessToken,\n    }\n    // @ts-ignore\n    this.constructor.__links = null\n    // @ts-ignore\n    this.constructor.singleRequest = false\n  }\n})\n\nCollectionResponse.prototype.getMetaInfo = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return {}\n  }\n  return _.has(firstItem, '__collectionMeta')\n    ? firstItem.__collectionMeta\n    : firstItem.getMetaInfo()\n}\n\nCollectionResponse.prototype.getHeaders = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return {}\n  }\n  return _.has(firstItem, '__headers')\n    ? firstItem.__headers\n    : firstItem.getHeaders()\n}\n\nCollectionResponse.prototype.pageCount = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return 0\n  }\n  return _.has(firstItem, '__collectionMeta.pageCount')\n    ? firstItem.__collectionMeta.pageCount\n    : this.first().pageCount()\n}\n\nCollectionResponse.prototype.recordCount = function() {\n  const firstItem = this.first()\n  if (_.isEmpty(firstItem)) {\n    return 0\n  }\n  return _.has(firstItem, '__collectionMeta.recordCount')\n    ? firstItem.__collectionMeta.recordCount\n    : this.first().recordCount()\n}\n\nCollectionResponse.prototype.withCredentials = function({\n  accessToken,\n}: // endpoint, NOTE: To understand\nInitConfig) {\n  library.headers = {\n    Authorization: `Bearer ${accessToken}`,\n  }\n  library.singleRequest = true\n  return this\n}\n\nlibrary.Base = ExtendLibrary\n\nexport default library\n","// TODO remove ts-ignore comments\nimport { InitConfig } from '#resources/Initialize'\nimport library from '#resources/library'\nimport {\n  HeadersResponse,\n  MultiRelationship,\n  SingleRelationship,\n} from '#typings/Library'\n\nexport type Meta = {\n  pageCount?: number\n  recordCount?: number\n  mode?: string\n}\n\nclass BaseClass extends library.Base {\n  __meta: Meta = {}\n  __collectionMeta: Meta = {}\n  __headers: HeadersResponse | {} = {}\n  includes: (...attribute: string[]) => this\n  all: () =>\n    | Promise<MultiRelationship<this>>\n    | Promise<SingleRelationship<this>>\n  // errors: () => Errors<this>\n  // update: (attrs: object, callback?: (response: this) => void) => this\n  getMetaInfo() {\n    return this.__meta\n  }\n  getHeaders() {\n    return this.__headers\n  }\n  pageCount() {\n    return this.__meta.pageCount\n  }\n  recordCount() {\n    return this.__meta.recordCount\n  }\n  mode() {\n    return this.__meta.mode\n  }\n  setMetaInfo(meta: object) {\n    return (this.__meta = meta)\n  }\n  setHeaders(headers: object) {\n    return (this.__headers = headers)\n  }\n  setCollectionMetaInfo(meta: object) {\n    return (this.__collectionMeta = meta)\n  }\n  klass() {\n    // @ts-ignore\n    const interceptors = super.klass().interface().axios.interceptors\n    // @ts-ignore\n    this.constructor.includeMetaInfo(interceptors)\n    // @ts-ignore\n    return super.klass()\n  }\n  association(name: string) {\n    // @ts-ignore\n    const interceptors = super.association(name).interface().axios.interceptors\n    // @ts-ignore\n    this.constructor.includeMetaInfo(interceptors)\n    // @ts-ignore\n    return super.association(name)\n  }\n  withCredentials({ accessToken, endpoint }: InitConfig) {\n    // @ts-ignore\n    this.constructor.includeMetaInfo()\n    // @ts-ignore\n    if (!this.constructor.accessToken && !this.constructor.endpoint) {\n      // @ts-ignore\n      if (!this.constructor.resourceLibrary.headers?.Authorization) {\n        // @ts-ignore\n        this.constructor.accessToken = `Bearer `\n        // @ts-ignore\n        this.constructor.endpoint = this.constructor.resourceLibrary.baseUrl\n      } else {\n        // @ts-ignore\n        this.constructor.accessToken = this.constructor.resourceLibrary.headers.Authorization\n        // @ts-ignore\n        this.constructor.endpoint = this.constructor.resourceLibrary.baseUrl\n      }\n    }\n    // @ts-ignore\n    this.constructor.resourceLibrary.headers = {\n      Authorization: `Bearer ${accessToken}`,\n    }\n    // @ts-ignore\n    this.__links = {\n      // @ts-ignore\n      related: `${endpoint}/api/${this.constructor.queryName}`,\n      // @ts-ignore\n      self: `${endpoint}/api/${this.constructor.queryName}/${this.id}`,\n    }\n    // @ts-ignore\n    this.constructor.singleRequest = true\n    return this\n  }\n  setCustomInterceptors(interceptors: InitConfig['interceptors']) {\n    // @ts-ignore\n    this.constructor.customInterceptors = interceptors\n    return this\n  }\n}\n\nexport default BaseClass\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { GeocoderCollection } from './Geocoder'\n\nexport class AddressCollection extends BaseClass {\n  static className = 'Address'\n  billingInfo: string\n  business: boolean\n  city: string\n  company: string\n  countryCode: string\n  createdAt: Date\n  customerAddressId?: string\n  email: string\n  firstName: string\n  fullAddress: string\n  fullName: string\n  geocoder: () => Promise<GeocoderCollection>\n  id: string\n  isGeocoded: boolean\n  isLocalized: boolean\n  lastName: string\n  lat: number\n  line1: string\n  line2: string\n  lng: number\n  mapUrl: string\n  metadata: object\n  name: string\n  notes: string\n  phone: string\n  providerName: string\n  reference: string\n  referenceOrigin: string\n  stateCode: string\n  staticMapUrl: string\n  updatedAt: Date\n  zipCode: string\n  static define() {\n    this.attributes(\n      'business',\n      'firstName',\n      'lastName',\n      'company',\n      'fullName',\n      'line1',\n      'line2',\n      'city',\n      'zipCode',\n      'stateCode',\n      'countryCode',\n      'phone',\n      'fullAddress',\n      'name',\n      'email',\n      'notes',\n      'lat',\n      'lng',\n      'isLocalized',\n      'isGeocoded',\n      'providerName',\n      'mapUrl',\n      'staticMapUrl',\n      'billingInfo',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('geocoder', { className: 'Geocoder' })\n  }\n}\n\nconst Address = library.createResource<AddressCollection>(AddressCollection)\n\nexport default Address\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AttachmentCollection extends BaseClass {\n  static className = 'Attachment'\n  name: string\n  description: string\n  url: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  attachableId: string\n  attachableType: string\n  static define() {\n    this.attributes(\n      'name',\n      'description',\n      'url',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.belongsTo('attachable', { polymorphic: true })\n  }\n}\n\nconst Attachment = library.createResource<AttachmentCollection>(\n  AttachmentCollection\n)\n\nAttachment.afterBuild(function() {\n  // @ts-ignore\n  if (this.attachableId) delete this.attachableId\n  // @ts-ignore\n  if (this.attachableType) delete this.attachableType\n})\n\nexport default Attachment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { AddressCollection } from './Address'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerAddressCollection extends BaseClass {\n  static className = 'CustomerAddress'\n  name: string\n  id: string\n  createdAt: string\n  updatedAt: string\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  address: () => SingleRelationship<AddressCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('address', { className: 'Address' })\n  }\n}\n\nconst CustomerAddress = library.createResource<CustomerAddressCollection>(\n  CustomerAddressCollection\n)\n\nexport default CustomerAddress\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { CustomerCollection } from './Customer'\nimport { PriceListCollection } from './PriceList'\n\nexport class CustomerGroupCollection extends BaseClass {\n  static className = 'CustomerGroup'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customers: () => MultiRelationship<CustomerCollection>\n  priceList: () => SingleRelationship<PriceListCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('priceList', { className: 'PriceList' })\n\n    this.hasMany('customers', { className: 'Customer' })\n  }\n}\n\nconst CustomerGroup = library.createResource<CustomerGroupCollection>(\n  CustomerGroupCollection\n)\n\nexport default CustomerGroup\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerPasswordResetCollection extends BaseClass {\n  static className = 'CustomerPasswordReset'\n  customerEmail: string\n  resetPasswordToken: string\n  customerPassword: string\n  _resetPasswordToken: string\n  resetPasswordAt: Date\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'customerEmail',\n      'resetPasswordToken',\n      'customerPassword',\n      '_resetPasswordToken',\n      'resetPasswordAt',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst CustomerPasswordReset = library.createResource<\n  CustomerPasswordResetCollection\n>(CustomerPasswordResetCollection)\n\nexport default CustomerPasswordReset\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerPaymentSourceCollection extends BaseClass {\n  static className = 'CustomerPaymentSource'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  paymentSourceId: string\n  paymentSourceType: string\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('customer', { className: 'Customer' })\n    this.belongsTo('paymentSource', { polymorphic: true })\n  }\n}\n\nconst CustomerPaymentSource = library.createResource<\n  CustomerPaymentSourceCollection\n>(CustomerPaymentSourceCollection)\n\nCustomerPaymentSource.afterBuild(function() {\n  // @ts-ignore\n  if (this.paymentSourceId) delete this.paymentSourceId\n  // @ts-ignore\n  if (this.paymentSourceType) delete this.paymentSourceType\n})\n\nexport default CustomerPaymentSource\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class CustomerSubscriptionCollection extends BaseClass {\n  static className = 'CustomerSubscription'\n  customerEmail: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'customerEmail',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst CustomerSubscription = library.createResource<\n  CustomerSubscriptionCollection\n>(CustomerSubscriptionCollection)\n\nexport default CustomerSubscription\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport {\n  MultiRelationship,\n  SingleRelationship,\n} from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CustomerSubscriptionCollection } from './CustomerSubscription'\nimport { CustomerAddressCollection } from './CustomerAddress'\nimport { CustomerPaymentSourceCollection } from './CustomerPaymentSource'\nimport { CustomerGroupCollection } from './CustomerGroup'\n\nexport class CustomerCollection extends BaseClass {\n  static className = 'Customer'\n  createdAt: Date\n  email: string\n  hasPassword: boolean\n  id: string\n  metadata: object\n  password: string\n  passwordBlank: boolean\n  passwordPresent: boolean\n  reference: string\n  referenceOrigin: string\n  status: 'prospect' | 'acquired' | 'repeat'\n  updatedAt: Date\n  customerAddresses: () => MultiRelationship<CustomerAddressCollection>\n  customerPaymentSources: () => MultiRelationship<\n    CustomerPaymentSourceCollection\n  >\n  customerSubscriptions: () => MultiRelationship<CustomerSubscriptionCollection>\n  orders: () => MultiRelationship<OrderCollection>\n  customerGroup: () => SingleRelationship<CustomerGroupCollection>\n  static define() {\n    this.attributes(\n      'email',\n      'hasPassword',\n      'password',\n      'passwordBlank',\n      'passwordPresent',\n      'status',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('customerGroup', { className: 'CustomerGroup' })\n\n    this.hasMany('customerAddresses', { className: 'CustomerAddress' })\n    this.hasMany('customerPaymentSources', {\n      className: 'CustomerPaymentSource',\n    })\n    this.hasMany('customerSubscriptions', { className: 'CustomerSubscription' })\n    this.hasMany('orders', { className: 'Order' })\n  }\n}\n\nconst Customer = library.createResource<CustomerCollection>(CustomerCollection)\n\nexport default Customer\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { ShippingMethodCollection } from './ShippingMethod'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class DeliveryLeadTimeCollection extends BaseClass {\n  static className = 'DeliveryLeadTime'\n  minHours: number\n  maxHours: number\n  minDays: number\n  maxDays: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: Record<string, string>\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  shippingMethod: () => SingleRelationship<ShippingMethodCollection>\n  static define() {\n    this.attributes(\n      'minHours',\n      'maxHours',\n      'minDays',\n      'maxDays',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('shippingMethod', { className: 'ShippingMethod' })\n  }\n}\n\nconst DeliveryLeadTime = library.createResource<DeliveryLeadTimeCollection>(\n  DeliveryLeadTimeCollection\n)\n\nexport default DeliveryLeadTime\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ImportCollection extends BaseClass {\n  static className = 'Import'\n  resourceType: string\n  parentResourceId: number\n  status: string\n  startedAt: Date\n  completedAt: Date\n  inputs: object\n  errorsCount: number\n  warningsCount: number\n  destroyedCount: number\n  errorsLog: object\n  warningsLog: object\n  cleanupRecords: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'resourceType',\n      'parentResourceId',\n      'status',\n      'startedAt',\n      'completedAt',\n      'inputs',\n      'errorsCount',\n      'warningsCount',\n      'destroyedCount',\n      'errorsLog',\n      'warningsLog',\n      'cleanupRecords',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Import = library.createResource<ImportCollection>(ImportCollection)\n\nexport default Import\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SkuCollection } from './Sku'\nimport { MarketCollection } from './Market'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class InStockSubscriptionCollection extends BaseClass {\n  static className = 'InStockSubscription'\n  status: string\n  customerEmail: string\n  skuCode: string\n  _activate: boolean\n  _deactivate: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'status',\n      'customerEmail',\n      'skuCode',\n      '_activate',\n      '_deactivate',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst InStockSubscription = library.createResource<\n  InStockSubscriptionCollection\n>(InStockSubscriptionCollection)\n\nexport default InStockSubscription\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { InventoryStockLocationCollection } from './InventoryStockLocation'\n\nexport class InventoryModelCollection extends BaseClass {\n  static className = 'InventoryModel'\n  name: string\n  id: string\n  stockLocationsCutoff: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  inventoryStockLocations: () => MultiRelationship<\n    InventoryStockLocationCollection\n  >\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'stockLocationsCutoff',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasMany('inventoryStockLocations', {\n      className: 'InventoryStockLocation',\n    })\n  }\n}\n\nconst InventoryModel = library.createResource<InventoryModelCollection>(\n  InventoryModelCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { SkuOptionCollection } from './SkuOption'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class LineItemOptionCollection extends BaseClass {\n  static className = 'LineItemOption'\n  name: string\n  quantity: number\n  currencyCode: string\n  unitAmountCents: number\n  unitAmountFloat: number\n  formattedUnitAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  formattedTotalAmount: string\n  delayHours: number\n  delayDays: number\n  options: object\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  lineItem: () => SingleRelationship<LineItemCollection>\n  skuOption: () => SingleRelationship<SkuOptionCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'quantity',\n      'currencyCode',\n      'unitAmountCents',\n      'unitAmountFloat',\n      'formattedUnitAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'delayHours',\n      'delayDays',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('lineItem', { className: 'LineItem' })\n    this.hasOne('skuOption', { className: 'SkuOption' })\n  }\n}\n\nconst LineItemOption = library.createResource<LineItemOptionCollection>(\n  LineItemOptionCollection\n)\n\nexport default LineItemOption\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { LineItemOptionCollection } from './LineItemOption'\nimport { OrderCollection } from './Order'\n\nexport class LineItemCollection extends BaseClass {\n  static className = 'LineItem'\n  quantity: number\n  itemType: string\n  imageUrl: string\n  id: string\n  formattedUnitAmount: string\n  formattedTotalAmount: string\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  _updateQuantity: string\n  currencyCode: string\n  unitAmountCents: number\n  unitAmountFloat: number\n  optionsAmountCents: number\n  optionsAmountFloat: number\n  formattedOptionsAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  name: string\n  taxRate: number\n  taxBreakdown: object\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  itemId: string\n  order: () => SingleRelationship<OrderCollection>\n  lineItemOptions: () => MultiRelationship<LineItemOptionCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      '_updateQuantity',\n      'currencyCode',\n      'unitAmountCents',\n      'unitAmountFloat',\n      'formattedUnitAmount',\n      'optionsAmountCents',\n      'optionsAmountFloat',\n      'formattedOptionsAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'name',\n      'imageUrl',\n      'taxRate',\n      'taxBreakdown',\n      'itemType',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.belongsTo('item', { polymorphic: true })\n    this.hasMany('lineItemOptions', { className: 'LineItemOption' })\n  }\n}\n\nconst LineItem = library.createResource<LineItemCollection>(LineItemCollection)\n\nLineItem.afterBuild(function() {\n  // @ts-ignore\n  if (this.itemId) delete this.itemId\n  // @ts-ignore\n  if (this.itemType) delete this.itemType\n})\n\nexport default LineItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { CustomerGroupCollection } from './CustomerGroup'\nimport { PriceListCollection } from './PriceList'\nimport { InventoryModelCollection } from './InventoryModel'\n\nexport class MarketCollection extends BaseClass {\n  static className = 'Market'\n  number: number\n  name: string\n  facebookPixelId: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  customerGroup: () => MultiRelationship<CustomerGroupCollection>\n  priceList: () => MultiRelationship<PriceListCollection>\n  inventoryModel: () => MultiRelationship<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'name',\n      'facebookPixelId',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('merchant', { className: 'Merchant' })\n    this.hasOne('priceList', { className: 'PriceList' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n    this.hasMany('customerGroup', { className: 'CustomerGroup' })\n  }\n}\n\nconst Market = library.createResource<MarketCollection>(MarketCollection)\n\nexport default Market\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { AddressCollection } from './Address'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class MerchantCollection extends BaseClass {\n  static className = 'Merchant'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  address: () => SingleRelationship<AddressCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('address', { className: 'Address' })\n  }\n}\n\nconst Merchant = library.createResource<MerchantCollection>(MerchantCollection)\n\nexport default Merchant\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { PaymentMethodCollection } from './PaymentMethod'\nimport { MarketCollection } from './Market'\nimport { CustomerCollection } from './Customer'\nimport { AddressCollection } from './Address'\nimport { StripePaymentCollection } from './StripePayment'\nimport { WireTransferCollection } from './WireTransfer'\nimport { PaypalPaymentCollection } from './PaypalPayment'\nimport { BraintreePaymentCollection } from './BraintreePayment'\nimport { AdyenPaymentCollection } from './AdyenPayment'\n\nexport class OrderCollection extends BaseClass {\n  static className = 'Order'\n  number: number\n  status: string\n  paymentStatus: string\n  paymentSourceId: string\n  paymentSourceType: string\n  fulfillmentStatus: string\n  guest: boolean\n  editable: boolean\n  placeable: boolean\n  customerEmail: string\n  customerPassword: string\n  languageCode: string\n  currencyCode: string\n  taxIncluded: boolean\n  taxRate: number\n  freightTaxable: boolean\n  countryCode: string\n  shippingCountryCodeLock: string\n  couponCode: string\n  subtotalAmountCents: number\n  subtotalAmountFloat: number\n  formattedSubtotalAmount: string\n  shippingAmountCents: number\n  shippingAmountFloat: number\n  formattedShippingAmount: string\n  paymentMethodAmountCents: number\n  paymentMethodAmountFloat: number\n  formattedPaymentMethodAmount: string\n  discountAmountCents: number\n  discountAmountFloat: number\n  formattedDiscountAmount: string\n  totalTaxAmountCents: number\n  totalTaxAmountFloat: number\n  formattedTotalTaxAmount: string\n  subtotalTaxAmountCents: number\n  subtotalTaxAmountFloat: number\n  formattedSubtotalTaxAmount: string\n  shippingTaxAmountCents: number\n  shippingTaxAmountFloat: number\n  formattedShippingTaxAmount: string\n  paymentMethodTaxAmountCents: number\n  paymentMethodTaxAmountFloat: number\n  formattedPaymentMethodTaxAmount: string\n  discountTaxAmountCents: number\n  discountTaxAmountFloat: number\n  formattedDiscountTaxAmount: string\n  totalAmountCents: number\n  totalAmountFloat: number\n  formattedTotalAmount: string\n  totalTaxableAmountCents: number\n  totalTaxableAmountFloat: number\n  formattedTotalTaxableAmount: string\n  subtotalTaxableAmountCents: number\n  subtotalTaxableAmountFloat: number\n  formattedSubtotalTaxableAmount: string\n  shippingTaxableAmountCents: number\n  shippingTaxableAmountFloat: number\n  formattedShippingTaxableAmount: string\n  paymentMethodTaxableAmountCents: number\n  paymentMethodTaxableAmountFloat: number\n  formattedPaymentMethodTaxableAmount: string\n  discountTaxableAmountCents: number\n  discountTaxableAmountFloat: number\n  formattedDiscountTaxableAmount: string\n  totalAmountWithTaxesCents: number\n  totalAmountWithTaxesFloat: number\n  formattedTotalAmountWithTaxes: string\n  feesAmountCents: number\n  feesAmountFloat: number\n  formattedFeesAmount: string\n  skusCount: string\n  lineItemOptionsCount: number\n  shipmentsCount: number\n  paymentSourceDetails: object\n  token: string\n  cartUrl: string\n  returnUrl: string\n  termsUrl: string\n  privacyUrl: string\n  checkoutUrl: string\n  _place: number\n  _cancel: number\n  _approve: number\n  _capture: number\n  _refund: number\n  _updateTaxes: number\n  _billingAddressCloneId: number\n  _shippingAddressCloneId: number\n  _customerPaymentSourceId: number\n  _shippingAddressSameAsBilling: number\n  _billingAddressSameAsShipping: number\n  _savePaymentSourceToCustomerWallet: number\n  _saveShippingAddressToCustomerAddressBook: number\n  _saveBillingAddressToCustomerAddressBook: number\n  _refresh: number\n  placedAt: Date\n  archivedAt: Date\n  approvedAt: Date\n  cancelledAt: Date\n  paymentUpdatedAt: Date\n  fulfillmentUpdatedAt: Date\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  shippingAddress: () => SingleRelationship<AddressCollection>\n  paymentSource: () => SingleRelationship<\n    | StripePaymentCollection\n    | WireTransferCollection\n    | PaypalPaymentCollection\n    | BraintreePaymentCollection\n    | AdyenPaymentCollection\n  >\n  loadShippingAddress: () => SingleRelationship<AddressCollection>\n  billingAddress: () => SingleRelationship<AddressCollection>\n  paymentMethod: () => SingleRelationship<PaymentMethodCollection>\n  lineItems: () => MultiRelationship<LineItemCollection>\n  availablePaymentMethods: () => MultiRelationship<PaymentMethodCollection>\n  shipments: () => MultiRelationship<ShipmentCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'status',\n      'paymentStatus',\n      'fulfillmentStatus',\n      'guest',\n      'editable',\n      'placeable',\n      'customerEmail',\n      'customerPassword',\n      'languageCode',\n      'currencyCode',\n      'taxIncluded',\n      'taxRate',\n      'freightTaxable',\n      'countryCode',\n      'shippingCountryCodeLock',\n      'couponCode',\n      'subtotalAmountCents',\n      'subtotalAmountFloat',\n      'formattedSubtotalAmount',\n      'shippingAmountCents',\n      'shippingAmountFloat',\n      'formattedShippingAmount',\n      'paymentMethodAmountCents',\n      'paymentMethodAmountFloat',\n      'formattedPaymentMethodAmount',\n      'discountAmountCents',\n      'discountAmountFloat',\n      'formattedDiscountAmount',\n      'totalTaxAmountCents',\n      'totalTaxAmountFloat',\n      'formattedTotalTaxAmount',\n      'subtotalTaxAmountCents',\n      'subtotalTaxAmountFloat',\n      'formattedSubtotalTaxAmount',\n      'shippingTaxAmountCents',\n      'shippingTaxAmountFloat',\n      'formattedShippingTaxAmount',\n      'paymentMethodTaxAmountCents',\n      'paymentMethodTaxAmountFloat',\n      'formattedPaymentMethodTaxAmount',\n      'discountTaxAmountCents',\n      'discountTaxAmountFloat',\n      'formattedDiscountTaxAmount',\n      'totalAmountCents',\n      'totalAmountFloat',\n      'formattedTotalAmount',\n      'totalTaxableAmountCents',\n      'totalTaxableAmountFloat',\n      'formattedTotalTaxableAmount',\n      'subtotalTaxableAmountCents',\n      'subtotalTaxableAmountFloat',\n      'formattedSubtotalTaxableAmount',\n      'shippingTaxableAmountCents',\n      'shippingTaxableAmountFloat',\n      'formattedShippingTaxableAmount',\n      'paymentMethodTaxableAmountCents',\n      'paymentMethodTaxableAmountFloat',\n      'formattedPaymentMethodTaxableAmount',\n      'discountTaxableAmountCents',\n      'discountTaxableAmountFloat',\n      'formattedDiscountTaxableAmount',\n      'totalAmountWithTaxesCents',\n      'totalAmountWithTaxesFloat',\n      'formattedTotalAmountWithTaxes',\n      'feesAmountCents',\n      'feesAmountFloat',\n      'formattedFeesAmount',\n      'skusCount',\n      'lineItemOptionsCount',\n      'shipmentsCount',\n      'paymentSourceDetails',\n      'token',\n      'cartUrl',\n      'returnUrl',\n      'termsUrl',\n      'privacyUrl',\n      'checkoutUrl',\n      '_place',\n      '_cancel',\n      '_approve',\n      '_capture',\n      '_refund',\n      '_updateTaxes',\n      '_billingAddressCloneId',\n      '_shippingAddressCloneId',\n      '_customerPaymentSourceId',\n      '_shippingAddressSameAsBilling',\n      '_billingAddressSameAsShipping',\n      '_savePaymentSourceToCustomerWallet',\n      '_saveShippingAddressToCustomerAddressBook',\n      '_saveBillingAddressToCustomerAddressBook',\n      '_refresh',\n      'placedAt',\n      'approvedAt',\n      'cancelledAt',\n      'paymentUpdatedAt',\n      'fulfillmentUpdatedAt',\n      'id',\n      'archivedAt',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' }) // Required\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('shippingAddress', { className: 'Address' })\n    this.hasOne('billingAddress', { className: 'Address' })\n    this.hasOne('paymentMethod', { className: 'PaymentMethod' })\n    this.hasMany('availablePaymentMethods', { className: 'PaymentMethod' })\n    this.hasMany('lineItems', { className: 'LineItem' })\n    this.hasMany('shipments', { className: 'Shipment' })\n    this.belongsTo('paymentSource', { polymorphic: true })\n  }\n}\nconst Order = library.createResource<OrderCollection>(OrderCollection)\n\nOrder.afterBuild(function() {\n  // @ts-ignore\n  if (this.paymentSourceId) delete this.paymentSourceId\n  // @ts-ignore\n  if (this.paymentSourceType) delete this.paymentSourceType\n})\n\nexport default Order\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\n\nexport class ParcelCollection extends BaseClass {\n  static className = 'Parcel'\n  number: string\n  weight: number\n  unitOfWeight: string\n  eelPfc: string\n  contentsType: string\n  contentsExplanation: string\n  customsCertify: boolean\n  customsSigner: string\n  nonDeliveryOption: string\n  restrictionType: string\n  restrictionComments: string\n  customsInfoRequired: boolean\n  shippingLabelUrl: string\n  shippingLabelFileType: string\n  shippingLabelSize: string\n  shippingLabelResolution: string\n  trackingNumber: string\n  trackingStatus: string\n  trackingStatusDetail: string\n  trackingStatusUpdatedAt: Date\n  trackingDetails: string\n  carrierWeightOz: string\n  signedBy: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipment: () => SingleRelationship<ShipmentCollection>\n  parcelLineItems: () => MultiRelationship<LineItemCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'weight',\n      'unitOfWeight',\n      'eelPfc',\n      'contentsType',\n      'contentsExplanation',\n      'customsCertify',\n      'customsSigner',\n      'nonDeliveryOption',\n      'restrictionType',\n      'restrictionComments',\n      'customsInfoRequired',\n      'shippingLabelUrl',\n      'shippingLabelFileType',\n      'shippingLabelSize',\n      'shippingLabelResolution',\n      'trackingNumber',\n      'trackingStatus',\n      'trackingStatusDetail',\n      'trackingStatusUpdatedAt',\n      'trackingDetails',\n      'carrierWeightOz',\n      'signedBy',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('shipment', { className: 'Shipment' })\n    this.hasMany('parcelLineItems', { className: 'LineItem' })\n  }\n}\n\nconst Parcel = library.createResource<ParcelCollection>(ParcelCollection)\n\nexport default Parcel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PaymentMethodCollection extends BaseClass {\n  static className = 'PaymentMethod'\n  paymentSourceType: string\n  name: string\n  disabledAt: Date\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  paymentMethod: () => SingleRelationship<PaymentMethodCollection>\n  static define() {\n    this.attributes(\n      'paymentSourceType',\n      'name',\n      'disabledAt',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('paymentGateway', { className: 'PaymentGateway' })\n  }\n}\n\nconst PaymentMethod = library.createResource<PaymentMethodCollection>(\n  PaymentMethodCollection\n)\n\nexport default PaymentMethod\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class PaymentGatewayCollection extends BaseClass {\n  static className = 'PaymentGateway'\n  id: string\n  static define() {\n    this.attributes('id')\n  }\n}\n\nconst PaymentGateway = library.createResource<PaymentGatewayCollection>(\n  PaymentGatewayCollection\n)\n\nexport default PaymentGateway\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PaypalPaymentCollection extends BaseClass {\n  static className = 'PaypalPayment'\n  returnUrl: string\n  cancelUrl: string\n  noteToPayer: string\n  paypalPayerId: string\n  name: string\n  paypalId: string\n  status: string\n  approvalUrl: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'returnUrl',\n      'cancelUrl',\n      'noteToPayer',\n      'paypalPayerId',\n      'name',\n      'paypalId',\n      'status',\n      'approvalUrl',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst PaypalPayment = library.createResource<PaypalPaymentCollection>(\n  PaypalPaymentCollection\n)\n\nexport default PaypalPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { PriceListCollection } from './PriceList'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class PriceCollection extends BaseClass {\n  static className = 'Price'\n  currencyCode: string\n  skuCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  compareAtAmountCents: number\n  compareAtAmountFloat: number\n  formattedCompareAtAmount: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  priceList: () => SingleRelationship<PriceListCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'currencyCode',\n      'skuCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'compareAtAmountCents',\n      'compareAtAmountFloat',\n      'formattedCompareAtAmount',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('priceList', { className: 'PriceList' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst Price = library.createResource<PriceCollection>(PriceCollection)\n\nexport default Price\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { PriceCollection } from './Price'\n\nexport class PriceListCollection extends BaseClass {\n  static className = 'PriceList'\n  name: string\n  currencyCode: string\n  taxIncluded: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  prices: () => MultiRelationship<PriceCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'currencyCode',\n      'taxIncluded',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('prices', { className: 'Price' })\n  }\n}\n\nconst PriceList = library.createResource<PriceListCollection>(\n  PriceListCollection\n)\n\nexport default PriceList\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ShippingMethodCollection } from './ShippingMethod'\nimport { ParcelCollection } from './Parcel'\nimport { AttachmentCollection } from './Attachment'\nimport { ShippingCategoryCollection } from './ShippingCategory'\nimport { StockLocationCollection } from './StockLocation'\nimport { AddressCollection } from './Address'\nimport { ShipmentLineItemCollection } from './ShipmentLineItem'\nimport { StockTransferCollection } from './StockTransfer'\n\nexport class ShipmentCollection extends BaseClass {\n  static className = 'Shipment'\n  _getRates: number\n  _onHold: number\n  _packing: number\n  _picking: number\n  _purchase: number\n  _readyToShip: number\n  _ship: number\n  costAmountCents: number\n  costAmountFloat: number\n  createdAt: Date\n  currencyCode: string\n  formattedCostAmount: string\n  id: string\n  metadata: object\n  number: string\n  reference: string\n  referenceOrigin: string\n  selectedRateId: string\n  status: string\n  updatedAt: Date\n  attachments: () => MultiRelationship<AttachmentCollection>\n  availableShippingMethods: () => MultiRelationship<ShippingMethodCollection>\n  parcels: () => MultiRelationship<ParcelCollection>\n  shipmentLineItems: () => MultiRelationship<ShipmentLineItemCollection>\n  shippingAddress: () => SingleRelationship<AddressCollection>\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  shippingMethod: () => SingleRelationship<ShippingMethodCollection>\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  stockTransfers: () => MultiRelationship<StockTransferCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'status',\n      'currencyCode',\n      'costAmountCents',\n      'costAmountFloat',\n      'formattedCostAmount',\n      '_onHold',\n      '_picking',\n      '_packing',\n      '_readyToShip',\n      '_ship',\n      '_getRates',\n      'selectedRateId',\n      '_purchase',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('shippingAddress', { className: 'Address' })\n    this.hasOne('shippingMethod', { className: 'ShippingMethod' })\n\n    this.hasMany('shipmentLineItems', { className: 'ShipmentLineItem' })\n    this.hasMany('availableShippingMethods', { className: 'ShippingMethod' })\n    this.hasMany('parcels', { className: 'Parcel' })\n    this.hasMany('attachments', { className: 'Attachment' })\n    this.hasMany('stockTransfers', { className: 'StockTransfer' })\n  }\n}\n\nconst Shipment = library.createResource<ShipmentCollection>(ShipmentCollection)\n\nexport default Shipment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\n\nexport class ShippingCategoryCollection extends BaseClass {\n  static className = 'ShippingCategory'\n  name: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst ShippingCategory = library.createResource<ShippingCategoryCollection>(\n  ShippingCategoryCollection\n)\n\nexport default ShippingCategory\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { ShippingZoneCollection } from './ShippingZone'\nimport { ShippingCategoryCollection } from './ShippingCategory'\nimport { DeliveryLeadTimeCollection } from './DeliveryLeadTime'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ShippingMethodCollection extends BaseClass {\n  static className = 'ShippingMethod'\n  name: string\n  disabledAt: Date\n  currencyCode: Date\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  freeOverAmountCents: number\n  freeOverAmountFloat: number\n  formattedFreeOverAmount: string\n  priceAmountForShipmentCents: number\n  priceAmountForShipmentFloat: number\n  formattedPriceAmountForShipment: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipmentId?: string\n  market: () => SingleRelationship<MarketCollection>\n  shippingZone: () => SingleRelationship<ShippingZoneCollection>\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  deliveryLeadTimeForShipment: () => SingleRelationship<\n    DeliveryLeadTimeCollection\n  >\n  static define() {\n    this.attributes(\n      'name',\n      'disabledAt',\n      'currencyCode',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'freeOverAmountCents',\n      'freeOverAmountFloat',\n      'formattedFreeOverAmount',\n      'priceAmountForShipmentCents',\n      'priceAmountForShipmentFloat',\n      'formattedPriceAmountForShipment',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('shippingZone', { className: 'ShippingZone' })\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasOne('deliveryLeadTimeForShipment', {\n      className: 'DeliveryLeadTime',\n    })\n  }\n}\n\nconst ShippingMethod = library.createResource<ShippingMethodCollection>(\n  ShippingMethodCollection\n)\n\nexport default ShippingMethod\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ShippingZoneCollection extends BaseClass {\n  static className = 'ShippingZone'\n  name: string\n  countryCodeRegex: string\n  notCountryCodeRegex: string\n  stateCodeRegex: string\n  notStateCodeRegex: string\n  zipCodeRegex: string\n  notZipCodeRegex: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'name',\n      'countryCodeRegex',\n      'notCountryCodeRegex',\n      'stateCodeRegex',\n      'notStateCodeRegex',\n      'zipCodeRegex',\n      'notZipCodeRegex',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst ShippingZone = library.createResource<ShippingZoneCollection>(\n  ShippingZoneCollection\n)\n\nexport default ShippingZone\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class SkuOptionCollection extends BaseClass {\n  static className = 'SkuOption'\n  name: string\n  description: string\n  priceAmountCents: number\n  priceAmountFloat: number\n  formattedPriceAmount: string\n  delayHours: number\n  delayDays: number\n  skuCode_regex: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'description',\n      'priceAmountCents',\n      'priceAmountFloat',\n      'formattedPriceAmount',\n      'delayHours',\n      'delayDays',\n      'skuCodeRegex',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n  }\n}\n\nconst SkuOption = library.createResource<SkuOptionCollection>(\n  SkuOptionCollection\n)\n\nexport default SkuOption\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { PriceCollection } from './Price'\nimport { SkuOptionCollection } from './SkuOption'\nimport { DeliveryLeadTimeCollection } from './DeliveryLeadTime'\nimport { StockItemCollection } from './StockItem'\nimport { ShippingCategoryCollection } from './ShippingCategory'\n\nexport interface InventoryCollection {\n  available: boolean\n  quantity: number\n  levels: {\n    quantity: number\n    deliveryLeadTimes: {\n      shippingMethod: {\n        name: string\n        reference: null | string\n        priceAmountCents: number\n        freeOverAmountCents: number\n        formattedPriceAmount: string\n        formattedFreeOverAmount: string\n      }\n      min: {\n        hours: number\n        days: number\n      }\n      max: {\n        hours: number\n        days: number\n      }\n    }[]\n  }[]\n}\n\nexport class SkuCollection extends BaseClass {\n  static className = 'Sku'\n  code: string\n  name: string\n  description: string\n  imageUrl: string\n  tagNames: string\n  piecesPerPack: number\n  weight: number\n  unitOfWeight: string\n  inventory: InventoryCollection\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shippingCategory: () => SingleRelationship<ShippingCategoryCollection>\n  prices: () => MultiRelationship<PriceCollection>\n  stockItems: () => MultiRelationship<StockItemCollection>\n  deliveryLeadTimes: () => MultiRelationship<DeliveryLeadTimeCollection>\n  skuOptions: () => MultiRelationship<SkuOptionCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'name',\n      'description',\n      'imageUrl',\n      'tagNames',\n      'piecesPerPack',\n      'weight',\n      'unitOfWeight',\n      'inventory',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('shippingCategory', { className: 'ShippingCategory' })\n    this.hasMany('prices', { className: 'Price' })\n    this.hasMany('stockItems', { className: 'StockItem' })\n    this.hasMany('deliveryLeadTimes', { className: 'DeliveryLeadTime' })\n    this.hasMany('skuOptions', { className: 'SkuOption' })\n    this.hasMany('availablePromotions', {\n      className: 'Promotion',\n    })\n  }\n}\n\nconst Sku = library.createResource<SkuCollection>(SkuCollection)\nexport default Sku\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\nimport { SkuListItemCollection } from './SkuListItem'\n\nexport class SkuListCollection extends BaseClass {\n  static className = 'SkuList'\n  name: string\n  slug: string\n  description: string\n  manual: boolean\n  skuCodeRegex: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  skus: () => MultiRelationship<SkuCollection>\n  skuListItems: () => MultiRelationship<SkuListItemCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'slug',\n      'description',\n      'manual',\n      'skuCodeRegex',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasMany('skus', { className: 'Sku' })\n    this.hasMany('skuListItems', { className: 'SkuListItem' })\n  }\n}\n\nconst SkuList = library.createResource<SkuListCollection>(SkuListCollection)\n\nexport default SkuList\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SkuCollection } from './Sku'\nimport { SkuListCollection } from './SkuList'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class SkuListItemCollection extends BaseClass {\n  static className = 'SkuListItem'\n  position: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  sku: () => SingleRelationship<SkuCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  static define() {\n    this.attributes(\n      'position',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('skuList', { className: 'SkuList' })\n  }\n}\n\nconst SkuListItem = library.createResource<SkuListItemCollection>(\n  SkuListItemCollection\n)\n\nexport default SkuListItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class StockItemCollection extends BaseClass {\n  static className = 'StockItem'\n  skuCode: string\n  quantity: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  sku: () => SingleRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('sku', { className: 'Sku' })\n  }\n}\n\nconst StockItem = library.createResource<StockItemCollection>(\n  StockItemCollection\n)\n\nexport default StockItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { InventoryModelCollection } from './InventoryModel'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class InventoryStockLocationCollection extends BaseClass {\n  static className = 'InventoryStockLocation'\n  priority: number\n  onHold: boolean\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  inventoryModel: () => SingleRelationship<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'priority',\n      'onHold',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n  }\n}\n\nconst InventoryStockLocation = library.createResource<\n  InventoryStockLocationCollection\n>(InventoryStockLocationCollection)\n\nexport default InventoryStockLocation\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { InventoryStockLocationCollection } from './InventoryStockLocation'\nimport { StockItemCollection } from './StockItem'\nimport { AddressCollection } from './Address'\n\nexport class StockLocationCollection extends BaseClass {\n  static className = 'StockLocation'\n  name: string\n  labelFormat: string\n  id: string\n  createdAt: string\n  updatedAt: string\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  address: () => SingleRelationship<AddressCollection>\n  InventoryStockLocations: () => MultiRelationship<\n    InventoryStockLocationCollection\n  >\n  stockItems: () => MultiRelationship<StockItemCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'labelFormat',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('address', { className: 'Address' })\n\n    this.hasMany('InventoryStockLocations', {\n      className: 'InventoryStockLocation',\n    })\n    this.hasMany('stockItems', { className: 'StockItem' })\n  }\n}\n\nconst StockLocation = library.createResource<StockLocationCollection>(\n  StockLocationCollection\n)\n\nexport default StockLocation\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class WebhookCollection extends BaseClass {\n  static className = 'Webhook'\n  topic: string\n  callbackUrl: string\n  includeResources: string[]\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'topic',\n      'callbackUrl',\n      'includeResources',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Webhook = library.createResource<WebhookCollection>(WebhookCollection)\n\nexport default Webhook\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class WireTransferCollection extends BaseClass {\n  static className = 'WireTransfer'\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst WireTransfer = library.createResource<WireTransferCollection>(\n  WireTransferCollection\n)\n\nexport default WireTransfer\n","import library from './library'\n\nexport interface Transformer {\n  (data: any, headers?: any): any\n}\n\nexport interface ProxyConfig {\n  host: string\n  port: number\n  auth?: {\n    username: string\n    password: string\n  }\n  protocol?: string\n}\n\nexport interface RequestConfig {\n  url?: string\n  method?: string\n  baseURL?: string\n  transformRequest?: Transformer | Transformer[]\n  transformResponse?: Transformer | Transformer[]\n  headers?: any\n  params?: any\n  paramsSerializer?: (params: any) => string\n  data?: any\n  timeout?: number\n  timeoutErrorMessage?: string\n  withCredentials?: boolean\n  adapter?: any\n  auth?: Record<string, string>\n  responseType?: ResponseType\n  xsrfCookieName?: string\n  xsrfHeaderName?: string\n  onUploadProgress?: (progressEvent: any) => void\n  onDownloadProgress?: (progressEvent: any) => void\n  maxContentLength?: number\n  validateStatus?: ((status: number) => boolean) | null\n  maxBodyLength?: number\n  maxRedirects?: number\n  socketPath?: string | null\n  httpAgent?: any\n  httpsAgent?: any\n  proxy?: ProxyConfig | false\n  decompress?: boolean\n}\n\nexport interface Response<T = any> {\n  data: T\n  status: number\n  statusText: string\n  headers: any\n  config: RequestConfig\n  request?: any\n}\n\nexport interface ResponseError<T = any> extends Error {\n  config: RequestConfig\n  code?: string\n  request?: any\n  response?: Response<T>\n  isAxiosError: boolean\n  toJSON: () => object\n}\n\nexport interface InitConfig {\n  accessToken: string\n  endpoint: string\n  interceptors?: {\n    request?: {\n      before?: (config: RequestConfig) => any\n      error?: (error: ResponseError) => any\n    }\n    response?: {\n      before?: (config: RequestConfig) => any\n      error?: (error: ResponseError) => any\n    }\n  }\n}\n\nexport interface Init {\n  ({ accessToken, endpoint }: InitConfig): void\n}\n\nconst init: Init = ({\n  accessToken,\n  endpoint,\n  interceptors,\n}: InitConfig): void => {\n  library.baseUrl = `${endpoint}/api/`\n  library.headers = {\n    Authorization: `Bearer ${accessToken}`,\n  }\n  library.customInterceptors = interceptors\n}\n\nexport default init\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class GeocoderCollection extends BaseClass {\n  static className = 'Geocoder'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Geocoder = library.createResource<GeocoderCollection>(GeocoderCollection)\n\nexport default Geocoder\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class PaymentSourceCollection extends BaseClass {\n  static className = 'PaymentSource'\n  static define() {}\n}\n\nconst PaymentSource = library.createResource<PaymentSourceCollection>(\n  PaymentSourceCollection\n)\n\nexport default PaymentSource\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class ItemCollection extends BaseClass {\n  static className = 'Item'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Item = library.createResource<ItemCollection>(ItemCollection)\n\nexport default Item\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AttachableCollection extends BaseClass {\n  static className = 'Attachable'\n  static define() {\n    this.attributes()\n  }\n}\n\nconst Attachable = library.createResource<AttachableCollection>(\n  AttachableCollection\n)\n\nexport default Attachable\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { GiftCardRecipientCollection } from './GiftCardRecipient'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class GiftCardCollection extends BaseClass {\n  static className = 'GiftCard'\n  status: string\n  code: string\n  currencyCode: string\n  initialBalanceCents: number\n  initialBalanceFloat: number\n  formattedInitialBalance: string\n  balanceCents: number\n  balanceFloat: number\n  formattedBalance: string\n  balanceMaxCents: number\n  balanceMaxFloat: number\n  formattedBalanceMax: string\n  balanceLog: object\n  singleUse: boolean\n  rechargeable: boolean\n  imageUrl: string\n  expiresAt: Date\n  referenceOrigin: string\n  recipientEmail: string\n  _purchase: number\n  _activate: number\n  _deactivate: number\n  _balanceChangeCents: number\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  giftCardRecipient: () => SingleRelationship<GiftCardRecipientCollection>\n  static define() {\n    this.attributes(\n      'status',\n      'code',\n      'currencyCode',\n      'initialBalanceCents',\n      'initialBalanceFloat',\n      'formattedInitialBalance',\n      'balanceCents',\n      'balanceFloat',\n      'formattedBalance',\n      'balanceMaxCents',\n      'balanceMaxFloat',\n      'formattedBalanceMax',\n      'balanceLog',\n      'singleUse',\n      'rechargeable',\n      'imageUrl',\n      'expiresAt',\n      'referenceOrigin',\n      'recipientEmail',\n      '_purchase',\n      '_activate',\n      '_deactivate',\n      '_balanceChangeCents',\n      'id',\n      'createAt',\n      'updateAt',\n      'reference',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('giftCardRecipient', { className: 'GiftCardRecipient' })\n  }\n}\n\nconst GiftCard = library.createResource<GiftCardCollection>(GiftCardCollection)\nexport default GiftCard\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { CustomerCollection } from './Customer'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class GiftCardRecipientCollection extends BaseClass {\n  static className = 'GiftCardRecipient'\n  email: string\n  firstName: string\n  lastName: string\n  referenceOrigin: string\n  id: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  metadata: object\n  customer: () => SingleRelationship<CustomerCollection>\n  static define() {\n    this.attributes(\n      'email',\n      'firstName',\n      'lastName',\n      'referenceOrigin',\n      'id',\n      'createAt',\n      'updateAt',\n      'reference',\n      'metadata'\n    )\n    this.hasOne('customer', { className: 'Customer' })\n  }\n}\n\nconst GiftCardRecipient = library.createResource<GiftCardRecipientCollection>(\n  GiftCardRecipientCollection\n)\nexport default GiftCardRecipient\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class AdyenPaymentCollection extends BaseClass {\n  static className = 'AdyenPayment'\n  paymentMethod: object\n  paymentRequestData: object\n  paymentRequestDetails: object\n  paymentResponse: object\n  Authorize: boolean\n  _details: boolean\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'paymentMethod',\n      'paymentRequestData',\n      'paymentRequestDetails',\n      'paymentResponse',\n      '_authorize',\n      '_details',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst AdyenPayment = library.createResource<AdyenPaymentCollection>(\n  AdyenPaymentCollection\n)\n\nexport default AdyenPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class BraintreePaymentCollection extends BaseClass {\n  static className = 'BraintreePayment'\n  clientToken: string\n  paymentMethodNonce: string\n  options: Record<string, any>\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: Record<string, string>\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'clientToken',\n      'paymentMethodNonce',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst BraintreePayment = library.createResource<BraintreePaymentCollection>(\n  BraintreePaymentCollection\n)\n\nexport default BraintreePayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class StripePaymentCollection extends BaseClass {\n  static className = 'StripePayment'\n  clientSecret: string\n  options: object\n  id: string\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'clientSecret',\n      'options',\n      'id',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst StripePayment = library.createResource<StripePaymentCollection>(\n  StripePaymentCollection\n)\n\nexport default StripePayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ExternalPaymentCollection extends BaseClass {\n  static className = 'ExternalPayment'\n  createdAt: Date\n  id: string\n  metadata: object\n  options: object\n  paymentSourceToken: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  order: () => SingleRelationship<OrderCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'options',\n      'paymentSourceToken',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n    this.hasOne('order', { className: 'Order' })\n  }\n}\n\nconst ExternalPayment = library.createResource<ExternalPaymentCollection>(\n  ExternalPaymentCollection\n)\n\nexport default ExternalPayment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ParcelCollection } from './Parcel'\n\nexport class PackageCollection extends BaseClass {\n  static className = 'Package'\n  code: string\n  createdAt: Date\n  length: number\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  unitOfLength: 'cm' | 'in'\n  updatedAt: Date\n  width: number\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  parcels: () => MultiRelationship<ParcelCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'createdAt',\n      'length',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'unitOfLength',\n      'updatedAt',\n      'width'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasMany('parcels', { className: 'Parcel' })\n  }\n}\n\nconst Package = library.createResource<PackageCollection>(PackageCollection)\n\nexport default Package\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class AdjustmentCollection extends BaseClass {\n  static className = 'Adjustment'\n  name: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  static define() {\n    this.attributes(\n      'name',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n  }\n}\n\nconst Adjustment = library.createResource<AdjustmentCollection>(\n  AdjustmentCollection\n)\n\nexport default Adjustment\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { AuthorizationCollection } from './Authorization'\nimport { RefundCollection } from './Refund'\n\nexport class CaptureCollection extends BaseClass {\n  static className = 'Capture'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  _refund: boolean\n  _refundAmountCents: number\n  refundAmountCents: number\n  refundAmountFloat: number\n  formattedRefundAmount: string\n  refundBalanceCents: number\n  refundBalanceFloat: number\n  formattedRefundBalance: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceAuthorization: () => SingleRelationship<AuthorizationCollection>\n  refunds: () => MultiRelationship<RefundCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      '_refund',\n      '_refundAmountCents',\n      'refundAmountCents',\n      'refundAmountFloat',\n      'formattedRefundAmount',\n      'refundBalanceCents',\n      'refundBalanceFloat',\n      'formattedRefundBalance',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceAuthorization', { className: 'Authorization' })\n    this.hasMany('refunds', { className: 'Refund' })\n  }\n}\n\nconst Capture = library.createResource<CaptureCollection>(CaptureCollection)\n\nexport default Capture\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CaptureCollection } from './Capture'\nimport { VoidCollection } from './Void'\n\nexport class AuthorizationCollection extends BaseClass {\n  static className = 'Authorization'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  cvvCode: string\n  cvvMessage: string\n  avsCode: string\n  avsMessage: string\n  fraudReview: string\n  gatewayTransactionId: string\n  _capture: boolean\n  _captureAmountCents: number\n  captureAmountCents: number\n  captureAmountFloat: number\n  formattedCaptureAmount: string\n  captureBalanceCents: number\n  captureBalanceFloat: number\n  formattedCaptureBalance: string\n  _void: boolean\n  voidBalanceCents: number\n  voidBalanceFloat: number\n  formattedVoidBalance: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  captures: () => MultiRelationship<CaptureCollection>\n  voids: () => MultiRelationship<VoidCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'cvvCode',\n      'cvvMessage',\n      'avsCode',\n      'avsMessage',\n      'fraudReview',\n      'gatewayTransactionId',\n      '_capture',\n      '_captureAmountCents',\n      'captureAmountCents',\n      'captureAmountFloat',\n      'formattedCaptureAmount',\n      'captureBalanceCents',\n      'captureBalanceFloat',\n      'formattedCaptureBalance',\n      '_void',\n      'voidBalanceCents',\n      'voidBalanceFloat',\n      'formattedVoidBalance',\n      'name',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasMany('captures', { className: 'Capture' })\n    this.hasMany('voids', { className: 'Void' })\n  }\n}\n\nconst Authorization = library.createResource<AuthorizationCollection>(\n  AuthorizationCollection\n)\n\nexport default Authorization\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { MarketCollection } from './Market'\n\nexport class BillingInfoValidationRuleCollection extends BaseClass {\n  static className = 'BillingInfoValidationRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n  }\n}\n\nconst BillingInfoValidationRule = library.createResource<\n  BillingInfoValidationRuleCollection\n>(BillingInfoValidationRuleCollection)\n\nexport default BillingInfoValidationRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { CaptureCollection } from './Capture'\n\nexport class RefundCollection extends BaseClass {\n  static className = 'Refund'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceCapture: () => SingleRelationship<CaptureCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceCapture', { className: 'Capture' })\n  }\n}\n\nconst Refund = library.createResource<RefundCollection>(RefundCollection)\n\nexport default Refund\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { OrderCollection } from './Order'\nimport { AuthorizationCollection } from './Authorization'\n\nexport class VoidCollection extends BaseClass {\n  static className = 'Void'\n  number: string\n  currencyCode: string\n  amountCents: number\n  amountFloat: number\n  formattedAmount: string\n  succeeded: boolean\n  message: string\n  errorCode: string\n  errorDetail: string\n  token: string\n  gatewayTransactionId: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  referenceAuthorization: () => SingleRelationship<AuthorizationCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'currencyCode',\n      'amountCents',\n      'amountFloat',\n      'formattedAmount',\n      'succeeded',\n      'message',\n      'errorCode',\n      'errorDetail',\n      'token',\n      'gatewayTransactionId',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('referenceAuthorization', { className: 'Authorization' })\n  }\n}\n\nconst Void = library.createResource<VoidCollection>(VoidCollection)\n\nexport default Void\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class CouponCodesPromotionRuleCollection extends BaseClass {\n  static className = 'CouponCodesPromotionRule'\n  reference: string\n  referenceOrigin: string\n  createdAt: Date\n  updatedAt: Date\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst CouponCodesPromotionRule = library.createResource<\n  CouponCodesPromotionRuleCollection\n>(CouponCodesPromotionRuleCollection)\n\nexport default CouponCodesPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class CouponCollection extends BaseClass {\n  static className = 'Coupon'\n  code: string\n  usageLimit: number\n  usageCount: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotionRule: () => SingleRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'usageLimit',\n      'usageCount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotionRule', { className: 'PromotionRule' })\n  }\n}\n\nconst Coupon = library.createResource<CouponCollection>(CouponCollection)\n\nexport default Coupon\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MarketCollection } from './Market'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class ExternalPromotionCollection extends BaseClass {\n  static className = 'ExternalPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: number\n  totalUsageCount: number\n  active: boolean\n  promotionUrl: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'promotionUrl',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst ExternalPromotion = library.createResource<ExternalPromotionCollection>(\n  ExternalPromotionCollection\n)\n\nexport default ExternalPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\n\nexport class FixedAmountPromotionCollection extends BaseClass {\n  static className = 'FixedAmountPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  fixedAmountCents: number\n  fixedAmountFloat: number\n  formattedFixedAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'fixedAmountCents',\n      'fixedAmountFloat',\n      'formattedFixedAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst FixedAmountPromotion = library.createResource<\n  FixedAmountPromotionCollection\n>(FixedAmountPromotionCollection)\n\nexport default FixedAmountPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class FreeShippingPromotionCollection extends BaseClass {\n  static className = 'FreeShippingPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst FreeShippingPromotion = library.createResource<\n  FreeShippingPromotionCollection\n>(FreeShippingPromotionCollection)\n\nexport default FreeShippingPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class OrderAmountPromotionRuleCollection extends BaseClass {\n  static className = 'OrderAmountPromotionRule'\n  orderAmountCents: number\n  orderAmountFloat: number\n  formattedOrderAmount: string\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'orderAmountCents',\n      'orderAmountFloat',\n      'formattedOrderAmount',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst OrderAmountPromotionRule = library.createResource<\n  OrderAmountPromotionRuleCollection\n>(OrderAmountPromotionRuleCollection)\n\nexport default OrderAmountPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { CouponCodesPromotionRuleCollection } from './CouponCodesPromotionRule'\nimport { MarketCollection } from './Market'\nimport { SkuListCollection } from './SkuList'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { SkuCollection } from './Sku'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class PercentageDiscountPromotionCollection extends BaseClass {\n  static className = 'PercentageDiscountPromotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  percentage: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  couponCodesPromotionRule: () => SingleRelationship<\n    CouponCodesPromotionRuleCollection\n  >\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'percentage',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('skuList', { className: 'SkuList' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst PercentageDiscountPromotion = library.createResource<\n  PercentageDiscountPromotionCollection\n>(PercentageDiscountPromotionCollection)\n\nexport default PercentageDiscountPromotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\n\nexport class PromotionRuleCollection extends BaseClass {\n  static className = 'PromotionRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n  }\n}\n\nconst PromotionRule = library.createResource<PromotionRuleCollection>(\n  PromotionRuleCollection\n)\n\nexport default PromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { MarketCollection } from './Market'\nimport { OrderAmountPromotionRuleCollection } from './OrderAmountPromotionRule'\nimport { PromotionRuleCollection } from './PromotionRule'\nimport { SkuListPromotionRuleCollection } from './SkuListPromotionRule'\n\nexport class PromotionCollection extends BaseClass {\n  static className = 'Promotion'\n  name: string\n  startsAt: Date\n  expiresAt: Date\n  totalUsageLimit: Date\n  totalUsageCount: Date\n  active: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  market: () => SingleRelationship<MarketCollection>\n  orderAmountPromotionRule: () => SingleRelationship<\n    OrderAmountPromotionRuleCollection\n  >\n  skuListPromotionRule: () => SingleRelationship<SkuListPromotionRuleCollection>\n  promotionRules: () => MultiRelationship<PromotionRuleCollection>\n  static define() {\n    this.attributes(\n      'name',\n      'startsAt',\n      'expiresAt',\n      'totalUsageLimit',\n      'totalUsageCount',\n      'active',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('market', { className: 'Market' })\n    this.hasOne('orderAmountPromotionRule', {\n      className: 'OrderAmountPromotionRule',\n    })\n    this.hasOne('skuListPromotionRule', { className: 'SkuListPromotionRule' })\n    this.hasOne('couponCodesPromotionRule', {\n      className: 'CouponCodesPromotionRule',\n    })\n    this.hasMany('promotionRules', { className: 'PromotionRule' })\n  }\n}\n\nconst Promotion = library.createResource<PromotionCollection>(\n  PromotionCollection\n)\n\nexport default Promotion\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship, MultiRelationship } from '#typings/Library'\nimport { PromotionCollection } from './Promotion'\nimport { SkuListCollection } from './SkuList'\nimport { SkuCollection } from './Sku'\n\nexport class SkuListPromotionRuleCollection extends BaseClass {\n  static className = 'SkuListPromotionRule'\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  promotion: () => SingleRelationship<PromotionCollection>\n  skuList: () => SingleRelationship<SkuListCollection>\n  skus: () => MultiRelationship<SkuCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('promotion', { className: 'Promotion' })\n    this.hasOne('skuList', { className: 'SkuList' })\n    this.hasMany('skus', { className: 'Sku' })\n  }\n}\n\nconst SkuListPromotionRule = library.createResource<\n  SkuListPromotionRuleCollection\n>(SkuListPromotionRuleCollection)\n\nexport default SkuListPromotionRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { InventoryModelCollection } from './InventoryModel'\n\nexport class InventoryReturnLocationCollection extends BaseClass {\n  static className = 'InventoryReturnLocation'\n  priority: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  stockLocation: () => Promise<StockLocationCollection>\n  inventoryModel: () => Promise<InventoryModelCollection>\n  static define() {\n    this.attributes(\n      'priority',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('inventoryModel', { className: 'InventoryModel' })\n  }\n}\n\nconst InventoryModel = library.createResource<\n  InventoryReturnLocationCollection\n>(InventoryReturnLocationCollection)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { OrderCollection } from './Order'\nimport { CustomerCollection } from './Customer'\nimport { InventoryReturnLocationCollection } from './InventoryReturnLocation'\nimport { StockLocationCollection } from './StockLocation'\nimport { AddressCollection } from './Address'\nimport { MultiRelationship, SingleRelationship } from '#typings/Library'\nimport { ReturnLineItemCollection } from './ReturnLineItem'\nimport { AttachmentCollection } from './Attachment'\n\nexport class ReturnCollection extends BaseClass {\n  static className = 'Return'\n  number: string\n  status:\n    | string\n    | 'draft'\n    | 'pending'\n    | 'approved'\n    | 'rejected'\n    | 'shipped'\n    | 'received'\n  customerEmail: string\n  skusCount: number\n  approvedAt: Date\n  rejectedAt: Date\n  shippedAt: Date\n  receivedAt: Date\n  archivedAt: Date\n  _request: boolean\n  _approve: boolean\n  _reject: boolean\n  _ship: boolean\n  _receive: boolean\n  _restock: boolean\n  _archive: boolean\n  _unarchive: boolean\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  order: () => SingleRelationship<OrderCollection>\n  customer: () => SingleRelationship<CustomerCollection>\n  inventoryReturnLocation: () => SingleRelationship<\n    InventoryReturnLocationCollection\n  >\n  stockLocation: () => SingleRelationship<StockLocationCollection>\n  originAddress: () => SingleRelationship<AddressCollection>\n  destinationAddress: () => SingleRelationship<AddressCollection>\n  returnLineItems: () => MultiRelationship<ReturnLineItemCollection>\n  attachments: () => MultiRelationship<AttachmentCollection>\n  static define() {\n    this.attributes(\n      'number',\n      'customerEmail',\n      'status',\n      'skusCount',\n      'approvedAt',\n      'rejectedAt',\n      'shippedAt',\n      'receivedAt',\n      'archivedAt',\n      '_request',\n      '_approve',\n      '_reject',\n      '_ship',\n      '_receive',\n      '_restock',\n      '_archive',\n      '_unarchive',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('order', { className: 'Order' })\n    this.hasOne('customer', { className: 'Customer' })\n    this.hasOne('inventoryReturnLocation', {\n      className: 'InventoryReturnLocation',\n    })\n    this.hasOne('stockLocation', { className: 'StockLocation' })\n    this.hasOne('originAddress', { className: 'Address' })\n    this.hasOne('destinationAddress', { className: 'Address' })\n    this.hasMany('returnLineItems', { className: 'ReturnLineItem' })\n    this.hasMany('attachments', { className: 'Attachment' })\n  }\n}\n\nconst InventoryModel = library.createResource<ReturnCollection>(\n  ReturnCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class ExternalTaxCalculatorCollection extends BaseClass {\n  static className = 'ExternalTaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCalculatorUrl: string\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt',\n      'taxCalculatorUrl'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst ExternalTaxCalculator = library.createResource<\n  ExternalTaxCalculatorCollection\n>(ExternalTaxCalculatorCollection)\n\nexport default ExternalTaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\nimport { TaxRuleCollection } from './TaxRule'\n\nexport class ManualTaxCalculatorCollection extends BaseClass {\n  static className = 'ManualTaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  taxRules: () => MultiRelationship<TaxRuleCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n    this.hasMany('taxRules', { className: 'TaxRule' })\n  }\n}\n\nconst ManualTaxCalculator = library.createResource<\n  ManualTaxCalculatorCollection\n>(ManualTaxCalculatorCollection)\n\nexport default ManualTaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class TaxCalculatorCollection extends BaseClass {\n  static className = 'TaxCalculator'\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst TaxCalculator = library.createResource<TaxCalculatorCollection>(\n  TaxCalculatorCollection\n)\n\nexport default TaxCalculator\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { ManualTaxCalculatorCollection } from './ManualTaxCalculator'\n\nexport class TaxRuleCollection extends BaseClass {\n  static className = 'TaxRule'\n  adjustmentTaxable: boolean\n  breakDown: Record<string, string>\n  countryCodeRegex: string\n  createdAt: Date\n  freightTaxable: boolean\n  giftCardTaxable: boolean\n  id: string\n  metadata: object\n  name: string\n  notCountryCodeRegex: string\n  notStateCodeRegex: string\n  notZipCodeRegex: string\n  paymentMethodTaxable: boolean\n  reference: string\n  referenceOrigin: string\n  stateCodeRegex: string\n  taxRate: number\n  updatedAt: Date\n  zipCodeRegex: string\n  manualTaxCalculator: () => SingleRelationship<ManualTaxCalculatorCollection>\n\n  static define() {\n    this.attributes(\n      'adjustmentTaxable',\n      'breakDown',\n      'countryCodeRegex',\n      'createdAt',\n      'freightTaxable',\n      'giftCardTaxable',\n      'id',\n      'metadata',\n      'name',\n      'notCountryCodeRegex',\n      'notStateCodeRegex',\n      'notZipCodeRegex',\n      'paymentMethodTaxable',\n      'reference',\n      'referenceOrigin',\n      'stateCodeRegex',\n      'taxRate',\n      'updatedAt',\n      'zipCodeRegex'\n    )\n\n    this.hasOne('manualTaxCalculator', { className: 'ManualTaxCalculator' })\n  }\n}\n\nconst TaxRule = library.createResource<TaxRuleCollection>(TaxRuleCollection)\n\nexport default TaxRule\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class TaxjarAccountCollection extends BaseClass {\n  static className = 'TaxjarAccount'\n  apiKey: string\n  createdAt: Date\n  id: string\n  metadata: object\n  name: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'apiKey',\n      'createdAt',\n      'id',\n      'metadata',\n      'name',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst TaxjarAccount = library.createResource<TaxjarAccountCollection>(\n  TaxjarAccountCollection\n)\n\nexport default TaxjarAccount\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { LineItemCollection } from './LineItem'\nimport { ReturnCollection } from './Return'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ReturnLineItemCollection extends BaseClass {\n  static className = 'ReturnLineItem'\n  skuCode: string\n  name: string\n  quantity: number\n  _restock: boolean\n  returnReason: string\n  restockedAt: Date\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  return: () => SingleRelationship<ReturnCollection>\n  lineItem: () => SingleRelationship<LineItemCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'name',\n      'quantity',\n      '_restock',\n      'returnReason',\n      'restockedAt',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n    this.hasOne('return', { className: 'Return' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n  }\n}\n\nconst InventoryModel = library.createResource<ReturnLineItemCollection>(\n  ReturnLineItemCollection\n)\n\nexport default InventoryModel\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\nimport { StockItemCollection } from './StockItem'\nimport { SingleRelationship } from '#typings/Library'\n\nexport class ShipmentLineItemCollection extends BaseClass {\n  static className = 'ShipmentLineItem'\n  skuCode: string\n  quantity: number\n  createdAt: Date\n  updatedAt: Date\n  reference: string\n  referenceOrigin: string\n  metadata: object\n  shipment: () => SingleRelationship<ShipmentCollection>\n  lineItem: () => SingleRelationship<LineItemCollection>\n  stockItem: () => SingleRelationship<StockItemCollection>\n  static define() {\n    this.attributes(\n      'skuCode',\n      'quantity',\n      'createdAt',\n      'updatedAt',\n      'reference',\n      'referenceOrigin',\n      'metadata'\n    )\n\n    this.hasOne('stockItem', { className: 'StockItem' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n    this.hasOne('shipment', { className: 'Shipment' })\n  }\n}\n\nconst ShipmentLineItem = library.createResource<ShipmentLineItemCollection>(\n  ShipmentLineItemCollection\n)\n\nexport default ShipmentLineItem\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { SingleRelationship } from '#typings/Library'\nimport { SkuCollection } from './Sku'\nimport { TaxCalculatorCollection } from './TaxCalculator'\n\nexport class TaxCategoryCollection extends BaseClass {\n  static className = 'TaxCategory'\n  code: string\n  createdAt: Date\n  id: string\n  metadata: object\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  updatedAt: Date\n  sku: () => SingleRelationship<SkuCollection>\n  taxCalculator: () => SingleRelationship<TaxCalculatorCollection>\n  static define() {\n    this.attributes(\n      'code',\n      'createdAt',\n      'id',\n      'metadata',\n      'reference',\n      'referenceOrigin',\n      'skuCode',\n      'updatedAt'\n    )\n\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('taxCalculator', { className: 'TaxCalculator' })\n  }\n}\n\nconst TaxCategory = library.createResource<TaxCategoryCollection>(\n  TaxCategoryCollection\n)\n\nexport default TaxCategory\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { StockLocationCollection } from './StockLocation'\nimport { SkuCollection } from './Sku'\nimport { SingleRelationship } from '#typings/Library'\nimport { ShipmentCollection } from './Shipment'\nimport { LineItemCollection } from './LineItem'\n\nexport class StockTransferCollection extends BaseClass {\n  static className = 'StockTransfer'\n  _cancel: boolean\n  _complete: boolean\n  _inTransit: boolean\n  _picking: boolean\n  _upcoming: boolean\n  cancelledAt: Date\n  completedAt: Date\n  createdAt: Date\n  id: string\n  metadata: object\n  quantity: number\n  reference: string\n  referenceOrigin: string\n  skuCode: string\n  status: string\n  updatedAt: Date\n  originStockLocation: () =>\n    | Promise<SingleRelationship<StockLocationCollection>>\n    | SingleRelationship<StockLocationCollection>\n    | null\n  destinationStockLocation: () =>\n    | Promise<SingleRelationship<StockLocationCollection>>\n    | SingleRelationship<StockLocationCollection>\n    | null\n  lineItem: () =>\n    | Promise<SingleRelationship<LineItemCollection>>\n    | SingleRelationship<LineItemCollection>\n    | null\n  sku: () =>\n    | Promise<SingleRelationship<SkuCollection>>\n    | SingleRelationship<SkuCollection>\n    | null\n  shipment: () =>\n    | Promise<SingleRelationship<ShipmentCollection>>\n    | SingleRelationship<ShipmentCollection>\n    | null\n  static define() {\n    this.attributes(\n      '_cancel',\n      '_complete',\n      '_inTransit',\n      '_picking',\n      '_upcoming',\n      'cancelledAt',\n      'completedAt',\n      'createdAt',\n      'id',\n      'metadata',\n      'quantity',\n      'reference',\n      'referenceOrigin',\n      'skuCode',\n      'status',\n      'updatedAt'\n    )\n\n    this.hasOne('sku', { className: 'Sku' })\n    this.hasOne('originStockLocation', { className: 'StockLocation' })\n    this.hasOne('destinationStockLocation', { className: 'StockLocation' })\n    this.hasOne('shipment', { className: 'Shipment' })\n    this.hasOne('lineItem', { className: 'LineItem' })\n  }\n}\n\nconst StockTransfer = library.createResource<StockTransferCollection>(\n  StockTransferCollection\n)\n\nexport default StockTransfer\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\nimport { MultiRelationship } from '#typings/Library'\nimport { TaxCategoryCollection } from './TaxCategory'\n\nexport class AvalaraAccountCollection extends BaseClass {\n  static className = 'AvalaraAccount'\n  companyCode: string\n  createdAt: Date\n  ddp: string\n  id: string\n  metadata: object\n  name: string\n  password: string\n  reference: string\n  referenceOrigin: string\n  updatedAt: Date\n  username: string\n  taxCategories: () => MultiRelationship<TaxCategoryCollection>\n  static define() {\n    this.attributes(\n      'companyCode',\n      'createdAt',\n      'createdAt',\n      'ddp',\n      'id',\n      'metadata',\n      'name',\n      'password',\n      'reference',\n      'referenceOrigin',\n      'updatedAt'\n    )\n\n    this.hasMany('taxCategories', { className: 'TaxCategory' })\n  }\n}\n\nconst AvalaraAccount = library.createResource<AvalaraAccountCollection>(\n  AvalaraAccountCollection\n)\n\nexport default AvalaraAccount\n","import library from './library'\nimport BaseClass from '#utils/BaseClass'\n\nexport class OrganizationCollection extends BaseClass {\n  static className = 'Organization'\n  static queryName = 'organization'\n  acceptanceDisabled: boolean\n  accountDisabled: boolean\n  contrastColor: string\n  createdAt: Date\n  discountDisabled: boolean\n  domain: string\n  faviconUrl: string\n  gtmId: string\n  gtmIdTest: string\n  logoUrl: string\n  metadata: object\n  name: string\n  primaryColor: string\n  reference: string\n  referenceOrigin: string\n  slug: string\n  updatedAt: Date\n  id: string\n  static define() {\n    this.attributes(\n      'acceptanceDisabled',\n      'accountDisabled',\n      'contrastColor',\n      'createdAt',\n      'discountDisabled',\n      'domain',\n      'faviconUrl',\n      'gtmId',\n      'gtmIdTest',\n      'logoUrl',\n      'metadata',\n      'name',\n      'primaryColor',\n      'reference',\n      'referenceOrigin',\n      'slug',\n      'updatedAt'\n    )\n  }\n}\n\nconst Organization = library.createResource<OrganizationCollection>(\n  OrganizationCollection\n)\n\nexport default Organization\n","import Address, { AddressCollection } from '#resources/Address'\nimport Attachment, { AttachmentCollection } from '#resources/Attachment'\nimport CustomerAddress, {\n  CustomerAddressCollection,\n} from '#resources/CustomerAddress'\nimport CustomerGroup, {\n  CustomerGroupCollection,\n} from '#resources/CustomerGroup'\nimport CustomerPasswordReset, {\n  CustomerPasswordResetCollection,\n} from '#resources/CustomerPasswordReset'\nimport CustomerPaymentSource, {\n  CustomerPaymentSourceCollection,\n} from '#resources/CustomerPaymentSource'\nimport CustomerSubscription, {\n  CustomerSubscriptionCollection,\n} from '#resources/CustomerSubscription'\nimport Customer, { CustomerCollection } from '#resources/Customer'\nimport DeliveryLeadTime, {\n  DeliveryLeadTimeCollection,\n} from '#resources/DeliveryLeadTime'\nimport Import, { ImportCollection } from '#resources/Import'\nimport InStockSubscription, {\n  InStockSubscriptionCollection,\n} from '#resources/InStockSubscription'\nimport InventoryModel, {\n  InventoryModelCollection,\n} from '#resources/InventoryModel'\nimport LineItemOption, {\n  LineItemOptionCollection,\n} from '#resources/LineItemOption'\nimport LineItem, { LineItemCollection } from '#resources/LineItem'\nimport Market, { MarketCollection } from '#resources/Market'\nimport Merchant, { MerchantCollection } from '#resources/Merchant'\nimport Order, { OrderCollection } from '#resources/Order'\nimport Parcel, { ParcelCollection } from '#resources/Parcel'\nimport PaymentMethod, {\n  PaymentMethodCollection,\n} from '#resources/PaymentMethod'\nimport PaymentGateway, {\n  PaymentGatewayCollection,\n} from '#resources/PaymentGateway'\nimport PaypalPayment, {\n  PaypalPaymentCollection,\n} from '#resources/PaypalPayment'\nimport Price, { PriceCollection } from '#resources/Price'\nimport PriceList, { PriceListCollection } from '#resources/PriceList'\nimport Shipment, { ShipmentCollection } from '#resources/Shipment'\nimport ShippingCategory, {\n  ShippingCategoryCollection,\n} from '#resources/ShippingCategory'\nimport ShippingMethod, {\n  ShippingMethodCollection,\n} from '#resources/ShippingMethod'\nimport ShippingZone, { ShippingZoneCollection } from '#resources/ShippingZone'\nimport SkuOption, { SkuOptionCollection } from '#resources/SkuOption'\nimport Sku, { SkuCollection } from '#resources/Sku'\nimport SkuList, { SkuListCollection } from '#resources/SkuList'\nimport SkuListItem, { SkuListItemCollection } from '#resources/SkuListItem'\nimport StockItem, { StockItemCollection } from '#resources/StockItem'\nimport InventoryStockLocation, {\n  InventoryStockLocationCollection,\n} from '#resources/InventoryStockLocation'\nimport StockLocation, {\n  StockLocationCollection,\n} from '#resources/StockLocation'\nimport Webhook, { WebhookCollection } from '#resources/Webhook'\nimport WireTransfer, { WireTransferCollection } from '#resources/WireTransfer'\nimport init, { Init } from '#resources/Initialize'\nimport Geocoder, { GeocoderCollection } from '#resources/Geocoder'\nimport PaymentSource, {\n  PaymentSourceCollection,\n} from '#resources/PaymentSource'\nimport Item, { ItemCollection } from '#resources/Item'\nimport Attachable, { AttachableCollection } from '#resources/Attachable'\nimport GiftCard, { GiftCardCollection } from '#resources/GiftCard'\nimport GiftCardRecipient, {\n  GiftCardRecipientCollection,\n} from '#resources/GiftCardRecipient'\nimport AdyenPayment, { AdyenPaymentCollection } from '#resources/AdyenPayment'\nimport BraintreePayment, {\n  BraintreePaymentCollection,\n} from '#resources/BraintreePayment'\nimport StripePayment, {\n  StripePaymentCollection,\n} from '#resources/StripePayment'\nimport { BaseResource } from './typings/Library'\nimport ExternalPayment, {\n  ExternalPaymentCollection,\n} from '#resources/ExternalPayment'\nimport Package, { PackageCollection } from '#resources/Package'\nimport Adjustment, { AdjustmentCollection } from '#resources/Adjustment'\nimport Capture, { CaptureCollection } from '#resources/Capture'\nimport Authorization, {\n  AuthorizationCollection,\n} from '#resources/Authorization'\nimport BillingInfoValidationRule, {\n  BillingInfoValidationRuleCollection,\n} from '#resources/BillingInfoValidationRule'\nimport Refund, { RefundCollection } from '#resources/Refund'\nimport Void, { VoidCollection } from '#resources/Void'\nimport CouponCodesPromotionRule, {\n  CouponCodesPromotionRuleCollection,\n} from '#resources/CouponCodesPromotionRule'\nimport Coupon, { CouponCollection } from '#resources/Coupon'\nimport ExternalPromotion, {\n  ExternalPromotionCollection,\n} from '#resources/ExternalPromotion'\nimport FixedAmountPromotion, {\n  FixedAmountPromotionCollection,\n} from '#resources/FixedAmountPromotion'\nimport FreeShippingPromotion, {\n  FreeShippingPromotionCollection,\n} from '#resources/FreeShippingPromotion'\nimport OrderAmountPromotionRule, {\n  OrderAmountPromotionRuleCollection,\n} from '#resources/OrderAmountPromotionRule'\nimport PercentageDiscountPromotion, {\n  PercentageDiscountPromotionCollection,\n} from '#resources/PercentageDiscountPromotion'\nimport PromotionRule, {\n  PromotionRuleCollection,\n} from '#resources/PromotionRule'\nimport Promotion, { PromotionCollection } from '#resources/Promotion'\nimport SkuListPromotionRule, {\n  SkuListPromotionRuleCollection,\n} from '#resources/SkuListPromotionRule'\nimport InventoryReturnLocation, {\n  InventoryReturnLocationCollection,\n} from '#resources/InventoryReturnLocation'\nimport Return, { ReturnCollection } from '#resources/Return'\nimport ExternalTaxCalculator, {\n  ExternalTaxCalculatorCollection,\n} from '#resources/ExternalTaxCalculator'\nimport ManualTaxCalculator, {\n  ManualTaxCalculatorCollection,\n} from '#resources/ManualTaxCalculator'\nimport TaxCalculator, {\n  TaxCalculatorCollection,\n} from '#resources/TaxCalculator'\nimport TaxRule, { TaxRuleCollection } from '#resources/TaxRule'\nimport TaxjarAccount, {\n  TaxjarAccountCollection,\n} from '#resources/TaxjarAccount'\nimport ReturnLineItem, {\n  ReturnLineItemCollection,\n} from '#resources/ReturnLineItem'\nimport ShipmentLineItem, {\n  ShipmentLineItemCollection,\n} from '#resources/ShipmentLineItem'\nimport TaxCategory, { TaxCategoryCollection } from '#resources/TaxCategory'\nimport StockTransfer, {\n  StockTransferCollection,\n} from './resources/StockTransfer'\nimport AvalaraAccount, {\n  AvalaraAccountCollection,\n} from '#resources/AvalaraAccount'\nimport Organization, { OrganizationCollection } from '#resources/Organization'\n\nexport {\n  AddressCollection,\n  AdjustmentCollection,\n  AdyenPaymentCollection,\n  AttachableCollection,\n  AttachmentCollection,\n  AuthorizationCollection,\n  AvalaraAccountCollection,\n  BillingInfoValidationRuleCollection,\n  BraintreePaymentCollection,\n  CaptureCollection,\n  CouponCodesPromotionRuleCollection,\n  CouponCollection,\n  CustomerAddressCollection,\n  CustomerCollection,\n  CustomerGroupCollection,\n  CustomerPasswordResetCollection,\n  CustomerPaymentSourceCollection,\n  CustomerSubscriptionCollection,\n  DeliveryLeadTimeCollection,\n  ExternalPaymentCollection,\n  ExternalPromotionCollection,\n  ExternalTaxCalculatorCollection,\n  FixedAmountPromotionCollection,\n  FreeShippingPromotionCollection,\n  GeocoderCollection,\n  GiftCardCollection,\n  GiftCardRecipientCollection,\n  ImportCollection,\n  InStockSubscriptionCollection,\n  InventoryModelCollection,\n  InventoryReturnLocationCollection,\n  InventoryStockLocationCollection,\n  LineItemCollection,\n  LineItemOptionCollection,\n  ManualTaxCalculatorCollection,\n  MarketCollection,\n  MerchantCollection,\n  OrderAmountPromotionRuleCollection,\n  OrderCollection,\n  OrganizationCollection,\n  PackageCollection,\n  ParcelCollection,\n  PaymentGatewayCollection,\n  PaymentMethodCollection,\n  PaymentSourceCollection,\n  PaypalPaymentCollection,\n  PercentageDiscountPromotionCollection,\n  PriceCollection,\n  PriceListCollection,\n  PromotionCollection,\n  PromotionRuleCollection,\n  RefundCollection,\n  ReturnCollection,\n  ReturnLineItemCollection,\n  ShipmentCollection,\n  ShipmentLineItemCollection,\n  ShippingCategoryCollection,\n  ShippingMethodCollection,\n  ShippingZoneCollection,\n  SkuCollection,\n  SkuListCollection,\n  SkuListItemCollection,\n  SkuListPromotionRuleCollection,\n  SkuOptionCollection,\n  StockItemCollection,\n  StockLocationCollection,\n  StockTransferCollection,\n  StripePaymentCollection,\n  TaxCalculatorCollection,\n  TaxCategoryCollection,\n  TaxRuleCollection,\n  TaxjarAccountCollection,\n  VoidCollection,\n  WebhookCollection,\n  WireTransferCollection,\n}\n\nexport interface CLayer {\n  Address: BaseResource<AddressCollection>\n  Adjustment: BaseResource<AdjustmentCollection>\n  AdyenPayment: BaseResource<AdyenPaymentCollection>\n  Attachable: BaseResource<AttachableCollection>\n  Attachment: BaseResource<AttachmentCollection>\n  Authorization: BaseResource<AuthorizationCollection>\n  AvalaraAccount: BaseResource<AvalaraAccountCollection>\n  BillingInfoValidationRule: BaseResource<BillingInfoValidationRuleCollection>\n  BraintreePayment: BaseResource<BraintreePaymentCollection>\n  Capture: BaseResource<CaptureCollection>\n  Coupon: BaseResource<CouponCollection>\n  CouponCodesPromotionRule: BaseResource<CouponCodesPromotionRuleCollection>\n  Customer: BaseResource<CustomerCollection>\n  CustomerAddress: BaseResource<CustomerAddressCollection>\n  CustomerGroup: BaseResource<CustomerGroupCollection>\n  CustomerPasswordReset: BaseResource<CustomerPasswordResetCollection>\n  CustomerPaymentSource: BaseResource<CustomerPaymentSourceCollection>\n  CustomerSubscription: BaseResource<CustomerSubscriptionCollection>\n  DeliveryLeadTime: BaseResource<DeliveryLeadTimeCollection>\n  ExternalPayment: BaseResource<ExternalPaymentCollection>\n  ExternalPromotion: BaseResource<ExternalPromotionCollection>\n  ExternalTaxCalculator: BaseResource<ExternalTaxCalculatorCollection>\n  FixedAmountPromotion: BaseResource<FixedAmountPromotionCollection>\n  FreeShippingPromotion: BaseResource<FreeShippingPromotionCollection>\n  Geocoder: BaseResource<GeocoderCollection>\n  GiftCard: BaseResource<GiftCardCollection>\n  GiftCardRecipient: BaseResource<GiftCardRecipientCollection>\n  Import: BaseResource<ImportCollection>\n  InStockSubscription: BaseResource<InStockSubscriptionCollection>\n  InventoryModel: BaseResource<InventoryModelCollection>\n  InventoryReturnLocation: BaseResource<InventoryReturnLocationCollection>\n  InventoryStockLocation: BaseResource<InventoryStockLocationCollection>\n  Item: BaseResource<ItemCollection>\n  LineItem: BaseResource<LineItemCollection>\n  LineItemOption: BaseResource<LineItemOptionCollection>\n  ManualTaxCalculator: BaseResource<ManualTaxCalculatorCollection>\n  Market: BaseResource<MarketCollection>\n  Merchant: BaseResource<MerchantCollection>\n  Order: BaseResource<OrderCollection>\n  Organization: BaseResource<OrganizationCollection>\n  OrderAmountPromotionRule: BaseResource<OrderAmountPromotionRuleCollection>\n  Package: BaseResource<PackageCollection>\n  Parcel: BaseResource<ParcelCollection>\n  PaymentGateway: BaseResource<PaymentGatewayCollection>\n  PaymentMethod: BaseResource<PaymentMethodCollection>\n  PaymentSource: BaseResource<PaymentSourceCollection>\n  PaypalPayment: BaseResource<PaypalPaymentCollection>\n  PercentageDiscountPromotion: BaseResource<\n    PercentageDiscountPromotionCollection\n  >\n  Price: BaseResource<PriceCollection>\n  PriceList: BaseResource<PriceListCollection>\n  Promotion: BaseResource<PromotionCollection>\n  PromotionRule: BaseResource<PromotionRuleCollection>\n  Refund: BaseResource<RefundCollection>\n  Return: BaseResource<ReturnCollection>\n  ReturnLineItem: BaseResource<ReturnLineItemCollection>\n  Shipment: BaseResource<ShipmentCollection>\n  ShipmentLineItem: BaseResource<ShipmentLineItemCollection>\n  ShippingCategory: BaseResource<ShippingCategoryCollection>\n  ShippingMethod: BaseResource<ShippingMethodCollection>\n  ShippingZone: BaseResource<ShippingZoneCollection>\n  Sku: BaseResource<SkuCollection>\n  SkuList: BaseResource<SkuListCollection>\n  SkuListItem: BaseResource<SkuListItemCollection>\n  SkuListPromotionRule: BaseResource<SkuListPromotionRuleCollection>\n  SkuOption: BaseResource<SkuOptionCollection>\n  StockItem: BaseResource<StockItemCollection>\n  StockLocation: BaseResource<StockLocationCollection>\n  StockTransfer: BaseResource<StockTransferCollection>\n  StripePayment: BaseResource<StripePaymentCollection>\n  TaxCalculator: BaseResource<TaxCalculatorCollection>\n  TaxCategory: BaseResource<TaxCategoryCollection>\n  TaxRule: BaseResource<TaxRuleCollection>\n  TaxjarAccount: BaseResource<TaxjarAccountCollection>\n  Void: BaseResource<VoidCollection>\n  Webhook: BaseResource<WebhookCollection>\n  WireTransfer: BaseResource<WireTransferCollection>\n  init: Init\n}\nconst CLayer: CLayer = {\n  Address,\n  Adjustment,\n  AdyenPayment,\n  Attachable,\n  Attachment,\n  Authorization,\n  AvalaraAccount,\n  BillingInfoValidationRule,\n  BraintreePayment,\n  Capture,\n  Coupon,\n  CouponCodesPromotionRule,\n  Customer,\n  CustomerAddress,\n  CustomerGroup,\n  CustomerPasswordReset,\n  CustomerPaymentSource,\n  CustomerSubscription,\n  DeliveryLeadTime,\n  ExternalPayment,\n  ExternalPromotion,\n  ExternalTaxCalculator,\n  FixedAmountPromotion,\n  FreeShippingPromotion,\n  Geocoder,\n  GiftCard,\n  GiftCardRecipient,\n  Import,\n  InStockSubscription,\n  InventoryModel,\n  InventoryReturnLocation,\n  InventoryStockLocation,\n  Item,\n  LineItem,\n  LineItemOption,\n  ManualTaxCalculator,\n  Market,\n  Merchant,\n  Order,\n  OrderAmountPromotionRule,\n  Organization,\n  Package,\n  Parcel,\n  PaymentGateway,\n  PaymentMethod,\n  PaymentSource,\n  PaypalPayment,\n  PercentageDiscountPromotion,\n  Price,\n  PriceList,\n  Promotion,\n  PromotionRule,\n  Refund,\n  Return,\n  ReturnLineItem,\n  Shipment,\n  ShipmentLineItem,\n  ShippingCategory,\n  ShippingMethod,\n  ShippingZone,\n  Sku,\n  SkuList,\n  SkuListItem,\n  SkuListPromotionRule,\n  SkuOption,\n  StockItem,\n  StockLocation,\n  StockTransfer,\n  StripePayment,\n  TaxCalculator,\n  TaxCategory,\n  TaxRule,\n  TaxjarAccount,\n  Void,\n  Webhook,\n  WireTransfer,\n  init,\n}\n\nconst initCLayer = init\n\nexport {\n  Address,\n  Adjustment,\n  AdyenPayment,\n  Attachable,\n  Attachment,\n  Authorization,\n  AvalaraAccount,\n  BillingInfoValidationRule,\n  BraintreePayment,\n  Capture,\n  Coupon,\n  CouponCodesPromotionRule,\n  Customer,\n  CustomerAddress,\n  CustomerGroup,\n  CustomerPasswordReset,\n  CustomerPaymentSource,\n  CustomerSubscription,\n  DeliveryLeadTime,\n  ExternalPayment,\n  ExternalPromotion,\n  ExternalTaxCalculator,\n  FixedAmountPromotion,\n  FreeShippingPromotion,\n  Geocoder,\n  GiftCard,\n  GiftCardRecipient,\n  Import,\n  InStockSubscription,\n  InventoryModel,\n  InventoryReturnLocation,\n  InventoryStockLocation,\n  Item,\n  LineItem,\n  LineItemOption,\n  ManualTaxCalculator,\n  Market,\n  Merchant,\n  Order,\n  OrderAmountPromotionRule,\n  Organization,\n  Package,\n  Parcel,\n  PaymentGateway,\n  PaymentMethod,\n  PaymentSource,\n  PaypalPayment,\n  PercentageDiscountPromotion,\n  Price,\n  PriceList,\n  Promotion,\n  PromotionRule,\n  Refund,\n  Return,\n  ReturnLineItem,\n  Shipment,\n  ShipmentLineItem,\n  ShippingCategory,\n  ShippingMethod,\n  ShippingZone,\n  Sku,\n  SkuList,\n  SkuListItem,\n  SkuListPromotionRule,\n  SkuOption,\n  StockItem,\n  StockLocation,\n  StockTransfer,\n  StripePayment,\n  TaxCalculator,\n  TaxCategory,\n  TaxRule,\n  TaxjarAccount,\n  Void,\n  Webhook,\n  WireTransfer,\n  initCLayer,\n}\n\nexport default CLayer\n"],"names":["cleanUrl","url","lastSlash","lastIndexOf","length","substring","parserParams","params","_","isEmpty","filter","has","q","fields","include","expInclude","split","includeKey","findKey","v","search","expFields","map","field","includes","first","join","subdomain","library","createResourceLibrary","ExtendLibrary","includeMetaInfo","axios","interceptors","select","order","page","value","perPage","limit","offset","where","options","relation","all","findBy","eqOptions","Object","keys","withCredentials","accessToken","endpoint","resourceLibrary","headers","Authorization","baseUrl","__links","related","queryName","singleRequest","klass","i","setInterceptors","find","paramKey","setCustomInterceptors","customInterceptors","_klass","classThis","interceptReq","request","interceptResp","response","respHandlers","handlers","use","config","before","error","Promise","reject","shift","meta","isArray","data","metaCamelCase","toCamelCase","customRequests","collectionParent","Base","setMetaByRequest","child","req","setHeaders","childData","id","collectionMeta","setMetaInfo","setCollectionMetaInfo","afterBuild","__meta","__collectionMeta","__headers","afterRequest","constructor","CollectionResponse","prototype","getMetaInfo","firstItem","getHeaders","pageCount","recordCount","BaseClass","mode","association","name","self","AddressCollection","define","attributes","hasOne","className","Address","createResource","AttachmentCollection","belongsTo","polymorphic","Attachment","attachableId","attachableType","CustomerAddressCollection","CustomerAddress","CustomerGroupCollection","hasMany","CustomerGroup","CustomerPasswordResetCollection","CustomerPasswordReset","CustomerPaymentSourceCollection","CustomerPaymentSource","paymentSourceId","paymentSourceType","CustomerSubscriptionCollection","CustomerSubscription","CustomerCollection","Customer","DeliveryLeadTimeCollection","DeliveryLeadTime","ImportCollection","Import","InStockSubscriptionCollection","InStockSubscription","InventoryModelCollection","InventoryModel","LineItemOptionCollection","LineItemOption","LineItemCollection","LineItem","itemId","itemType","MarketCollection","Market","MerchantCollection","Merchant","OrderCollection","Order","ParcelCollection","Parcel","PaymentMethodCollection","PaymentMethod","PaymentGatewayCollection","PaymentGateway","PaypalPaymentCollection","PaypalPayment","PriceCollection","Price","PriceListCollection","PriceList","ShipmentCollection","Shipment","ShippingCategoryCollection","ShippingCategory","ShippingMethodCollection","ShippingMethod","ShippingZoneCollection","ShippingZone","SkuOptionCollection","SkuOption","SkuCollection","Sku","SkuListCollection","SkuList","SkuListItemCollection","SkuListItem","StockItemCollection","StockItem","InventoryStockLocationCollection","InventoryStockLocation","StockLocationCollection","StockLocation","WebhookCollection","Webhook","WireTransferCollection","WireTransfer","init","GeocoderCollection","Geocoder","PaymentSourceCollection","PaymentSource","ItemCollection","Item","AttachableCollection","Attachable","GiftCardCollection","GiftCard","GiftCardRecipientCollection","GiftCardRecipient","AdyenPaymentCollection","AdyenPayment","BraintreePaymentCollection","BraintreePayment","StripePaymentCollection","StripePayment","ExternalPaymentCollection","ExternalPayment","PackageCollection","Package","AdjustmentCollection","Adjustment","CaptureCollection","Capture","AuthorizationCollection","BillingInfoValidationRuleCollection","BillingInfoValidationRule","RefundCollection","Refund","VoidCollection","Void","CouponCodesPromotionRuleCollection","CouponCodesPromotionRule","CouponCollection","Coupon","ExternalPromotionCollection","ExternalPromotion","FixedAmountPromotionCollection","FixedAmountPromotion","FreeShippingPromotionCollection","FreeShippingPromotion","OrderAmountPromotionRuleCollection","OrderAmountPromotionRule","PercentageDiscountPromotionCollection","PercentageDiscountPromotion","PromotionRuleCollection","PromotionRule","PromotionCollection","Promotion","SkuListPromotionRuleCollection","SkuListPromotionRule","InventoryReturnLocationCollection","ReturnCollection","ExternalTaxCalculatorCollection","ExternalTaxCalculator","ManualTaxCalculatorCollection","ManualTaxCalculator","TaxCalculatorCollection","TaxCalculator","TaxRuleCollection","TaxRule","TaxjarAccountCollection","TaxjarAccount","ReturnLineItemCollection","ShipmentLineItemCollection","ShipmentLineItem","TaxCategoryCollection","TaxCategory","StockTransferCollection","StockTransfer","AvalaraAccountCollection","AvalaraAccount","OrganizationCollection","Organization","CLayer","InventoryReturnLocation","Return","ReturnLineItem","initCLayer"],"mappings":"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"}