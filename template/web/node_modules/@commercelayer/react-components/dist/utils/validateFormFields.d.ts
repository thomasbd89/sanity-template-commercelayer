import { BaseState } from "../typings/index";
import { ResourceErrorType, BaseError } from "../typings/errors";
import { AddressField, AddressSchema } from "../reducers/AddressReducer";
export interface ValidateFormFields {
    <R extends string[]>(fields: HTMLFormControlsCollection, required: R, resourceType: ResourceErrorType): {
        errors: BaseError[];
        values: BaseState;
    };
}
export interface ValidateValue {
    <V extends string | boolean, N extends string, T extends string, B extends ResourceErrorType>(val: V, name: N, type: T, resourceType: B): BaseError | Record<string, any>;
}
export declare const validateValue: ValidateValue;
declare const validateFormFields: ValidateFormFields;
export interface FieldsExist {
    (values: AddressSchema, schema?: AddressField[]): boolean;
}
export declare const fieldsExist: FieldsExist;
export default validateFormFields;
