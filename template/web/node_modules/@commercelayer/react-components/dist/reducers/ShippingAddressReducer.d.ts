import { Dispatch } from 'react';
import { CommerceLayerConfig } from "../context/CommerceLayerContext";
import { OrderCollection } from '@commercelayer/js-sdk';
import { getOrderContext } from "./OrderReducer";
export declare type ShippingAddressActionType = 'setShippingAddress' | 'setShippingCustomerAddressId';
export interface ShippingAddressActionPayload {
    _shippingAddressCloneId: string;
    shippingCustomerAddressId: string;
}
export declare type ShippingAddressState = Partial<ShippingAddressActionPayload>;
export interface ShippingAddressAction {
    type: ShippingAddressActionType;
    payload: Partial<ShippingAddressActionPayload>;
}
export declare const shippingAddressInitialState: ShippingAddressState;
export declare type SetShippingAddress = (id: string, options?: {
    config: CommerceLayerConfig;
    dispatch: Dispatch<ShippingAddressAction>;
    order?: OrderCollection | null;
    getOrder?: getOrderContext;
    customerAddressId?: string;
}) => Promise<void>;
export declare const setShippingAddress: SetShippingAddress;
declare type SetShippingCustomerAddressId = (args: {
    customerAddressId: string;
    dispatch: Dispatch<ShippingAddressAction>;
}) => void;
export declare const setShippingCustomerAddressId: SetShippingCustomerAddressId;
declare const shippingAddressReducer: (state: ShippingAddressState, reducer: ShippingAddressAction) => ShippingAddressState;
export default shippingAddressReducer;
