import { BaseError } from "../typings/errors";
import { CommerceLayerConfig } from "../context/CommerceLayerContext";
import { Dispatch } from 'react';
export interface LeadTimes {
    hours: number;
    days: number;
}
export interface ShippingMethod {
    name: string;
    reference: null | string;
    priceAmountCents: number;
    freeOverAmountCents: null | number;
    formattedPriceAmount: string;
    formattedFreeOverAmount: null | string;
}
export interface AvailabilityPayload {
    quantity?: number | null;
    shippingMethod?: ShippingMethod;
    errors?: BaseError[];
}
export interface AvailabilityState extends AvailabilityPayload {
    min: LeadTimes;
    max: LeadTimes;
}
export interface AvailabilityAction {
    type: AvailabilityActionType;
    payload: AvailabilityPayload;
}
export declare const availabilityInitialState: AvailabilityState;
interface GetAvailability {
    (args: {
        skuCode: string;
        dispatch: Dispatch<AvailabilityAction>;
        config: CommerceLayerConfig;
    }): void;
}
export declare const getAvailability: GetAvailability;
export declare type AvailabilityActionType = 'setAvailability' | 'setErrors';
declare const availabilityReducer: (state: AvailabilityState, reducer: AvailabilityAction) => AvailabilityState;
export default availabilityReducer;
