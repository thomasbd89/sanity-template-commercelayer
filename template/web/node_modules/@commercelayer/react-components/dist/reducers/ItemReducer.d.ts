import { BaseUnsetState } from "../typings/index";
import { SkuCollection, PriceCollection } from '@commercelayer/js-sdk';
import { Dispatch } from 'react';
export interface Items {
    [skuCode: string]: SkuCollection;
}
export interface ItemPrices {
    [skuCode: string]: PriceCollection;
}
export interface ItemQuantity {
    [skuCode: string]: number;
}
export interface ItemOption {
    [key: string]: {
        skuOptionId: string;
        options: {
            [key: string]: string;
        };
    };
}
export interface ItemOptions {
    [skuCode: string]: ItemOption;
}
export declare type CustomLineItem = {
    name?: string;
    imageUrl?: string | null;
};
export interface CustomLineItems {
    [skuCode: string]: CustomLineItem;
}
declare type ItemParams = {
    type: ItemActionType;
    key: 'items' | 'item' | 'quantity' | 'option' | 'prices' | 'lineItem' | 'lineItems' | 'skuCode';
};
declare type DataType = Items | ItemQuantity | ItemOptions | ItemPrices | CustomLineItems | CustomLineItem | string;
export interface SetItemState {
    (data: DataType, params: ItemParams, dispatch: Dispatch<ItemAction>): void;
}
export declare const setItemState: SetItemState;
export declare const unsetItemState: BaseUnsetState<ItemAction>;
export declare type SetCustomLineItems = (lineItems: CustomLineItems) => void;
export declare type SetCustomLineItem = (lineItem: CustomLineItem) => void;
export interface ItemState {
    skuCode?: string;
    items?: Items;
    item?: Items;
    lineItems?: CustomLineItems;
    lineItem?: CustomLineItem;
    quantity?: ItemQuantity;
    option?: ItemOptions;
    prices?: ItemPrices;
    setItems?: (items: Items) => void;
    setItem?: (item: Items) => void;
    setQuantity?: (quantity: ItemQuantity) => void;
    setOption?: (option: ItemOptions) => void;
    setPrices?: (prices: ItemPrices) => void;
    setSkuCode?: (skuCode: string) => void;
    setCustomLineItems: SetCustomLineItems;
    setCustomLineItem?: SetCustomLineItem;
}
declare type ItemActionType = 'setItem' | 'setItems' | 'setQuantity' | 'setOption' | 'setPrices' | 'setCustomLineItems' | 'setCustomLineItem' | 'setSkuCode';
export interface ItemAction {
    type: ItemActionType;
    payload: Partial<ItemState>;
}
export declare const itemInitialState: Partial<ItemState>;
declare const itemReducer: (state: Partial<ItemState>, reducer: ItemAction) => Partial<ItemState>;
export default itemReducer;
