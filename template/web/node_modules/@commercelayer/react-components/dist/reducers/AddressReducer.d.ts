import { Dispatch } from 'react';
import { BaseError } from "../typings/errors";
import { CommerceLayerConfig } from "../context/CommerceLayerContext";
import { OrderCollection } from '@commercelayer/js-sdk';
export declare type AddressActionType = 'setErrors' | 'setAddress' | 'setShipToDifferentAddress' | 'setCloneAddress';
export declare type AddressField = 'city' | 'company' | 'country_code' | 'first_name' | 'last_name' | 'line_1' | 'line_2' | 'phone' | 'state_code' | 'zip_code';
export declare type AddressFieldView = AddressField | 'full_address';
export declare const addressFields: AddressField[];
export declare type AddressResource = 'billingAddress' | 'shippingAddress';
export declare type AddressSchema = Record<AddressField, string>;
export interface AddressActionPayload {
    errors: BaseError[];
    billingAddress: AddressSchema;
    shippingAddress: AddressSchema;
    shipToDifferentAddress: boolean;
    billingAddressId: string;
    shippingAddressId: string;
}
export declare type AddressState = Partial<AddressActionPayload>;
export interface AddressAction {
    type: AddressActionType;
    payload: Partial<AddressActionPayload>;
}
export declare const addressInitialState: AddressState;
export interface SetAddressErrors {
    <V extends BaseError[]>(errors: V, dispatch?: Dispatch<AddressAction>): void;
}
export declare type SetAddressParams<V extends AddressSchema> = {
    values: V;
    resource: AddressResource;
    dispatch?: Dispatch<AddressAction>;
};
export interface SetAddress {
    <V extends AddressSchema | Record<string, any>>(params: SetAddressParams<V>): void;
}
export interface SaveAddresses {
    (params: {
        orderId?: string;
        order?: OrderCollection | null;
        getOrder?: (orderId: string) => void;
        config: CommerceLayerConfig;
        state: AddressState;
        dispatch: Dispatch<AddressAction>;
    }): Promise<void>;
}
export declare const setAddressErrors: SetAddressErrors;
export declare const setAddress: SetAddress;
declare type SetCloneAddress = (id: string, resource: 'billingAddress' | 'shippingAddress', dispatch: Dispatch<AddressAction>) => void;
export declare const setCloneAddress: SetCloneAddress;
export declare const saveAddresses: SaveAddresses;
declare const addressReducer: (state: AddressState, reducer: AddressAction) => AddressState;
export default addressReducer;
