import { Dispatch } from 'react';
import { Action, State } from './fetchReducer';
import { GenericItemAttribute } from './validateValue';
export interface GenericEventTarget {
    currentTarget?: {
        multiple?: boolean;
        options: HTMLOptionsCollection;
        dataset?: {
            typevalue?: 'array' | 'string';
        };
        name: string;
        value: string;
        type: string;
        required: boolean;
        checked?: boolean;
        pattern?: string;
    };
}
export interface GenericElement extends GenericEventTarget {
    multiple?: boolean;
    options: HTMLOptionsCollection;
    dataset?: {
        typevalue?: 'array' | 'string';
    };
    name: string;
    value: string;
    type: string;
    required: boolean;
    checked?: boolean;
    pattern?: string;
}
export interface FormData {
    [key: string]: GenericItemAttribute;
}
export interface HandleChange {
    (event: GenericElement, dispatch: Dispatch<Action>): void | State;
}
declare const handleChange: HandleChange;
export default handleChange;
