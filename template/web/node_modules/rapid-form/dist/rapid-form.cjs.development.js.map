{"version":3,"file":"rapid-form.cjs.development.js","sources":["../src/utils/fetchReducer.ts","../src/utils/validateValue.ts","../src/utils/setErrors.ts","../src/utils/multiSelect.ts","../src/utils/handleChange.ts","../src/hooks/useValidation.ts","../src/utils/reset.ts","../src/hooks/useSubmitValidation .ts","../src/hooks/useRapidForm.ts"],"sourcesContent":["import { Reducer } from 'react'\nimport { ErrorsObj } from '../hooks/useRapidForm'\n\nexport interface State {\n  data: Record<string, any>\n  errors: ErrorsObj\n  refs: Record<string, any>\n  name?: string\n}\n\nexport interface Action {\n  type: 'change' | 'error' | 'reset' | 'setRef'\n  data?: Record<string, any>\n  errors?: ErrorsObj\n  name?: string | number\n}\n\n// TODO: refactor in one way\nconst fetchReducer: Reducer<State, Action> = (state, action) => {\n  if (action.type === 'change') {\n    if (action.name && state.errors?.hasOwnProperty(action.name)) {\n      delete state.errors[action.name]\n    }\n    state = {\n      ...state,\n      data: {\n        ...state.data,\n        ...action.data,\n      },\n      errors: {\n        ...state.errors,\n        ...action.errors,\n      },\n    }\n  }\n  if (action.type === 'setRef') {\n    state = {\n      ...state,\n      refs: {\n        ...state.refs,\n        ...action.data,\n      },\n    }\n  }\n  if (action.type === 'error') {\n    state = {\n      ...state,\n      data: {\n        ...state.data,\n        ...action.data,\n      },\n      errors: {\n        ...state.errors,\n        ...action.errors,\n      },\n    }\n  }\n  if (action.type === 'reset') {\n    state = {\n      ...state,\n      data: {},\n      errors: {},\n    }\n  }\n  return state\n}\n\nexport default fetchReducer\n","const DEFAULT_PATTERN = /\\w+/\nconst EMAIL_PATTERN = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/\nconst PW_PATTERN = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,}$/\n// const PW_PATTERN = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{10,}$/\n// NOTE: At least one lower case English letter, (?=.*?[a-z])\n// NOTE: At least one upper case English letter, (?=.*?[A-Z])\n// NOTE: At least one digit, (?=.*\\d)\n// NOTE: At least one special character, (?=.*?[#?!@$%^&*-]) (Removed)\n// NOTE: Minimum ten in length .{6,} (with the anchors)\n\nexport type GenericValue =\n  | string\n  | string[]\n  | number\n  | undefined\n  | Record<string, any>\n\nexport interface GenericItem {\n  value: GenericValue\n  type: string\n  checked?: boolean\n}\n\nexport interface GenericItemAttribute extends GenericItem {\n  name: string\n  required: boolean\n  value: string\n  pattern?: GenericPattern\n}\n\nexport interface IsEmpty {\n  (object: GenericItem): boolean\n}\n\nexport type GenericError = {\n  error: boolean\n  message: string\n  code?: 'EMPTY_ERROR' | 'VALIDATION_ERROR'\n}\n\nexport type GenericPattern = RegExp | string\n\nexport interface IsValidPattern {\n  (value: string, type: string, pattern?: GenericPattern): GenericError\n}\n\nexport interface ValidateValue {\n  (data: GenericItemAttribute): GenericError\n}\n\nconst isEmpty: IsEmpty = ({ value, type, checked }) => {\n  if (type === ('checkbox' || 'radio')) {\n    return !checked\n  }\n  if (Array.isArray(value)) {\n    value = value.find((v) => v !== '')?.length\n  }\n  return !value\n}\n\nconst isValidPattern: IsValidPattern = (val, type, pattern) => {\n  let obj = {\n    error: false,\n    message: '',\n  }\n  const objError: GenericError = {\n    error: true,\n    message: `please enter a valid format`,\n    code: 'VALIDATION_ERROR',\n  }\n  if (type === 'email' && !val.match(pattern || EMAIL_PATTERN)) {\n    obj = { ...obj, ...objError }\n  }\n  if (type === 'password' && !val.match(pattern || PW_PATTERN)) {\n    obj = { ...obj, ...objError }\n  }\n  if (type === 'text' && !val.match(pattern || DEFAULT_PATTERN)) {\n    obj = { ...obj, ...objError }\n  }\n  return obj\n}\n\nconst validateValue: ValidateValue = (data) => {\n  if (!data.required) {\n    return {\n      error: false,\n      message: '',\n    }\n  }\n  if (isEmpty(data)) {\n    return {\n      error: true,\n      message: `${data.name} is required`,\n      code: 'EMPTY_ERROR',\n    }\n  }\n  return isValidPattern(data.value, data.type, data.pattern)\n}\n\nexport default validateValue\n","import validateValue from './validateValue'\nimport { Dispatch } from 'react'\nimport { Action } from './fetchReducer'\nimport { GenericItemAttribute } from './validateValue'\n\nexport interface SetErrors {\n  (data: GenericItemAttribute, dispatch: Dispatch<Action>): void\n}\n\nconst setErrors: SetErrors = (data, dispatch) => {\n  const { error, message, code } = validateValue(data)\n  if (error) {\n    dispatch({\n      type: 'error',\n      name: data.name,\n      data: {\n        [data.name]: {\n          ...data\n        }\n      },\n      errors: {\n        [data.name]: {\n          error,\n          message,\n          code\n        }\n      }\n    })\n    return {\n      data: {\n        [data.name]: {\n          ...data\n        }\n      },\n      errors: {\n        [data.name]: {\n          message,\n          code\n        }\n      }\n    }\n  }\n  dispatch({\n    type: 'change',\n    name: data.name,\n    data: {\n      [data.name]: {\n        ...data\n      }\n    }\n  })\n  return {\n    data: {\n      [data.name]: {\n        ...data\n      }\n    }\n  }\n}\n\nexport default setErrors\n","export interface MultiSelectValues {\n  (options: HTMLOptionsCollection): string\n}\n\nconst multiSelectValues: MultiSelectValues = options => {\n  const v = Array.from(options)\n    .filter(o => o.selected)\n    .map(o => o.value)\n  return v.join(',')\n}\n\nexport default multiSelectValues\n","import setErrors from './setErrors'\nimport multiSelectValues from './multiSelect'\nimport { Dispatch } from 'react'\nimport { Action, State } from './fetchReducer'\nimport { GenericItemAttribute } from './validateValue'\n\nexport interface GenericEventTarget {\n  currentTarget?: {\n    multiple?: boolean\n    options: HTMLOptionsCollection\n    dataset?: {\n      typevalue?: 'array' | 'string'\n    }\n    name: string\n    value: string\n    type: string\n    required: boolean\n    checked?: boolean\n    pattern?: string\n  }\n}\n\nexport interface GenericElement extends GenericEventTarget {\n  multiple?: boolean\n  options: HTMLOptionsCollection\n  dataset?: {\n    typevalue?: 'array' | 'string'\n  }\n  name: string\n  value: string\n  type: string\n  required: boolean\n  checked?: boolean\n  pattern?: string\n}\n\nexport interface FormData {\n  [key: string]: GenericItemAttribute\n}\n\nexport interface HandleChange {\n  (event: GenericElement, dispatch: Dispatch<Action>): void | State\n}\n\nconst handleChange: HandleChange = (e, dispatch) => {\n  const element = e?.currentTarget ? e.currentTarget : e\n  const m = element.multiple\n  const v = m ? multiSelectValues(element?.options) : element.value\n  const n = element.name\n  const t = element.type\n  const r = element.required\n  const c = element?.checked\n  const p = element?.pattern\n  const data = {\n    [n]: {\n      checked: c,\n      name: n,\n      pattern: p,\n      required: r,\n      type: t,\n      value: v,\n    },\n  }\n  return setErrors(data[n], dispatch)\n}\n\nexport default handleChange\n","import { useCallback, Dispatch } from 'react'\nimport handleChange, { GenericElement } from '../utils/handleChange'\nimport { Action } from '../utils/fetchReducer'\n\nexport interface UseValidationInterface {\n  (dispatch: Dispatch<Action>): void\n}\n\nconst useValidation: UseValidationInterface = (dispatch) => {\n  return useCallback(\n    (ref): void => {\n      if (ref) {\n        const { name, value } = ref\n        dispatch({\n          type: 'setRef',\n          data: {\n            [name]: ref,\n          },\n        })\n        if (value) {\n          handleChange(ref, dispatch)\n        }\n        ref.oninput = (e: GenericElement): any => handleChange(e, dispatch)\n      }\n    },\n    [dispatch]\n  )\n}\n\nexport default useValidation\n","import { SyntheticEvent, Dispatch } from 'react'\nimport { Action } from './fetchReducer'\n\nexport interface ResetFunc {\n  (event: SyntheticEvent<HTMLFormElement>): void\n}\n\nexport interface ResetAll {\n  (dispacth: Dispatch<Action>): void\n}\n\nconst resetAll: ResetAll = dispatch => {\n  dispatch({\n    type: 'reset'\n  })\n}\n\nexport default resetAll\n","import { Dispatch, useCallback } from 'react'\nimport { Action } from '../utils/fetchReducer'\nimport _ from 'lodash'\nimport handleChange, { GenericElement } from '../utils/handleChange'\n\nexport interface SubmitValidation {\n  (dispatch: Dispatch<Action>): void\n}\n\nconst useSubmitValidation: SubmitValidation = dispatch => {\n  return useCallback(\n    (ref): void => {\n      if (ref) {\n        ref.onsubmit = (e: HTMLFormElement): void => {\n          _.map(e.currentTarget.elements, (e: GenericElement) => {\n            if (e.currentTarget?.name) {\n              handleChange(e, dispatch)\n            }\n          })\n        }\n      }\n    },\n    [dispatch]\n  )\n}\n\nexport default useSubmitValidation\n","import { useReducer, SyntheticEvent } from 'react'\nimport fetchReducer from '../utils/fetchReducer'\nimport useValidation from './useValidation'\nimport resetAll from '../utils/reset'\nimport { ResetFunc } from '../utils/reset'\nimport useSubmitValidation from './useSubmitValidation '\nimport _ from 'lodash'\nimport handleChange, { GenericElement } from '../utils/handleChange'\nimport { State } from '../utils/fetchReducer'\nimport { GenericError } from '../utils/validateValue'\nimport setErrors from '../utils/setErrors'\n\nexport interface GeneralObject {\n  [key: string]: string | string[] | Record<string, any>\n}\n\nexport interface ErrorsObj {\n  [key: string]: GenericError\n}\n\nexport interface SubmitCallback<E = SyntheticEvent<HTMLFormElement>> {\n  (data: Record<string, any>, errors: ErrorsObj, event: E): void\n}\n\nexport interface HandleSubmit<C> {\n  (callback: C): (event: SyntheticEvent<HTMLFormElement>) => void\n}\n\nexport interface ReturnParams {\n  handleSubmit: HandleSubmit<SubmitCallback>\n  errors: ErrorsObj\n  validation: any\n  submitValidation: any\n  reset: ResetFunc\n  values: Record<string, any>\n  setValue: (name: string, value: string) => void\n  setError: (\n    error: Pick<GenericError, 'code' | 'message'> & { name: string }\n  ) => void\n}\n\nexport interface UseRapidForm {\n  (): ReturnParams\n}\n\nconst useRapidForm: UseRapidForm = () => {\n  const [state, dispatch] = useReducer(fetchReducer, {\n    data: {},\n    errors: {},\n    refs: {},\n  })\n  const ValidationHook = useValidation(dispatch)\n  const SubmitValidation = useSubmitValidation(dispatch)\n  const reset: ResetFunc = (e) => {\n    if (e.currentTarget) {\n      e.currentTarget.reset()\n    } else if (_.has(e.target, 'reset')) {\n      // @ts-ignore\n      e.target.reset()\n    }\n    resetAll(dispatch)\n  }\n  return {\n    handleSubmit: (c) => (e): void => {\n      let tempState = {\n        data: {},\n        errors: {},\n      }\n      e.preventDefault()\n      _.map(e.currentTarget.elements, (e: GenericElement) => {\n        if (e.name) {\n          const st = handleChange(e, dispatch) as State\n          tempState = {\n            data: { ...tempState.data, ...st.data },\n            errors: { ...tempState.errors, ...st.errors },\n          }\n        }\n      })\n      const newState = {\n        data: _.isEmpty(state.data) ? tempState.data : state.data,\n        errors: _.isEmpty(state.errors) ? tempState.errors : state.errors,\n      }\n      return c(newState.data, newState.errors, e)\n    },\n    errors: state.errors,\n    validation: ValidationHook,\n    submitValidation: SubmitValidation,\n    reset,\n    values: state.data,\n    setValue: (name: string, value: string) => {\n      const field = state.refs[name]\n      if (field) {\n        field.value = value\n        setErrors(\n          {\n            checked: field.checked,\n            name,\n            pattern: field.pattern,\n            required: field.required,\n            type: field.type,\n            value,\n          },\n          dispatch\n        )\n      }\n    },\n    setError: (error) => {\n      const { name, ...e } = error\n      dispatch({\n        type: 'error',\n        name,\n        errors: {\n          [name]: {\n            ...e,\n            error: true,\n          },\n        },\n      })\n    },\n  }\n}\n\nexport default useRapidForm\n"],"names":["fetchReducer","state","action","type","name","errors","hasOwnProperty","data","refs","DEFAULT_PATTERN","EMAIL_PATTERN","PW_PATTERN","isEmpty","value","checked","Array","isArray","find","v","length","isValidPattern","val","pattern","obj","error","message","objError","code","match","validateValue","required","setErrors","dispatch","multiSelectValues","options","from","filter","o","selected","map","join","handleChange","e","element","currentTarget","m","multiple","n","t","r","c","p","useValidation","useCallback","ref","oninput","resetAll","useSubmitValidation","onsubmit","_","elements","useRapidForm","useReducer","ValidationHook","SubmitValidation","reset","has","target","handleSubmit","tempState","preventDefault","st","newState","validation","submitValidation","values","setValue","field","setError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AACA,IAAMA,YAAY,GAA2B,SAAvCA,YAAuC,CAACC,KAAD,EAAQC,MAAR;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAAA;;AAC5B,QAAID,MAAM,CAACE,IAAP,qBAAeH,KAAK,CAACI,MAArB,aAAe,cAAcC,cAAd,CAA6BJ,MAAM,CAACE,IAApC,CAAnB,EAA8D;AAC5D,aAAOH,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACE,IAApB,CAAP;AACD;;AACDH,IAAAA,KAAK,gBACAA,KADA;AAEHM,MAAAA,IAAI,eACCN,KAAK,CAACM,IADP,EAECL,MAAM,CAACK,IAFR,CAFD;AAMHF,MAAAA,MAAM,eACDJ,KAAK,CAACI,MADL,EAEDH,MAAM,CAACG,MAFN;AANH,MAAL;AAWD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5BF,IAAAA,KAAK,gBACAA,KADA;AAEHO,MAAAA,IAAI,eACCP,KAAK,CAACO,IADP,EAECN,MAAM,CAACK,IAFR;AAFD,MAAL;AAOD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3BF,IAAAA,KAAK,gBACAA,KADA;AAEHM,MAAAA,IAAI,eACCN,KAAK,CAACM,IADP,EAECL,MAAM,CAACK,IAFR,CAFD;AAMHF,MAAAA,MAAM,eACDJ,KAAK,CAACI,MADL,EAEDH,MAAM,CAACG,MAFN;AANH,MAAL;AAWD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3BF,IAAAA,KAAK,gBACAA,KADA;AAEHM,MAAAA,IAAI,EAAE,EAFH;AAGHF,MAAAA,MAAM,EAAE;AAHL,MAAL;AAKD;;AACD,SAAOJ,KAAP;AACD,CA/CD;;AClBA,IAAMQ,eAAe,GAAG,KAAxB;AACA,IAAMC,aAAa,GAAG,yCAAtB;AACA,IAAMC,UAAU,GAAG,uCAAnB;;AAgDA,IAAMC,OAAO,GAAY,SAAnBA,OAAmB;MAAGC,aAAAA;MAAOV,YAAAA;MAAMW,eAAAA;;AACvC,MAAIX,IAAI,MAAM,WAAN,CAAR,EAAsC;AACpC,WAAO,CAACW,OAAR;AACD;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AAAA;;AACxBA,IAAAA,KAAK,kBAAGA,KAAK,CAACI,IAAN,CAAW,UAACC,CAAD;AAAA,aAAOA,CAAC,KAAK,EAAb;AAAA,KAAX,CAAH,qBAAG,YAA6BC,MAArC;AACD;;AACD,SAAO,CAACN,KAAR;AACD,CARD;;AAUA,IAAMO,cAAc,GAAmB,SAAjCA,cAAiC,CAACC,GAAD,EAAMlB,IAAN,EAAYmB,OAAZ;AACrC,MAAIC,GAAG,GAAG;AACRC,IAAAA,KAAK,EAAE,KADC;AAERC,IAAAA,OAAO,EAAE;AAFD,GAAV;AAIA,MAAMC,QAAQ,GAAiB;AAC7BF,IAAAA,KAAK,EAAE,IADsB;AAE7BC,IAAAA,OAAO,+BAFsB;AAG7BE,IAAAA,IAAI,EAAE;AAHuB,GAA/B;;AAKA,MAAIxB,IAAI,KAAK,OAAT,IAAoB,CAACkB,GAAG,CAACO,KAAJ,CAAUN,OAAO,IAAIZ,aAArB,CAAzB,EAA8D;AAC5Da,IAAAA,GAAG,gBAAQA,GAAR,EAAgBG,QAAhB,CAAH;AACD;;AACD,MAAIvB,IAAI,KAAK,UAAT,IAAuB,CAACkB,GAAG,CAACO,KAAJ,CAAUN,OAAO,IAAIX,UAArB,CAA5B,EAA8D;AAC5DY,IAAAA,GAAG,gBAAQA,GAAR,EAAgBG,QAAhB,CAAH;AACD;;AACD,MAAIvB,IAAI,KAAK,MAAT,IAAmB,CAACkB,GAAG,CAACO,KAAJ,CAAUN,OAAO,IAAIb,eAArB,CAAxB,EAA+D;AAC7Dc,IAAAA,GAAG,gBAAQA,GAAR,EAAgBG,QAAhB,CAAH;AACD;;AACD,SAAOH,GAAP;AACD,CApBD;;AAsBA,IAAMM,aAAa,GAAkB,SAA/BA,aAA+B,CAACtB,IAAD;AACnC,MAAI,CAACA,IAAI,CAACuB,QAAV,EAAoB;AAClB,WAAO;AACLN,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AACD,MAAIb,OAAO,CAACL,IAAD,CAAX,EAAmB;AACjB,WAAO;AACLiB,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,OAAO,EAAKlB,IAAI,CAACH,IAAV,iBAFF;AAGLuB,MAAAA,IAAI,EAAE;AAHD,KAAP;AAKD;;AACD,SAAOP,cAAc,CAACb,IAAI,CAACM,KAAN,EAAaN,IAAI,CAACJ,IAAlB,EAAwBI,IAAI,CAACe,OAA7B,CAArB;AACD,CAfD;;ACzEA,IAAMS,SAAS,GAAc,SAAvBA,SAAuB,CAACxB,IAAD,EAAOyB,QAAP;;;uBACMH,aAAa,CAACtB,IAAD;MAAtCiB,uBAAAA;MAAOC,yBAAAA;MAASE,sBAAAA;;AACxB,MAAIH,KAAJ,EAAW;AAAA;;AACTQ,IAAAA,QAAQ,CAAC;AACP7B,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,IAAI,EAAEG,IAAI,CAACH,IAFJ;AAGPG,MAAAA,IAAI,qBACDA,IAAI,CAACH,IADJ,iBAEGG,IAFH,SAHG;AAQPF,MAAAA,MAAM,yBACHE,IAAI,CAACH,IADF,IACS;AACXoB,QAAAA,KAAK,EAALA,KADW;AAEXC,QAAAA,OAAO,EAAPA,OAFW;AAGXE,QAAAA,IAAI,EAAJA;AAHW,OADT;AARC,KAAD,CAAR;AAgBA,WAAO;AACLpB,MAAAA,IAAI,uBACDA,IAAI,CAACH,IADJ,iBAEGG,IAFH,UADC;AAMLF,MAAAA,MAAM,2BACHE,IAAI,CAACH,IADF,IACS;AACXqB,QAAAA,OAAO,EAAPA,OADW;AAEXE,QAAAA,IAAI,EAAJA;AAFW,OADT;AAND,KAAP;AAaD;;AACDK,EAAAA,QAAQ,CAAC;AACP7B,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,IAAI,EAAEG,IAAI,CAACH,IAFJ;AAGPG,IAAAA,IAAI,uBACDA,IAAI,CAACH,IADJ,iBAEGG,IAFH;AAHG,GAAD,CAAR;AASA,SAAO;AACLA,IAAAA,IAAI,uBACDA,IAAI,CAACH,IADJ,iBAEGG,IAFH;AADC,GAAP;AAOD,CAjDD;;ACLA,IAAM0B,iBAAiB,GAAsB,SAAvCA,iBAAuC,CAAAC,OAAO;AAClD,MAAMhB,CAAC,GAAGH,KAAK,CAACoB,IAAN,CAAWD,OAAX,EACPE,MADO,CACA,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,QAAN;AAAA,GADD,EAEPC,GAFO,CAEH,UAAAF,CAAC;AAAA,WAAIA,CAAC,CAACxB,KAAN;AAAA,GAFE,CAAV;AAGA,SAAOK,CAAC,CAACsB,IAAF,CAAO,GAAP,CAAP;AACD,CALD;;ACwCA,IAAMC,YAAY,GAAiB,SAA7BA,YAA6B,CAACC,CAAD,EAAIV,QAAJ;;;AACjC,MAAMW,OAAO,GAAGD,CAAC,QAAD,IAAAA,CAAC,CAAEE,aAAH,GAAmBF,CAAC,CAACE,aAArB,GAAqCF,CAArD;AACA,MAAMG,CAAC,GAAGF,OAAO,CAACG,QAAlB;AACA,MAAM5B,CAAC,GAAG2B,CAAC,GAAGZ,iBAAiB,CAACU,OAAD,oBAACA,OAAO,CAAET,OAAV,CAApB,GAAyCS,OAAO,CAAC9B,KAA5D;AACA,MAAMkC,CAAC,GAAGJ,OAAO,CAACvC,IAAlB;AACA,MAAM4C,CAAC,GAAGL,OAAO,CAACxC,IAAlB;AACA,MAAM8C,CAAC,GAAGN,OAAO,CAACb,QAAlB;AACA,MAAMoB,CAAC,GAAGP,OAAH,oBAAGA,OAAO,CAAE7B,OAAnB;AACA,MAAMqC,CAAC,GAAGR,OAAH,oBAAGA,OAAO,CAAErB,OAAnB;AACA,MAAMf,IAAI,sBACPwC,CADO,IACH;AACHjC,IAAAA,OAAO,EAAEoC,CADN;AAEH9C,IAAAA,IAAI,EAAE2C,CAFH;AAGHzB,IAAAA,OAAO,EAAE6B,CAHN;AAIHrB,IAAAA,QAAQ,EAAEmB,CAJP;AAKH9C,IAAAA,IAAI,EAAE6C,CALH;AAMHnC,IAAAA,KAAK,EAAEK;AANJ,GADG,QAAV;AAUA,SAAOa,SAAS,CAACxB,IAAI,CAACwC,CAAD,CAAL,EAAUf,QAAV,CAAhB;AACD,CApBD;;ACpCA,IAAMoB,aAAa,GAA2B,SAAxCA,aAAwC,CAACpB,QAAD;AAC5C,SAAOqB,iBAAW,CAChB,UAACC,GAAD;AACE,QAAIA,GAAJ,EAAS;AAAA;;AAAA,UACClD,IADD,GACiBkD,GADjB,CACClD,IADD;AAAA,UACOS,KADP,GACiByC,GADjB,CACOzC,KADP;AAEPmB,MAAAA,QAAQ,CAAC;AACP7B,QAAAA,IAAI,EAAE,QADC;AAEPI,QAAAA,IAAI,qBACDH,IADC,IACMkD,GADN;AAFG,OAAD,CAAR;;AAMA,UAAIzC,KAAJ,EAAW;AACT4B,QAAAA,YAAY,CAACa,GAAD,EAAMtB,QAAN,CAAZ;AACD;;AACDsB,MAAAA,GAAG,CAACC,OAAJ,GAAc,UAACb,CAAD;AAAA,eAA4BD,YAAY,CAACC,CAAD,EAAIV,QAAJ,CAAxC;AAAA,OAAd;AACD;AACF,GAfe,EAgBhB,CAACA,QAAD,CAhBgB,CAAlB;AAkBD,CAnBD;;ACGA,IAAMwB,QAAQ,GAAa,SAArBA,QAAqB,CAAAxB,QAAQ;AACjCA,EAAAA,QAAQ,CAAC;AACP7B,IAAAA,IAAI,EAAE;AADC,GAAD,CAAR;AAGD,CAJD;;ACFA,IAAMsD,mBAAmB,GAAqB,SAAxCA,mBAAwC,CAAAzB,QAAQ;AACpD,SAAOqB,iBAAW,CAChB,UAACC,GAAD;AACE,QAAIA,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACI,QAAJ,GAAe,UAAChB,CAAD;AACbiB,QAAAA,CAAC,CAACpB,GAAF,CAAMG,CAAC,CAACE,aAAF,CAAgBgB,QAAtB,EAAgC,UAAClB,CAAD;;;AAC9B,kCAAIA,CAAC,CAACE,aAAN,aAAI,iBAAiBxC,IAArB,EAA2B;AACzBqC,YAAAA,YAAY,CAACC,CAAD,EAAIV,QAAJ,CAAZ;AACD;AACF,SAJD;AAKD,OAND;AAOD;AACF,GAXe,EAYhB,CAACA,QAAD,CAZgB,CAAlB;AAcD,CAfD;;ACoCA,IAAM6B,YAAY,GAAiB,SAA7BA,YAA6B;oBACPC,gBAAU,CAAC9D,YAAD,EAAe;AACjDO,IAAAA,IAAI,EAAE,EAD2C;AAEjDF,IAAAA,MAAM,EAAE,EAFyC;AAGjDG,IAAAA,IAAI,EAAE;AAH2C,GAAf;MAA7BP;MAAO+B;;AAKd,MAAM+B,cAAc,GAAGX,aAAa,CAACpB,QAAD,CAApC;AACA,MAAMgC,gBAAgB,GAAGP,mBAAmB,CAACzB,QAAD,CAA5C;;AACA,MAAMiC,KAAK,GAAc,SAAnBA,KAAmB,CAACvB,CAAD;AACvB,QAAIA,CAAC,CAACE,aAAN,EAAqB;AACnBF,MAAAA,CAAC,CAACE,aAAF,CAAgBqB,KAAhB;AACD,KAFD,MAEO,IAAIN,CAAC,CAACO,GAAF,CAAMxB,CAAC,CAACyB,MAAR,EAAgB,OAAhB,CAAJ,EAA8B;AACnC;AACAzB,MAAAA,CAAC,CAACyB,MAAF,CAASF,KAAT;AACD;;AACDT,IAAAA,QAAQ,CAACxB,QAAD,CAAR;AACD,GARD;;AASA,SAAO;AACLoC,IAAAA,YAAY,EAAE,sBAAClB,CAAD;AAAA,aAAO,UAACR,CAAD;AACnB,YAAI2B,SAAS,GAAG;AACd9D,UAAAA,IAAI,EAAE,EADQ;AAEdF,UAAAA,MAAM,EAAE;AAFM,SAAhB;AAIAqC,QAAAA,CAAC,CAAC4B,cAAF;;AACAX,QAAAA,CAAC,CAACpB,GAAF,CAAMG,CAAC,CAACE,aAAF,CAAgBgB,QAAtB,EAAgC,UAAClB,CAAD;AAC9B,cAAIA,CAAC,CAACtC,IAAN,EAAY;AACV,gBAAMmE,EAAE,GAAG9B,YAAY,CAACC,CAAD,EAAIV,QAAJ,CAAvB;AACAqC,YAAAA,SAAS,GAAG;AACV9D,cAAAA,IAAI,eAAO8D,SAAS,CAAC9D,IAAjB,EAA0BgE,EAAE,CAAChE,IAA7B,CADM;AAEVF,cAAAA,MAAM,eAAOgE,SAAS,CAAChE,MAAjB,EAA4BkE,EAAE,CAAClE,MAA/B;AAFI,aAAZ;AAID;AACF,SARD;;AASA,YAAMmE,QAAQ,GAAG;AACfjE,UAAAA,IAAI,EAAEoD,CAAC,CAAC/C,OAAF,CAAUX,KAAK,CAACM,IAAhB,IAAwB8D,SAAS,CAAC9D,IAAlC,GAAyCN,KAAK,CAACM,IADtC;AAEfF,UAAAA,MAAM,EAAEsD,CAAC,CAAC/C,OAAF,CAAUX,KAAK,CAACI,MAAhB,IAA0BgE,SAAS,CAAChE,MAApC,GAA6CJ,KAAK,CAACI;AAF5C,SAAjB;AAIA,eAAO6C,CAAC,CAACsB,QAAQ,CAACjE,IAAV,EAAgBiE,QAAQ,CAACnE,MAAzB,EAAiCqC,CAAjC,CAAR;AACD,OApBa;AAAA,KADT;AAsBLrC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MAtBT;AAuBLoE,IAAAA,UAAU,EAAEV,cAvBP;AAwBLW,IAAAA,gBAAgB,EAAEV,gBAxBb;AAyBLC,IAAAA,KAAK,EAALA,KAzBK;AA0BLU,IAAAA,MAAM,EAAE1E,KAAK,CAACM,IA1BT;AA2BLqE,IAAAA,QAAQ,EAAE,kBAACxE,IAAD,EAAeS,KAAf;AACR,UAAMgE,KAAK,GAAG5E,KAAK,CAACO,IAAN,CAAWJ,IAAX,CAAd;;AACA,UAAIyE,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAAChE,KAAN,GAAcA,KAAd;AACAkB,QAAAA,SAAS,CACP;AACEjB,UAAAA,OAAO,EAAE+D,KAAK,CAAC/D,OADjB;AAEEV,UAAAA,IAAI,EAAJA,IAFF;AAGEkB,UAAAA,OAAO,EAAEuD,KAAK,CAACvD,OAHjB;AAIEQ,UAAAA,QAAQ,EAAE+C,KAAK,CAAC/C,QAJlB;AAKE3B,UAAAA,IAAI,EAAE0E,KAAK,CAAC1E,IALd;AAMEU,UAAAA,KAAK,EAALA;AANF,SADO,EASPmB,QATO,CAAT;AAWD;AACF,KA3CI;AA4CL8C,IAAAA,QAAQ,EAAE,kBAACtD,KAAD;;;UACApB,OAAeoB,MAAfpB;UAASsC,kCAAMlB;;AACvBQ,MAAAA,QAAQ,CAAC;AACP7B,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,IAAI,EAAJA,IAFO;AAGPC,QAAAA,MAAM,yBACHD,IADG,iBAECsC,CAFD;AAGFlB,UAAAA,KAAK,EAAE;AAHL;AAHC,OAAD,CAAR;AAUD;AAxDI,GAAP;AA0DD,CA3ED;;;;"}