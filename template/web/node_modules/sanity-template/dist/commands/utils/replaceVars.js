"use strict";
var Entities = require('html-entities');
var isPlainObject = require('lodash').isPlainObject;
var Mustache = require('mustache');
var path = require('path');
var entities = new Entities.AllHtmlEntities();
function deepRenderStrings(value, templateVars) {
    var name = typeof value;
    if (name === 'string') {
        var renderedString = Mustache.render(value, templateVars, {}, ['<#<', '>#>']);
        return entities.decode(renderedString);
    }
    if (name === 'boolean' || name === 'number') {
        return value;
    }
    if (Array.isArray(value)) {
        return value.map(function (item) { return deepRenderStrings(item, templateVars); });
    }
    if (isPlainObject(value)) {
        var renderedObject_1 = {};
        Object.keys(value).forEach(function (key) {
            renderedObject_1[key] = deepRenderStrings(value[key], templateVars);
        });
        return renderedObject_1;
    }
}
function replaceVars(filePath, content, templateVars) {
    var isJson = path.extname(filePath) === '.json';
    if (isJson) {
        var renderedJson = deepRenderStrings(JSON.parse(content), templateVars);
        return JSON.stringify(renderedJson, null, 2);
    }
    return Mustache.render(content, templateVars, {}, ['<#<', '>#>']);
}
module.exports = {
    replaceVars: replaceVars
};
