"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
exports.__esModule = true;
exports.parse = exports.toCurrent = exports.v1toV2 = void 0;
var v1 = __importStar(require("./v1"));
var v2 = __importStar(require("./v2"));
var convertDeployments = function (deployments) {
    return {
        provider: 'netlify',
        sites: deployments.map(function (v1Deployment) {
            return {
                id: v1Deployment.id,
                type: v1Deployment.type,
                title: v1Deployment.title,
                description: v1Deployment.description,
                previewMedia: v1Deployment.previewMedia,
                buildSettings: v1Deployment.provider.config,
                dir: v1Deployment.dir,
                requiredCorsOrigins: v1Deployment.requiredCorsOrigins,
                requiredTokens: v1Deployment.requiredTokens,
                requirements: v1Deployment.provider.requirements
            };
        })
    };
};
function v1toV2(template) {
    var deployments = template.deployments, rest = __rest(template, ["deployments"]);
    return __assign(__assign({}, rest), { version: 2, deployment: convertDeployments(deployments) });
}
exports.v1toV2 = v1toV2;
function toCurrent(template) {
    return template.version === 2 ? template : v1toV2(template);
}
exports.toCurrent = toCurrent;
function parse(allegedTemplate) {
    var version = allegedTemplate === null || allegedTemplate === void 0 ? void 0 : allegedTemplate.version;
    if (typeof version !== 'number') {
        throw new Error('Invalid template manifest input: Version qualifier is missing or not a number');
    }
    if (version === 0 || version === 1) {
        return v1.parse(allegedTemplate);
    }
    if (version === 2) {
        return v2.parse(allegedTemplate);
    }
    throw new Error("Invalid template manifest input: Unsupported version " + version);
}
exports.parse = parse;
