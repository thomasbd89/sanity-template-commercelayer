import * as z from 'zod';
export declare const vercelDeployment: z.ZodObject<{
    provider: z.ZodLiteral<"vercel">;
    corsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        origin: z.ZodString;
        allowCredentials: z.ZodBoolean;
    }, {
        strict: true;
    }, {
        origin: string;
        allowCredentials: boolean;
    }>>, z.ZodUndefined]>;
    deployHook: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<true>, z.ZodObject<{
        name: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        envVars: z.ZodUnion<[z.ZodArray<z.ZodString>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        name?: string | undefined;
        envVars?: string[] | undefined;
    }>]>, z.ZodUndefined]>;
    tokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
    } & {
        envVar: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        envVar?: string | undefined;
        label: string;
        role: "deploy-studio" | "read" | "write";
    }>>, z.ZodUndefined]>;
    envVars: z.ZodUnion<[z.ZodObject<{
        projectId: z.ZodArray<z.ZodString>;
        dataset: z.ZodArray<z.ZodString>;
    }, {
        strict: true;
    }, {
        projectId: string[];
        dataset: string[];
    }>, z.ZodUndefined]>;
    studio: z.ZodUnion<[z.ZodObject<{
        basePath: z.ZodString;
    }, {
        strict: true;
    }, {
        basePath: string;
    }>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    studio?: {
        basePath: string;
    } | undefined;
    envVars?: {
        projectId: string[];
        dataset: string[];
    } | undefined;
    corsOrigins?: {
        origin: string;
        allowCredentials: boolean;
    }[] | undefined;
    deployHook?: true | {
        name?: string | undefined;
        envVars?: string[] | undefined;
    } | undefined;
    tokens?: {
        envVar?: string | undefined;
        label: string;
        role: "deploy-studio" | "read" | "write";
    }[] | undefined;
    provider: "vercel";
}>;
export declare type VercelDeployment = z.infer<typeof vercelDeployment>;
