import * as z from 'zod';
export declare const providerRequirement: z.ZodLiteral<"build-hook">;
export declare type ProviderRequirement = z.infer<typeof providerRequirement>;
declare const netlifySite: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
    title: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    dir: z.ZodString;
    buildSettings: z.ZodUnion<[z.ZodObject<{
        base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        base?: string | undefined;
        dir?: string | undefined;
        cmd?: string | undefined;
    }>, z.ZodUndefined]>;
    requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
        label: z.ZodString;
    }, {
        strict: true;
    }, {
        label: string;
        role: "deploy-studio" | "read" | "write";
    }>>, z.ZodUndefined]>;
    requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
    previewMedia: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"image">;
        alt: z.ZodString;
        src: z.ZodString;
    }, {
        strict: true;
    }, {
        type: "image";
        alt: string;
        src: string;
    }>, z.ZodUndefined]>;
    requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        origin: z.ZodString;
        allowCredentials: z.ZodBoolean;
    }, {
        strict: true;
    }, {
        origin: string;
        allowCredentials: boolean;
    }>>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    requirements?: "build-hook"[] | undefined;
    description?: string | undefined;
    previewMedia?: {
        type: "image";
        alt: string;
        src: string;
    } | undefined;
    requiredCorsOrigins?: {
        origin: string;
        allowCredentials: boolean;
    }[] | undefined;
    requiredTokens?: {
        label: string;
        role: "deploy-studio" | "read" | "write";
    }[] | undefined;
    buildSettings?: {
        base?: string | undefined;
        dir?: string | undefined;
        cmd?: string | undefined;
    } | undefined;
    dir: string;
    title: string;
    type: "studio" | "web";
    id: string;
}>;
export declare type NetlifySite = z.infer<typeof netlifySite>;
export declare const netlifyDeployment: z.ZodObject<{
    provider: z.ZodLiteral<"netlify">;
    sites: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
        title: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        dir: z.ZodString;
        buildSettings: z.ZodUnion<[z.ZodObject<{
            base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        }>, z.ZodUndefined]>;
        requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
            label: z.ZodString;
        }, {
            strict: true;
        }, {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }>>, z.ZodUndefined]>;
        requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
        previewMedia: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"image">;
            alt: z.ZodString;
            src: z.ZodString;
        }, {
            strict: true;
        }, {
            type: "image";
            alt: string;
            src: string;
        }>, z.ZodUndefined]>;
        requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            origin: z.ZodString;
            allowCredentials: z.ZodBoolean;
        }, {
            strict: true;
        }, {
            origin: string;
            allowCredentials: boolean;
        }>>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        requirements?: "build-hook"[] | undefined;
        description?: string | undefined;
        previewMedia?: {
            type: "image";
            alt: string;
            src: string;
        } | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        buildSettings?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
    }>>;
}, {
    strict: true;
}, {
    provider: "netlify";
    sites: {
        requirements?: "build-hook"[] | undefined;
        description?: string | undefined;
        previewMedia?: {
            type: "image";
            alt: string;
            src: string;
        } | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        buildSettings?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
    }[];
}>;
export declare type NetlifyDeployment = z.infer<typeof netlifyDeployment>;
export {};
