import * as z from 'zod';
import { templateTechnology } from './common';
export declare const supportedDeploymentProvider: z.ZodUnion<[z.ZodObject<{
    provider: z.ZodLiteral<"netlify">;
    sites: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
        title: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        dir: z.ZodString;
        buildSettings: z.ZodUnion<[z.ZodObject<{
            base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        }>, z.ZodUndefined]>;
        requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
            label: z.ZodString;
        }, {
            strict: true;
        }, {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }>>, z.ZodUndefined]>;
        requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
        previewMedia: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"image">;
            alt: z.ZodString;
            src: z.ZodString;
        }, {
            strict: true;
        }, {
            type: "image";
            alt: string;
            src: string;
        }>, z.ZodUndefined]>;
        requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            origin: z.ZodString;
            allowCredentials: z.ZodBoolean;
        }, {
            strict: true;
        }, {
            origin: string;
            allowCredentials: boolean;
        }>>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        requirements?: "build-hook"[] | undefined;
        description?: string | undefined;
        previewMedia?: {
            type: "image";
            alt: string;
            src: string;
        } | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        buildSettings?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
    }>>;
}, {
    strict: true;
}, {
    provider: "netlify";
    sites: {
        requirements?: "build-hook"[] | undefined;
        description?: string | undefined;
        previewMedia?: {
            type: "image";
            alt: string;
            src: string;
        } | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        buildSettings?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
    }[];
}>, z.ZodObject<{
    provider: z.ZodLiteral<"vercel">;
    corsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        origin: z.ZodString;
        allowCredentials: z.ZodBoolean;
    }, {
        strict: true;
    }, {
        origin: string;
        allowCredentials: boolean;
    }>>, z.ZodUndefined]>;
    deployHook: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<true>, z.ZodObject<{
        name: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        envVars: z.ZodUnion<[z.ZodArray<z.ZodString>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        name?: string | undefined;
        envVars?: string[] | undefined;
    }>]>, z.ZodUndefined]>;
    tokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
    } & {
        envVar: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        envVar?: string | undefined;
        label: string;
        role: "deploy-studio" | "read" | "write";
    }>>, z.ZodUndefined]>;
    envVars: z.ZodUnion<[z.ZodObject<{
        projectId: z.ZodArray<z.ZodString>;
        dataset: z.ZodArray<z.ZodString>;
    }, {
        strict: true;
    }, {
        projectId: string[];
        dataset: string[];
    }>, z.ZodUndefined]>;
    studio: z.ZodUnion<[z.ZodObject<{
        basePath: z.ZodString;
    }, {
        strict: true;
    }, {
        basePath: string;
    }>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    studio?: {
        basePath: string;
    } | undefined;
    envVars?: {
        projectId: string[];
        dataset: string[];
    } | undefined;
    corsOrigins?: {
        origin: string;
        allowCredentials: boolean;
    }[] | undefined;
    deployHook?: true | {
        name?: string | undefined;
        envVars?: string[] | undefined;
    } | undefined;
    tokens?: {
        envVar?: string | undefined;
        label: string;
        role: "deploy-studio" | "read" | "write";
    }[] | undefined;
    provider: "vercel";
}>]>;
export declare type SupportedDeploymentProvider = z.infer<typeof supportedDeploymentProvider>;
export declare type TemplateTechnology = z.infer<typeof templateTechnology>;
export declare const templateManifest: z.ZodObject<{
    version: z.ZodLiteral<2>;
    title: z.ZodString;
    description: z.ZodString;
    demoUrl: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    previewMedia: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"image">;
        alt: z.ZodString;
        src: z.ZodString;
    }, {
        strict: true;
    }, {
        type: "image";
        alt: string;
        src: string;
    }>, z.ZodUndefined]>;
    deployment: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"netlify">;
        sites: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
            title: z.ZodString;
            description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            dir: z.ZodString;
            buildSettings: z.ZodUnion<[z.ZodObject<{
                base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
                dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
                cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            }, {
                strict: true;
            }, {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            }>, z.ZodUndefined]>;
            requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
                role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
                label: z.ZodString;
            }, {
                strict: true;
            }, {
                label: string;
                role: "deploy-studio" | "read" | "write";
            }>>, z.ZodUndefined]>;
            requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
            previewMedia: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"image">;
                alt: z.ZodString;
                src: z.ZodString;
            }, {
                strict: true;
            }, {
                type: "image";
                alt: string;
                src: string;
            }>, z.ZodUndefined]>;
            requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
                origin: z.ZodString;
                allowCredentials: z.ZodBoolean;
            }, {
                strict: true;
            }, {
                origin: string;
                allowCredentials: boolean;
            }>>, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            requirements?: "build-hook"[] | undefined;
            description?: string | undefined;
            previewMedia?: {
                type: "image";
                alt: string;
                src: string;
            } | undefined;
            requiredCorsOrigins?: {
                origin: string;
                allowCredentials: boolean;
            }[] | undefined;
            requiredTokens?: {
                label: string;
                role: "deploy-studio" | "read" | "write";
            }[] | undefined;
            buildSettings?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            dir: string;
            title: string;
            type: "studio" | "web";
            id: string;
        }>>;
    }, {
        strict: true;
    }, {
        provider: "netlify";
        sites: {
            requirements?: "build-hook"[] | undefined;
            description?: string | undefined;
            previewMedia?: {
                type: "image";
                alt: string;
                src: string;
            } | undefined;
            requiredCorsOrigins?: {
                origin: string;
                allowCredentials: boolean;
            }[] | undefined;
            requiredTokens?: {
                label: string;
                role: "deploy-studio" | "read" | "write";
            }[] | undefined;
            buildSettings?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            dir: string;
            title: string;
            type: "studio" | "web";
            id: string;
        }[];
    }>, z.ZodObject<{
        provider: z.ZodLiteral<"vercel">;
        corsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            origin: z.ZodString;
            allowCredentials: z.ZodBoolean;
        }, {
            strict: true;
        }, {
            origin: string;
            allowCredentials: boolean;
        }>>, z.ZodUndefined]>;
        deployHook: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<true>, z.ZodObject<{
            name: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            envVars: z.ZodUnion<[z.ZodArray<z.ZodString>, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            name?: string | undefined;
            envVars?: string[] | undefined;
        }>]>, z.ZodUndefined]>;
        tokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            label: z.ZodString;
            role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
        } & {
            envVar: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            envVar?: string | undefined;
            label: string;
            role: "deploy-studio" | "read" | "write";
        }>>, z.ZodUndefined]>;
        envVars: z.ZodUnion<[z.ZodObject<{
            projectId: z.ZodArray<z.ZodString>;
            dataset: z.ZodArray<z.ZodString>;
        }, {
            strict: true;
        }, {
            projectId: string[];
            dataset: string[];
        }>, z.ZodUndefined]>;
        studio: z.ZodUnion<[z.ZodObject<{
            basePath: z.ZodString;
        }, {
            strict: true;
        }, {
            basePath: string;
        }>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        studio?: {
            basePath: string;
        } | undefined;
        envVars?: {
            projectId: string[];
            dataset: string[];
        } | undefined;
        corsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        deployHook?: true | {
            name?: string | undefined;
            envVars?: string[] | undefined;
        } | undefined;
        tokens?: {
            envVar?: string | undefined;
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        provider: "vercel";
    }>]>, z.ZodUndefined]>;
    technologies: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        url: z.ZodString;
    }, {
        strict: true;
    }, {
        url: string;
        name: string;
        id: string;
    }>>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    previewMedia?: {
        type: "image";
        alt: string;
        src: string;
    } | undefined;
    technologies?: {
        url: string;
        name: string;
        id: string;
    }[] | undefined;
    demoUrl?: string | undefined;
    deployment?: {
        studio?: {
            basePath: string;
        } | undefined;
        envVars?: {
            projectId: string[];
            dataset: string[];
        } | undefined;
        corsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        deployHook?: true | {
            name?: string | undefined;
            envVars?: string[] | undefined;
        } | undefined;
        tokens?: {
            envVar?: string | undefined;
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        provider: "vercel";
    } | {
        provider: "netlify";
        sites: {
            requirements?: "build-hook"[] | undefined;
            description?: string | undefined;
            previewMedia?: {
                type: "image";
                alt: string;
                src: string;
            } | undefined;
            requiredCorsOrigins?: {
                origin: string;
                allowCredentials: boolean;
            }[] | undefined;
            requiredTokens?: {
                label: string;
                role: "deploy-studio" | "read" | "write";
            }[] | undefined;
            buildSettings?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            dir: string;
            title: string;
            type: "studio" | "web";
            id: string;
        }[];
    } | undefined;
    title: string;
    description: string;
    version: 2;
}>;
export declare type TemplateManifest = z.infer<typeof templateManifest>;
