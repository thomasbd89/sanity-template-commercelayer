import * as z from 'zod';
export declare const templateTechnology: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    url: z.ZodString;
}, {
    strict: true;
}, {
    url: string;
    name: string;
    id: string;
}>;
export declare type TemplateTechnology = z.infer<typeof templateTechnology>;
export declare const templateImageMedia: z.ZodObject<{
    type: z.ZodLiteral<"image">;
    alt: z.ZodString;
    src: z.ZodString;
}, {
    strict: true;
}, {
    type: "image";
    alt: string;
    src: string;
}>;
export declare type TemplateImageMedia = z.infer<typeof templateImageMedia>;
export declare const templateMedia: z.ZodObject<{
    type: z.ZodLiteral<"image">;
    alt: z.ZodString;
    src: z.ZodString;
}, {
    strict: true;
}, {
    type: "image";
    alt: string;
    src: string;
}>;
export declare type TemplateMedia = z.infer<typeof templateMedia>;
export declare const tokenSpec: z.ZodObject<{
    role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
    label: z.ZodString;
}, {
    strict: true;
}, {
    label: string;
    role: "deploy-studio" | "read" | "write";
}>;
export declare type TokenSpec = z.infer<typeof tokenSpec>;
export declare const providerRequirement: z.ZodLiteral<"build-hook">;
export declare const sanityCorsOrigin: z.ZodObject<{
    origin: z.ZodString;
    allowCredentials: z.ZodBoolean;
}, {
    strict: true;
}, {
    origin: string;
    allowCredentials: boolean;
}>;
export declare type SanityCorsOrigin = z.infer<typeof sanityCorsOrigin>;
export declare const netlify: z.ZodObject<{
    name: z.ZodLiteral<"netlify">;
    config: z.ZodUnion<[z.ZodObject<{
        base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        base?: string | undefined;
        dir?: string | undefined;
        cmd?: string | undefined;
    }>, z.ZodUndefined]>;
    requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    config?: {
        base?: string | undefined;
        dir?: string | undefined;
        cmd?: string | undefined;
    } | undefined;
    requirements?: "build-hook"[] | undefined;
    name: "netlify";
}>;
export declare type NetlifyDeployment = z.infer<typeof netlify>;
export declare const deployment: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
    title: z.ZodString;
    description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
    dir: z.ZodString;
    provider: z.ZodObject<{
        name: z.ZodLiteral<"netlify">;
        config: z.ZodUnion<[z.ZodObject<{
            base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        }>, z.ZodUndefined]>;
        requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        config?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        requirements?: "build-hook"[] | undefined;
        name: "netlify";
    }>;
    previewMedia: z.ZodObject<{
        type: z.ZodLiteral<"image">;
        alt: z.ZodString;
        src: z.ZodString;
    }, {
        strict: true;
    }, {
        type: "image";
        alt: string;
        src: string;
    }>;
    requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        origin: z.ZodString;
        allowCredentials: z.ZodBoolean;
    }, {
        strict: true;
    }, {
        origin: string;
        allowCredentials: boolean;
    }>>, z.ZodUndefined]>;
    requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
        label: z.ZodString;
    }, {
        strict: true;
    }, {
        label: string;
        role: "deploy-studio" | "read" | "write";
    }>>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    description?: string | undefined;
    requiredCorsOrigins?: {
        origin: string;
        allowCredentials: boolean;
    }[] | undefined;
    requiredTokens?: {
        label: string;
        role: "deploy-studio" | "read" | "write";
    }[] | undefined;
    dir: string;
    title: string;
    type: "studio" | "web";
    id: string;
    provider: {
        config?: {
            base?: string | undefined;
            dir?: string | undefined;
            cmd?: string | undefined;
        } | undefined;
        requirements?: "build-hook"[] | undefined;
        name: "netlify";
    };
    previewMedia: {
        type: "image";
        alt: string;
        src: string;
    };
}>;
export declare type Deployment = z.infer<typeof deployment>;
export declare const templateManifest: z.ZodObject<{
    version: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<0>]>;
    title: z.ZodString;
    description: z.ZodString;
    previewMedia: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"image">;
        alt: z.ZodString;
        src: z.ZodString;
    }, {
        strict: true;
    }, {
        type: "image";
        alt: string;
        src: string;
    }>, z.ZodUndefined]>;
    deployments: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"studio">, z.ZodLiteral<"web">]>;
        title: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
        dir: z.ZodString;
        provider: z.ZodObject<{
            name: z.ZodLiteral<"netlify">;
            config: z.ZodUnion<[z.ZodObject<{
                base: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
                dir: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
                cmd: z.ZodUnion<[z.ZodString, z.ZodUndefined]>;
            }, {
                strict: true;
            }, {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            }>, z.ZodUndefined]>;
            requirements: z.ZodUnion<[z.ZodArray<z.ZodLiteral<"build-hook">>, z.ZodUndefined]>;
        }, {
            strict: true;
        }, {
            config?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            requirements?: "build-hook"[] | undefined;
            name: "netlify";
        }>;
        previewMedia: z.ZodObject<{
            type: z.ZodLiteral<"image">;
            alt: z.ZodString;
            src: z.ZodString;
        }, {
            strict: true;
        }, {
            type: "image";
            alt: string;
            src: string;
        }>;
        requiredCorsOrigins: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            origin: z.ZodString;
            allowCredentials: z.ZodBoolean;
        }, {
            strict: true;
        }, {
            origin: string;
            allowCredentials: boolean;
        }>>, z.ZodUndefined]>;
        requiredTokens: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            role: z.ZodUnion<[z.ZodLiteral<"deploy-studio">, z.ZodLiteral<"read">, z.ZodLiteral<"write">]>;
            label: z.ZodString;
        }, {
            strict: true;
        }, {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }>>, z.ZodUndefined]>;
    }, {
        strict: true;
    }, {
        description?: string | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
        provider: {
            config?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            requirements?: "build-hook"[] | undefined;
            name: "netlify";
        };
        previewMedia: {
            type: "image";
            alt: string;
            src: string;
        };
    }>>;
    technologies: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        url: z.ZodString;
    }, {
        strict: true;
    }, {
        url: string;
        name: string;
        id: string;
    }>>, z.ZodUndefined]>;
}, {
    strict: true;
}, {
    previewMedia?: {
        type: "image";
        alt: string;
        src: string;
    } | undefined;
    technologies?: {
        url: string;
        name: string;
        id: string;
    }[] | undefined;
    title: string;
    description: string;
    deployments: {
        description?: string | undefined;
        requiredCorsOrigins?: {
            origin: string;
            allowCredentials: boolean;
        }[] | undefined;
        requiredTokens?: {
            label: string;
            role: "deploy-studio" | "read" | "write";
        }[] | undefined;
        dir: string;
        title: string;
        type: "studio" | "web";
        id: string;
        provider: {
            config?: {
                base?: string | undefined;
                dir?: string | undefined;
                cmd?: string | undefined;
            } | undefined;
            requirements?: "build-hook"[] | undefined;
            name: "netlify";
        };
        previewMedia: {
            type: "image";
            alt: string;
            src: string;
        };
    }[];
    version: 0 | 1;
}>;
export declare type TemplateManifest = z.infer<typeof templateManifest>;
