{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport contentfulApi from './contentful/api';\nimport datoApi from './dato/api';\nimport sanityApi from './sanity/api';\nexport const cmsList = () => {\n  const {\n    BUILD_CMS\n  } = process.env;\n  return BUILD_CMS;\n};\nexport const cmsFunctions = _objectSpread(_objectSpread(_objectSpread({}, contentfulApi), datoApi), sanityApi);","map":{"version":3,"sources":["/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/template/web/utils/cms.ts"],"names":["contentfulApi","datoApi","sanityApi","cmsList","BUILD_CMS","process","env","cmsFunctions"],"mappings":";;;;;;AACA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAgBC,OAAO,CAACC,GAA9B;AACA,SAAOF,SAAP;AACD,CAHM;AAKP,OAAO,MAAMG,YAAiC,iDACzCP,aADyC,GAEzCC,OAFyC,GAGzCC,SAHyC,CAAvC","sourcesContent":["import { EnvObject } from '../typings/env'\nimport contentfulApi from './contentful/api'\nimport datoApi from './dato/api'\nimport sanityApi from './sanity/api'\n\nexport const cmsList = () => {\n  const { BUILD_CMS } = process.env as EnvObject\n  return BUILD_CMS\n}\n\nexport const cmsFunctions: Record<string, any> = {\n  ...contentfulApi,\n  ...datoApi,\n  ...sanityApi,\n}\n"]},"metadata":{},"sourceType":"module"}