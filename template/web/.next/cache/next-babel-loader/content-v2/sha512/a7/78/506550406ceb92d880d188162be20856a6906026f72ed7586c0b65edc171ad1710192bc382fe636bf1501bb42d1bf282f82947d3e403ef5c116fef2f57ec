{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/template/web/pages/[countryCode]/[lang]/index.tsx\";\nimport React, { useState } from 'react';\nimport Layout from '@components/Layout';\nimport locale from '@locale/index';\nimport { InstantSearch, Configure } from 'react-instantsearch-dom';\nimport { searchClient } from '@utils/algolia';\nimport CustomPagination from '@components/CustomPagination';\nimport { CommerceLayer, OrderContainer, OrderStorage } from '@commercelayer/react-components';\nimport { useGetToken } from '@hooks/GetToken';\nimport { parseLanguageCode, parseLocale } from '@utils/parser';\nimport _ from 'lodash';\nimport { useRouter } from 'next/router';\nimport { cmsFunctions } from '@utils/cms';\nimport Taxonomies from '@components/Taxonomies';\nimport queryString from 'query-string';\nimport CustomSearchBox from '@components/CustomSearchBox';\nimport CustomRefinementList from '@components/CustomRefinementList';\nimport CustomSortBy from '@components/CustomSortBy';\nimport CustomHits from '@components/CustomHits';\n\nconst FilterPage = ({\n  country,\n  taxonomies,\n  clientId,\n  endpoint,\n  searchEngine,\n  buildLanguages = [],\n  countries = [],\n  lang,\n  cms\n}) => {\n  const {\n    query: {\n      countryCode,\n      searchBy,\n      lang: currentLang\n    },\n    push,\n    asPath\n  } = useRouter();\n  const parseUrl = queryString.parseUrl(asPath);\n\n  const showSearch = _.has(parseUrl.query, 'searchBy');\n\n  const {\n    0: activeAlgolia,\n    1: setActiveAlgolia\n  } = useState(showSearch);\n  const code = country === null || country === void 0 ? void 0 : country.code.toLowerCase();\n  const marketId = (country === null || country === void 0 ? void 0 : country.marketId) || 'all';\n  const token = useGetToken({\n    clientId,\n    endpoint,\n    scope: `market:${marketId}`,\n    countryCode: countryCode\n  });\n  const indexLang = parseLocale(currentLang, '-', '-');\n  const indexName = `${cms}_${code}_${indexLang}`;\n\n  const handleActiveAlgolia = () => {\n    setActiveAlgolia(!activeAlgolia);\n    !!searchBy ? push(`/${countryCode}/${lang}`) : push(`/${countryCode}/${lang}?searchBy=${searchEngine}`);\n  };\n\n  const languageCode = parseLanguageCode(lang, 'toLowerCase', true);\n  return !endpoint ? null : /*#__PURE__*/_jsxDEV(CommerceLayer, {\n    accessToken: token,\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(OrderStorage, {\n      persistKey: `order-${code}`,\n      children: /*#__PURE__*/_jsxDEV(OrderContainer, {\n        attributes: {\n          languageCode\n        },\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          title: \"Contentful NextJS Demo by Commerce Layer\",\n          buildLanguages: buildLanguages,\n          countries: countries,\n          lang: lang,\n          cms: cms,\n          children: showSearch ? /*#__PURE__*/_jsxDEV(InstantSearch, {\n            searchClient: searchClient,\n            indexName: indexName,\n            children: [/*#__PURE__*/_jsxDEV(Configure, {\n              facetingAfterDistinct: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 lg:px-0 container mx-auto max-w-screen-lg flex flex-wrap sm:flex-nowrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink md:flex-shrink-0 md:pr-4 pb-4 w-full sm:w-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center mb-5 mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    \"aria-pressed\": \"false\",\n                    \"aria-labelledby\": \"toggleLabel\",\n                    className: `${activeAlgolia ? 'bg-blue-500' : 'bg-gray-200'} relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`,\n                    onClick: handleActiveAlgolia,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"sr-only\",\n                      children: \"Enable algolia\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"aria-hidden\": \"true\",\n                      className: `${activeAlgolia ? 'translate-x-5' : 'translate-x-0'} inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-3\",\n                    id: \"toggleLabel\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/algolia.svg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-gray-500 text-xs font-medium uppercase tracking-wide mb-4\",\n                  children: [locale[lang].categories, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CustomRefinementList, {\n                  attribute: locale[lang].algoliaCategory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-5 md:my-0 sm:ml-10 lg:col-span-2 w-full\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row flex-wrap md:flex-nowrap items-center justify-center px-4 md:px-0 md:justify-between mt-1 mb-3.5 space-x-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-full lg:w-9/12\",\n                    children: /*#__PURE__*/_jsxDEV(CustomSearchBox, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-row items-center space-x-5 w-full md:w-1/2 lg:w-auto mt-1 md:mt-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-shrink-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"text-gray-500 text-xs font-medium uppercase tracking-wide\",\n                        children: [locale[lang].sortBy, \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-full flex-shrink\",\n                      children: /*#__PURE__*/_jsxDEV(CustomSortBy, {\n                        defaultRefinement: indexName,\n                        items: [{\n                          value: `${indexName}`,\n                          label: locale[lang].featured\n                        }, {\n                          value: `${indexName}_price_desc`,\n                          label: locale[lang].highestPrice\n                        }, {\n                          value: `${indexName}_price_asc`,\n                          label: locale[lang].lowestPrice\n                        }]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CustomHits, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-10\",\n                  children: /*#__PURE__*/_jsxDEV(CustomPagination, {\n                    showFirst: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Taxonomies, {\n            cms: cms,\n            taxonomies: taxonomies,\n            algoliaStatus: activeAlgolia,\n            activeAlgolia: handleActiveAlgolia,\n            searchEngine: !_.isEmpty(searchEngine)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FilterPage;\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: true\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const {\n    BUILD_COUNTRY,\n    CL_CLIENT_ID,\n    CL_ENDPOINT,\n    BUILD_LANGUAGES,\n    BUILD_CMS,\n    BUILD_SEARCH_ENGINE\n  } = process.env;\n\n  try {\n    const lang = params === null || params === void 0 ? void 0 : params.lang;\n    const cms = BUILD_CMS;\n    const countryCode = (params === null || params === void 0 ? void 0 : params.countryCode) || (BUILD_COUNTRY === null || BUILD_COUNTRY === void 0 ? void 0 : BUILD_COUNTRY.toLowerCase());\n    const countries = _.has(cmsFunctions, `${cms}AllCountries`) ? await cmsFunctions[`${cms}AllCountries`](lang) : {};\n\n    const buildLanguages = _.compact(BUILD_LANGUAGES === null || BUILD_LANGUAGES === void 0 ? void 0 : BUILD_LANGUAGES.split(',').map(l => {\n      const country = countries.find(country => country.code === parseLanguageCode(l));\n      return !_.isEmpty(country) ? country : null;\n    }));\n\n    const country = countries.find(country => country.code.toLowerCase() === countryCode);\n    const taxonomies = _.has(cmsFunctions, `${cms}AllTaxonomies`) ? await cmsFunctions[`${cms}AllTaxonomies`](country.catalog.id, lang) : {};\n    return {\n      props: {\n        country,\n        countries,\n        taxonomies,\n        clientId: CL_CLIENT_ID,\n        endpoint: CL_ENDPOINT,\n        buildLanguages,\n        searchEngine: BUILD_SEARCH_ENGINE || '',\n        lang,\n        cms\n      },\n      revalidate: 60\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      props: {\n        clientId: CL_CLIENT_ID,\n        endpoint: CL_ENDPOINT,\n        errors: err.message\n      },\n      revalidate: 60\n    };\n  }\n};","map":{"version":3,"sources":["/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/template/web/pages/[countryCode]/[lang]/index.tsx"],"names":["React","useState","Layout","locale","InstantSearch","Configure","searchClient","CustomPagination","CommerceLayer","OrderContainer","OrderStorage","useGetToken","parseLanguageCode","parseLocale","_","useRouter","cmsFunctions","Taxonomies","queryString","CustomSearchBox","CustomRefinementList","CustomSortBy","CustomHits","FilterPage","country","taxonomies","clientId","endpoint","searchEngine","buildLanguages","countries","lang","cms","query","countryCode","searchBy","currentLang","push","asPath","parseUrl","showSearch","has","activeAlgolia","setActiveAlgolia","code","toLowerCase","marketId","token","scope","indexLang","indexName","handleActiveAlgolia","languageCode","categories","algoliaCategory","sortBy","value","label","featured","highestPrice","lowestPrice","isEmpty","getStaticPaths","paths","fallback","getStaticProps","params","BUILD_COUNTRY","CL_CLIENT_ID","CL_ENDPOINT","BUILD_LANGUAGES","BUILD_CMS","BUILD_SEARCH_ENGINE","process","env","compact","split","map","l","find","catalog","id","props","revalidate","err","console","error","errors","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Layout from '@components/Layout'\nimport { GetStaticPaths, GetStaticProps, NextPage } from 'next'\nimport locale from '@locale/index'\nimport { InstantSearch, Configure } from 'react-instantsearch-dom'\nimport { searchClient } from '@utils/algolia'\nimport CustomPagination from '@components/CustomPagination'\nimport {\n  CommerceLayer,\n  OrderContainer,\n  OrderStorage,\n} from '@commercelayer/react-components'\nimport { useGetToken } from '@hooks/GetToken'\nimport { parseLanguageCode, parseLocale } from '@utils/parser'\nimport _ from 'lodash'\nimport { useRouter } from 'next/router'\nimport { cmsFunctions } from '@utils/cms'\nimport Taxonomies from '@components/Taxonomies'\nimport queryString from 'query-string'\nimport CustomSearchBox from '@components/CustomSearchBox'\nimport CustomRefinementList from '@components/CustomRefinementList'\nimport CustomSortBy from '@components/CustomSortBy'\nimport CustomHits from '@components/CustomHits'\nimport { Country } from '@typings/models'\n\ntype Props = {\n  lang: string\n  cms: string\n  taxonomies: any\n  country: {\n    code: string\n    defaultLocale: string\n    marketId: string\n  }\n  clientId: string\n  endpoint: string\n  searchEngine: string\n  buildLanguages?: Country[]\n  countries?: any[]\n}\n\nconst FilterPage: NextPage<Props> = ({\n  country,\n  taxonomies,\n  clientId,\n  endpoint,\n  searchEngine,\n  buildLanguages = [],\n  countries = [],\n  lang,\n  cms,\n}) => {\n  const {\n    query: { countryCode, searchBy, lang: currentLang },\n    push,\n    asPath,\n  } = useRouter()\n  const parseUrl = queryString.parseUrl(asPath)\n  const showSearch = _.has(parseUrl.query, 'searchBy')\n  const [activeAlgolia, setActiveAlgolia] = useState(showSearch)\n  const code = country?.code.toLowerCase()\n  const marketId = country?.marketId || 'all'\n  const token = useGetToken({\n    clientId,\n    endpoint,\n    scope: `market:${marketId}`,\n    countryCode: countryCode as string,\n  })\n  const indexLang = parseLocale(currentLang as string, '-', '-')\n  const indexName = `${cms}_${code}_${indexLang}`\n  const handleActiveAlgolia = () => {\n    setActiveAlgolia(!activeAlgolia)\n    !!searchBy\n      ? push(`/${countryCode}/${lang}`)\n      : push(`/${countryCode}/${lang}?searchBy=${searchEngine}`)\n  }\n  const languageCode = parseLanguageCode(lang, 'toLowerCase', true)\n  return !endpoint ? null : (\n    <CommerceLayer accessToken={token} endpoint={endpoint}>\n      <OrderStorage persistKey={`order-${code}`}>\n        <OrderContainer attributes={{ languageCode }}>\n          <Layout\n            title=\"Contentful NextJS Demo by Commerce Layer\"\n            buildLanguages={buildLanguages}\n            countries={countries}\n            lang={lang}\n            cms={cms}\n          >\n            {showSearch ? (\n              <InstantSearch searchClient={searchClient} indexName={indexName}>\n                <Configure facetingAfterDistinct />\n                <div className=\"px-3 lg:px-0 container mx-auto max-w-screen-lg flex flex-wrap sm:flex-nowrap\">\n                  <div className=\"flex-shrink md:flex-shrink-0 md:pr-4 pb-4 w-full sm:w-auto\">\n                    <div className=\"flex items-center mb-5 mt-3\">\n                      <button\n                        type=\"button\"\n                        aria-pressed=\"false\"\n                        aria-labelledby=\"toggleLabel\"\n                        className={`${\n                          activeAlgolia ? 'bg-blue-500' : 'bg-gray-200'\n                        } relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\n                        onClick={handleActiveAlgolia}\n                      >\n                        <span className=\"sr-only\">Enable algolia</span>\n                        <span\n                          aria-hidden=\"true\"\n                          className={`${\n                            activeAlgolia ? 'translate-x-5' : 'translate-x-0'\n                          } inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200`}\n                        ></span>\n                      </button>\n                      <span className=\"ml-3\" id=\"toggleLabel\">\n                        <img src=\"/algolia.svg\" />\n                      </span>\n                    </div>\n                    <h2 className=\"text-gray-500 text-xs font-medium uppercase tracking-wide mb-4\">\n                      {locale[lang].categories}:\n                    </h2>\n                    <CustomRefinementList\n                      attribute={locale[lang].algoliaCategory}\n                    />\n                  </div>\n                  <div className=\"my-5 md:my-0 sm:ml-10 lg:col-span-2 w-full\">\n                    <div className=\"flex flex-row flex-wrap md:flex-nowrap items-center justify-center px-4 md:px-0 md:justify-between mt-1 mb-3.5 space-x-5\">\n                      <div className=\"w-full lg:w-9/12\">\n                        <CustomSearchBox />\n                      </div>\n                      <div className=\"flex flex-row items-center space-x-5 w-full md:w-1/2 lg:w-auto mt-1 md:mt-0\">\n                        <div className=\"flex-shrink-0\">\n                          <h2 className=\"text-gray-500 text-xs font-medium uppercase tracking-wide\">\n                            {locale[lang].sortBy}:\n                          </h2>\n                        </div>\n                        <div className=\"w-full flex-shrink\">\n                          <CustomSortBy\n                            defaultRefinement={indexName}\n                            items={[\n                              {\n                                value: `${indexName}`,\n                                label: locale[lang].featured,\n                              },\n                              {\n                                value: `${indexName}_price_desc`,\n                                label: locale[lang].highestPrice,\n                              },\n                              {\n                                value: `${indexName}_price_asc`,\n                                label: locale[lang].lowestPrice,\n                              },\n                            ]}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <CustomHits />\n                    <div className=\"mt-10\">\n                      <CustomPagination showFirst />\n                    </div>\n                  </div>\n                </div>\n              </InstantSearch>\n            ) : (\n              <Taxonomies\n                cms={cms}\n                taxonomies={taxonomies}\n                algoliaStatus={activeAlgolia}\n                activeAlgolia={handleActiveAlgolia}\n                searchEngine={!_.isEmpty(searchEngine)}\n              />\n            )}\n          </Layout>\n        </OrderContainer>\n      </OrderStorage>\n    </CommerceLayer>\n  )\n}\n\nexport default FilterPage\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: true,\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const {\n    BUILD_COUNTRY,\n    CL_CLIENT_ID,\n    CL_ENDPOINT,\n    BUILD_LANGUAGES,\n    BUILD_CMS,\n    BUILD_SEARCH_ENGINE,\n  } = process.env\n  try {\n    const lang = params?.lang as string\n    const cms = BUILD_CMS\n    const countryCode = params?.countryCode || BUILD_COUNTRY?.toLowerCase()\n    const countries = _.has(cmsFunctions, `${cms}AllCountries`)\n      ? await cmsFunctions[`${cms}AllCountries`](lang)\n      : {}\n    const buildLanguages = _.compact(\n      BUILD_LANGUAGES?.split(',').map((l) => {\n        const country = countries.find(\n          (country: Country) => country.code === parseLanguageCode(l)\n        )\n        return !_.isEmpty(country) ? country : null\n      })\n    )\n    const country = countries.find(\n      (country: Country) => country.code.toLowerCase() === countryCode\n    )\n    const taxonomies = _.has(cmsFunctions, `${cms}AllTaxonomies`)\n      ? await cmsFunctions[`${cms}AllTaxonomies`](country.catalog.id, lang)\n      : {}\n    return {\n      props: {\n        country,\n        countries,\n        taxonomies,\n        clientId: CL_CLIENT_ID,\n        endpoint: CL_ENDPOINT,\n        buildLanguages,\n        searchEngine: BUILD_SEARCH_ENGINE || '',\n        lang,\n        cms,\n      },\n      revalidate: 60,\n    }\n  } catch (err) {\n    console.error(err)\n    return {\n      props: {\n        clientId: CL_CLIENT_ID,\n        endpoint: CL_ENDPOINT,\n        errors: err.message,\n      },\n      revalidate: 60,\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}