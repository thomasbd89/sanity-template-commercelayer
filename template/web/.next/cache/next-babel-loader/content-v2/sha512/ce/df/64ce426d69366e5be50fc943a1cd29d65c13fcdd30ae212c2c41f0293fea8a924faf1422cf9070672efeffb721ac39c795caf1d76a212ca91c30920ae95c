{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/pages/index.tsx\";\nimport Error from \"next/error\";\nimport { useRouter } from \"next/router\";\nimport { getClient, usePreviewSubscription } from \"../utils/sanity\";\nimport ProductsPage from \"../components/ProductsPage\";\nconst query = `//groq\n  *[_type == \"product\" && defined(slug.current)]\n`;\n\nfunction IndexPage(props) {\n  const {\n    productsData,\n    preview\n  } = props;\n  const router = useRouter();\n\n  if (!router.isFallback && !productsData) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    data: products\n  } = usePreviewSubscription(query, {\n    initialData: productsData,\n    enabled: preview || router.query.preview !== null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(ProductsPage, {\n        products: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps({\n  params = {},\n  preview = false\n}) {\n  const productsData = await getClient(preview).fetch(query);\n  return {\n    props: {\n      preview,\n      productsData\n    }\n  };\n}\nexport default IndexPage;","map":{"version":3,"sources":["/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/pages/index.tsx"],"names":["Error","useRouter","getClient","usePreviewSubscription","ProductsPage","query","IndexPage","props","productsData","preview","router","isFallback","data","products","initialData","enabled","getStaticProps","params","fetch"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,sBAApB,QAAkD,iBAAlD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,KAAK,GAAI;AACf;AACA,CAFA;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BF,KAAlC;AACA,QAAMG,MAAM,GAAGT,SAAS,EAAxB;;AAEA,MAAI,CAACS,MAAM,CAACC,UAAR,IAAsB,CAACH,YAA3B,EAAyC;AACvC,wBAAO,QAAC,KAAD;AAAO,MAAA,UAAU,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAM;AAAEI,IAAAA,IAAI,EAAEC;AAAR,MAAqBV,sBAAsB,CAACE,KAAD,EAAQ;AACvDS,IAAAA,WAAW,EAAEN,YAD0C;AAEvDO,IAAAA,OAAO,EAAEN,OAAO,IAAIC,MAAM,CAACL,KAAP,CAAaI,OAAb,KAAyB;AAFU,GAAR,CAAjD;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEI;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,OAAO,eAAeG,cAAf,CAA8B;AAAEC,EAAAA,MAAM,GAAG,EAAX;AAAeR,EAAAA,OAAO,GAAG;AAAzB,CAA9B,EAAgE;AACrE,QAAMD,YAAY,GAAG,MAAMN,SAAS,CAACO,OAAD,CAAT,CAAmBS,KAAnB,CAAyBb,KAAzB,CAA3B;AAEA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLE,MAAAA,OADK;AAELD,MAAAA;AAFK;AADF,GAAP;AAMD;AAED,eAAeF,SAAf","sourcesContent":["import { GetStaticProps, GetStaticPaths, GetServerSideProps } from \"next\";\nimport Error from \"next/error\";\nimport { useRouter } from \"next/router\";\nimport { getClient, usePreviewSubscription } from \"../utils/sanity\";\nimport ProductsPage from \"../components/ProductsPage\";\n\nconst query = `//groq\n  *[_type == \"product\" && defined(slug.current)]\n`;\n\nfunction IndexPage(props) {\n  const { productsData, preview } = props;\n  const router = useRouter();\n\n  if (!router.isFallback && !productsData) {\n    return <Error statusCode={404} />;\n  }\n  const { data: products } = usePreviewSubscription(query, {\n    initialData: productsData,\n    enabled: preview || router.query.preview !== null,\n  });\n\n  return (\n    <div className=\"my-8\">\n      <div className=\"mt-4\">\n        <ProductsPage products={products} />\n      </div>\n    </div>\n  );\n}\n\nexport async function getStaticProps({ params = {}, preview = false }) {\n  const productsData = await getClient(preview).fetch(query);\n\n  return {\n    props: {\n      preview,\n      productsData,\n    },\n  };\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}