{"ast":null,"code":"import _ from 'lodash';\nexport var parseCategoryName = function parseCategoryName(categoryName) {\n  return categoryName.toLowerCase().trim().replace('&', 'and').split(' ').join('-');\n};\nexport var parseProductName = function parseProductName(productName) {\n  return _.first(productName.toLowerCase().trim().split(' ').join('-').split('-(')) || '';\n};\nexport var parseLanguageCode = function parseLanguageCode(languageCode, style, firstCode) {\n  var code = (firstCode ? _.first(languageCode === null || languageCode === void 0 ? void 0 : languageCode.split('-')) : _.last(languageCode === null || languageCode === void 0 ? void 0 : languageCode.split('-'))) || languageCode;\n  return style === 'toLowerCase' ? code === null || code === void 0 ? void 0 : code.toLowerCase() : code === null || code === void 0 ? void 0 : code.toUpperCase();\n};\nexport var parseLocale = function parseLocale(locale, replaceString, splitString) {\n  var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'uppercase';\n  if (!locale) return '';\n  var splitCode = locale.split(splitString);\n  var lastCode = style === 'uppercase' ? splitCode[1].toUpperCase() : splitCode[1].toLowerCase();\n  return \"\".concat(splitCode[0]).concat(replaceString).concat(lastCode);\n};\nexport var parseImg = function parseImg(url, cms) {\n  var sanityImg = cms === 'sanity' ? '&bg=FFF' : '';\n  return \"\".concat(url, \"?fm=jpg&q=75\").concat(sanityImg);\n};","map":{"version":3,"sources":["/Users/bolajiayodeji/Tunnel/CL/sanity-commercelayer-starter/template/web/utils/parser.ts"],"names":["_","parseCategoryName","categoryName","toLowerCase","trim","replace","split","join","parseProductName","productName","first","parseLanguageCode","languageCode","style","firstCode","code","last","toUpperCase","parseLocale","locale","replaceString","splitString","splitCode","lastCode","parseImg","url","cms","sanityImg"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,YAAD;AAAA,SAC/BA,YAAY,CAACC,WAAb,GAA2BC,IAA3B,GAAkCC,OAAlC,CAA0C,GAA1C,EAA+C,KAA/C,EAAsDC,KAAtD,CAA4D,GAA5D,EAAiEC,IAAjE,CAAsE,GAAtE,CAD+B;AAAA,CAA1B;AAGP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD;AAAA,SAC9BT,CAAC,CAACU,KAAF,CAAQD,WAAW,CAACN,WAAZ,GAA0BC,IAA1B,GAAiCE,KAAjC,CAAuC,GAAvC,EAA4CC,IAA5C,CAAiD,GAAjD,EAAsDD,KAAtD,CAA4D,IAA5D,CAAR,KACA,EAF8B;AAAA,CAAzB;AAGP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,YAD+B,EAE/BC,KAF+B,EAG/BC,SAH+B,EAIpB;AACX,MAAMC,IAAI,GACR,CAACD,SAAS,GACNd,CAAC,CAACU,KAAF,CAAQE,YAAR,aAAQA,YAAR,uBAAQA,YAAY,CAAEN,KAAd,CAAoB,GAApB,CAAR,CADM,GAENN,CAAC,CAACgB,IAAF,CAAOJ,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEN,KAAd,CAAoB,GAApB,CAAP,CAFJ,KAEyCM,YAH3C;AAIA,SAAOC,KAAK,KAAK,aAAV,GAA0BE,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAEZ,WAAN,EAA1B,GAAgDY,IAAhD,aAAgDA,IAAhD,uBAAgDA,IAAI,CAAEE,WAAN,EAAvD;AACD,CAVM;AAYP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACzBC,MADyB,EAEzBC,aAFyB,EAGzBC,WAHyB,EAKd;AAAA,MADXR,KACW,uEADwB,WACxB;AACX,MAAI,CAACM,MAAL,EAAa,OAAO,EAAP;AACb,MAAMG,SAAS,GAAGH,MAAM,CAACb,KAAP,CAAae,WAAb,CAAlB;AACA,MAAME,QAAQ,GACZV,KAAK,KAAK,WAAV,GACIS,SAAS,CAAC,CAAD,CAAT,CAAaL,WAAb,EADJ,GAEIK,SAAS,CAAC,CAAD,CAAT,CAAanB,WAAb,EAHN;AAIA,mBAAUmB,SAAS,CAAC,CAAD,CAAnB,SAAyBF,aAAzB,SAAyCG,QAAzC;AACD,CAbM;AAeP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAcC,GAAd,EAA8B;AACpD,MAAMC,SAAS,GAAGD,GAAG,KAAK,QAAR,GAAmB,SAAnB,GAA+B,EAAjD;AACA,mBAAUD,GAAV,yBAA4BE,SAA5B;AACD,CAHM","sourcesContent":["import _ from 'lodash'\n\nexport const parseCategoryName = (categoryName: string): string =>\n  categoryName.toLowerCase().trim().replace('&', 'and').split(' ').join('-')\n\nexport const parseProductName = (productName: string): string =>\n  _.first(productName.toLowerCase().trim().split(' ').join('-').split('-(')) ||\n  ''\nexport const parseLanguageCode = (\n  languageCode: string,\n  style?: 'toUpperCase' | 'toLowerCase',\n  firstCode?: boolean\n): string => {\n  const code =\n    (firstCode\n      ? _.first(languageCode?.split('-'))\n      : _.last(languageCode?.split('-'))) || languageCode\n  return style === 'toLowerCase' ? code?.toLowerCase() : code?.toUpperCase()\n}\n\nexport const parseLocale = (\n  locale: string,\n  replaceString: '-' | '_',\n  splitString: '-' | '_',\n  style: 'uppercase' | 'lowercase' = 'uppercase'\n): string => {\n  if (!locale) return ''\n  const splitCode = locale.split(splitString)\n  const lastCode =\n    style === 'uppercase'\n      ? splitCode[1].toUpperCase()\n      : splitCode[1].toLowerCase()\n  return `${splitCode[0]}${replaceString}${lastCode}`\n}\n\nexport const parseImg = (url: string, cms: string) => {\n  const sanityImg = cms === 'sanity' ? '&bg=FFF' : ''\n  return `${url}?fm=jpg&q=75${sanityImg}`\n}\n"]},"metadata":{},"sourceType":"module"}